// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: keymapping.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rv.Data {

  /// <summary>Holder for reflection information generated from keymapping.proto</summary>
  public static partial class KeymappingReflection {

    #region Descriptor
    /// <summary>File descriptor for keymapping.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KeymappingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBrZXltYXBwaW5nLnByb3RvEgdydi5kYXRhGhBiYXNpY1R5cGVzLnByb3Rv",
            "Iv0GCgpLZXlNYXBwaW5nEjYKCGtleWJvYXJkGAEgASgLMiQucnYuZGF0YS5L",
            "ZXlNYXBwaW5nLkNvbXB1dGVyS2V5Ym9hcmQSLgoEbWlkaRgCIAEoCzIgLnJ2",
            "LmRhdGEuS2V5TWFwcGluZy5NSURJS2V5Ym9hcmQSEwoJbWVudV9pdGVtGGQg",
            "ASgJSAASQAoWY2xlYXJfZ3JvdXBfaWRlbnRpZmllchhlIAEoCzIeLnJ2LmRh",
            "dGEuQ29sbGVjdGlvbkVsZW1lbnRUeXBlSAASOAoOY3VlX2lkZW50aWZpZXIY",
            "ZiABKAsyHi5ydi5kYXRhLkNvbGxlY3Rpb25FbGVtZW50VHlwZUgAEjoKEGdy",
            "b3VwX2lkZW50aWZpZXIYZyABKAsyHi5ydi5kYXRhLkNvbGxlY3Rpb25FbGVt",
            "ZW50VHlwZUgAEjoKEG1hY3JvX2lkZW50aWZpZXIYaCABKAsyHi5ydi5kYXRh",
            "LkNvbGxlY3Rpb25FbGVtZW50VHlwZUgAEjkKD3Byb3BfaWRlbnRpZmllchhp",
            "IAEoCzIeLnJ2LmRhdGEuQ29sbGVjdGlvbkVsZW1lbnRUeXBlSAASOgoQdGlt",
            "ZXJfaWRlbnRpZmllchhqIAEoCzIeLnJ2LmRhdGEuQ29sbGVjdGlvbkVsZW1l",
            "bnRUeXBlSAAasAIKEENvbXB1dGVyS2V5Ym9hcmQSFgoOa2V5X2VxdWl2YWxl",
            "bnQYASABKAkSWQoda2V5X2VxdWl2YWxlbnRfbW9kaWZpZXJfZmxhZ3MYAiAD",
            "KA4yMi5ydi5kYXRhLktleU1hcHBpbmcuQ29tcHV0ZXJLZXlib2FyZC5Nb2Rp",
            "ZmllckZsYWdzIqgBCg1Nb2RpZmllckZsYWdzEh0KGU1PRElGSUVSRkxBR1Nf",
            "Q09NTUFORF9LRVkQABIbChdNT0RJRklFUkZMQUdTX1NISUZUX0tFWRABEhwK",
            "GE1PRElGSUVSRkxBR1NfT1BUSU9OX0tFWRACEh0KGU1PRElGSUVSRkxBR1Nf",
            "Q09OVFJPTF9LRVkQAxIeChpNT0RJRklFUkZMQUdTX0ZVTkNUSU9OX0tFWRAE",
            "GkAKDE1JRElLZXlib2FyZBIPCgdjaGFubmVsGAEgASgFEg0KBXBpdGNoGAIg",
            "ASgFEhAKCHZlbG9jaXR5GAMgASgFQhIKEFRhcmdldElkZW50aWZpZXIi1AEK",
            "EktleU1hcHBpbmdEb2N1bWVudBIyChBhcHBsaWNhdGlvbl9pbmZvGAEgASgL",
            "MhgucnYuZGF0YS5BcHBsaWNhdGlvbkluZm8SKAoLa2V5bWFwcGluZ3MYAiAD",
            "KAsyEy5ydi5kYXRhLktleU1hcHBpbmcSLgoRbWFjb3Nfa2V5bWFwcGluZ3MY",
            "AyADKAsyEy5ydi5kYXRhLktleU1hcHBpbmcSMAoTd2luZG93c19rZXltYXBw",
            "aW5ncxgEIAMoCzITLnJ2LmRhdGEuS2V5TWFwcGluZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Rv.Data.BasicTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.KeyMapping), global::Rv.Data.KeyMapping.Parser, new[]{ "Keyboard", "Midi", "MenuItem", "ClearGroupIdentifier", "CueIdentifier", "GroupIdentifier", "MacroIdentifier", "PropIdentifier", "TimerIdentifier" }, new[]{ "TargetIdentifier" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.KeyMapping.Types.ComputerKeyboard), global::Rv.Data.KeyMapping.Types.ComputerKeyboard.Parser, new[]{ "KeyEquivalent", "KeyEquivalentModifierFlags" }, null, new[]{ typeof(global::Rv.Data.KeyMapping.Types.ComputerKeyboard.Types.ModifierFlags) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.KeyMapping.Types.MIDIKeyboard), global::Rv.Data.KeyMapping.Types.MIDIKeyboard.Parser, new[]{ "Channel", "Pitch", "Velocity" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.KeyMappingDocument), global::Rv.Data.KeyMappingDocument.Parser, new[]{ "ApplicationInfo", "Keymappings", "MacosKeymappings", "WindowsKeymappings" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class KeyMapping : pb::IMessage<KeyMapping>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyMapping> _parser = new pb::MessageParser<KeyMapping>(() => new KeyMapping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rv.Data.KeymappingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyMapping(KeyMapping other) : this() {
      keyboard_ = other.keyboard_ != null ? other.keyboard_.Clone() : null;
      midi_ = other.midi_ != null ? other.midi_.Clone() : null;
      switch (other.TargetIdentifierCase) {
        case TargetIdentifierOneofCase.MenuItem:
          MenuItem = other.MenuItem;
          break;
        case TargetIdentifierOneofCase.ClearGroupIdentifier:
          ClearGroupIdentifier = other.ClearGroupIdentifier.Clone();
          break;
        case TargetIdentifierOneofCase.CueIdentifier:
          CueIdentifier = other.CueIdentifier.Clone();
          break;
        case TargetIdentifierOneofCase.GroupIdentifier:
          GroupIdentifier = other.GroupIdentifier.Clone();
          break;
        case TargetIdentifierOneofCase.MacroIdentifier:
          MacroIdentifier = other.MacroIdentifier.Clone();
          break;
        case TargetIdentifierOneofCase.PropIdentifier:
          PropIdentifier = other.PropIdentifier.Clone();
          break;
        case TargetIdentifierOneofCase.TimerIdentifier:
          TimerIdentifier = other.TimerIdentifier.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyMapping Clone() {
      return new KeyMapping(this);
    }

    /// <summary>Field number for the "keyboard" field.</summary>
    public const int KeyboardFieldNumber = 1;
    private global::Rv.Data.KeyMapping.Types.ComputerKeyboard keyboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.KeyMapping.Types.ComputerKeyboard Keyboard {
      get { return keyboard_; }
      set {
        keyboard_ = value;
      }
    }

    /// <summary>Field number for the "midi" field.</summary>
    public const int MidiFieldNumber = 2;
    private global::Rv.Data.KeyMapping.Types.MIDIKeyboard midi_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.KeyMapping.Types.MIDIKeyboard Midi {
      get { return midi_; }
      set {
        midi_ = value;
      }
    }

    /// <summary>Field number for the "menu_item" field.</summary>
    public const int MenuItemFieldNumber = 100;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MenuItem {
      get { return targetIdentifierCase_ == TargetIdentifierOneofCase.MenuItem ? (string) targetIdentifier_ : ""; }
      set {
        targetIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetIdentifierCase_ = TargetIdentifierOneofCase.MenuItem;
      }
    }

    /// <summary>Field number for the "clear_group_identifier" field.</summary>
    public const int ClearGroupIdentifierFieldNumber = 101;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.CollectionElementType ClearGroupIdentifier {
      get { return targetIdentifierCase_ == TargetIdentifierOneofCase.ClearGroupIdentifier ? (global::Rv.Data.CollectionElementType) targetIdentifier_ : null; }
      set {
        targetIdentifier_ = value;
        targetIdentifierCase_ = value == null ? TargetIdentifierOneofCase.None : TargetIdentifierOneofCase.ClearGroupIdentifier;
      }
    }

    /// <summary>Field number for the "cue_identifier" field.</summary>
    public const int CueIdentifierFieldNumber = 102;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.CollectionElementType CueIdentifier {
      get { return targetIdentifierCase_ == TargetIdentifierOneofCase.CueIdentifier ? (global::Rv.Data.CollectionElementType) targetIdentifier_ : null; }
      set {
        targetIdentifier_ = value;
        targetIdentifierCase_ = value == null ? TargetIdentifierOneofCase.None : TargetIdentifierOneofCase.CueIdentifier;
      }
    }

    /// <summary>Field number for the "group_identifier" field.</summary>
    public const int GroupIdentifierFieldNumber = 103;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.CollectionElementType GroupIdentifier {
      get { return targetIdentifierCase_ == TargetIdentifierOneofCase.GroupIdentifier ? (global::Rv.Data.CollectionElementType) targetIdentifier_ : null; }
      set {
        targetIdentifier_ = value;
        targetIdentifierCase_ = value == null ? TargetIdentifierOneofCase.None : TargetIdentifierOneofCase.GroupIdentifier;
      }
    }

    /// <summary>Field number for the "macro_identifier" field.</summary>
    public const int MacroIdentifierFieldNumber = 104;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.CollectionElementType MacroIdentifier {
      get { return targetIdentifierCase_ == TargetIdentifierOneofCase.MacroIdentifier ? (global::Rv.Data.CollectionElementType) targetIdentifier_ : null; }
      set {
        targetIdentifier_ = value;
        targetIdentifierCase_ = value == null ? TargetIdentifierOneofCase.None : TargetIdentifierOneofCase.MacroIdentifier;
      }
    }

    /// <summary>Field number for the "prop_identifier" field.</summary>
    public const int PropIdentifierFieldNumber = 105;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.CollectionElementType PropIdentifier {
      get { return targetIdentifierCase_ == TargetIdentifierOneofCase.PropIdentifier ? (global::Rv.Data.CollectionElementType) targetIdentifier_ : null; }
      set {
        targetIdentifier_ = value;
        targetIdentifierCase_ = value == null ? TargetIdentifierOneofCase.None : TargetIdentifierOneofCase.PropIdentifier;
      }
    }

    /// <summary>Field number for the "timer_identifier" field.</summary>
    public const int TimerIdentifierFieldNumber = 106;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.CollectionElementType TimerIdentifier {
      get { return targetIdentifierCase_ == TargetIdentifierOneofCase.TimerIdentifier ? (global::Rv.Data.CollectionElementType) targetIdentifier_ : null; }
      set {
        targetIdentifier_ = value;
        targetIdentifierCase_ = value == null ? TargetIdentifierOneofCase.None : TargetIdentifierOneofCase.TimerIdentifier;
      }
    }

    private object targetIdentifier_;
    /// <summary>Enum of possible cases for the "TargetIdentifier" oneof.</summary>
    public enum TargetIdentifierOneofCase {
      None = 0,
      MenuItem = 100,
      ClearGroupIdentifier = 101,
      CueIdentifier = 102,
      GroupIdentifier = 103,
      MacroIdentifier = 104,
      PropIdentifier = 105,
      TimerIdentifier = 106,
    }
    private TargetIdentifierOneofCase targetIdentifierCase_ = TargetIdentifierOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetIdentifierOneofCase TargetIdentifierCase {
      get { return targetIdentifierCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetIdentifier() {
      targetIdentifierCase_ = TargetIdentifierOneofCase.None;
      targetIdentifier_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Keyboard, other.Keyboard)) return false;
      if (!object.Equals(Midi, other.Midi)) return false;
      if (MenuItem != other.MenuItem) return false;
      if (!object.Equals(ClearGroupIdentifier, other.ClearGroupIdentifier)) return false;
      if (!object.Equals(CueIdentifier, other.CueIdentifier)) return false;
      if (!object.Equals(GroupIdentifier, other.GroupIdentifier)) return false;
      if (!object.Equals(MacroIdentifier, other.MacroIdentifier)) return false;
      if (!object.Equals(PropIdentifier, other.PropIdentifier)) return false;
      if (!object.Equals(TimerIdentifier, other.TimerIdentifier)) return false;
      if (TargetIdentifierCase != other.TargetIdentifierCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (keyboard_ != null) hash ^= Keyboard.GetHashCode();
      if (midi_ != null) hash ^= Midi.GetHashCode();
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.MenuItem) hash ^= MenuItem.GetHashCode();
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.ClearGroupIdentifier) hash ^= ClearGroupIdentifier.GetHashCode();
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.CueIdentifier) hash ^= CueIdentifier.GetHashCode();
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.GroupIdentifier) hash ^= GroupIdentifier.GetHashCode();
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.MacroIdentifier) hash ^= MacroIdentifier.GetHashCode();
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.PropIdentifier) hash ^= PropIdentifier.GetHashCode();
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.TimerIdentifier) hash ^= TimerIdentifier.GetHashCode();
      hash ^= (int) targetIdentifierCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (keyboard_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Keyboard);
      }
      if (midi_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Midi);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.MenuItem) {
        output.WriteRawTag(162, 6);
        output.WriteString(MenuItem);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.ClearGroupIdentifier) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(ClearGroupIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.CueIdentifier) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(CueIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.GroupIdentifier) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(GroupIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.MacroIdentifier) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(MacroIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.PropIdentifier) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(PropIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.TimerIdentifier) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(TimerIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (keyboard_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Keyboard);
      }
      if (midi_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Midi);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.MenuItem) {
        output.WriteRawTag(162, 6);
        output.WriteString(MenuItem);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.ClearGroupIdentifier) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(ClearGroupIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.CueIdentifier) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(CueIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.GroupIdentifier) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(GroupIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.MacroIdentifier) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(MacroIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.PropIdentifier) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(PropIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.TimerIdentifier) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(TimerIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (keyboard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Keyboard);
      }
      if (midi_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Midi);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.MenuItem) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MenuItem);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.ClearGroupIdentifier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClearGroupIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.CueIdentifier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CueIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.GroupIdentifier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GroupIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.MacroIdentifier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MacroIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.PropIdentifier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PropIdentifier);
      }
      if (targetIdentifierCase_ == TargetIdentifierOneofCase.TimerIdentifier) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimerIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyMapping other) {
      if (other == null) {
        return;
      }
      if (other.keyboard_ != null) {
        if (keyboard_ == null) {
          Keyboard = new global::Rv.Data.KeyMapping.Types.ComputerKeyboard();
        }
        Keyboard.MergeFrom(other.Keyboard);
      }
      if (other.midi_ != null) {
        if (midi_ == null) {
          Midi = new global::Rv.Data.KeyMapping.Types.MIDIKeyboard();
        }
        Midi.MergeFrom(other.Midi);
      }
      switch (other.TargetIdentifierCase) {
        case TargetIdentifierOneofCase.MenuItem:
          MenuItem = other.MenuItem;
          break;
        case TargetIdentifierOneofCase.ClearGroupIdentifier:
          if (ClearGroupIdentifier == null) {
            ClearGroupIdentifier = new global::Rv.Data.CollectionElementType();
          }
          ClearGroupIdentifier.MergeFrom(other.ClearGroupIdentifier);
          break;
        case TargetIdentifierOneofCase.CueIdentifier:
          if (CueIdentifier == null) {
            CueIdentifier = new global::Rv.Data.CollectionElementType();
          }
          CueIdentifier.MergeFrom(other.CueIdentifier);
          break;
        case TargetIdentifierOneofCase.GroupIdentifier:
          if (GroupIdentifier == null) {
            GroupIdentifier = new global::Rv.Data.CollectionElementType();
          }
          GroupIdentifier.MergeFrom(other.GroupIdentifier);
          break;
        case TargetIdentifierOneofCase.MacroIdentifier:
          if (MacroIdentifier == null) {
            MacroIdentifier = new global::Rv.Data.CollectionElementType();
          }
          MacroIdentifier.MergeFrom(other.MacroIdentifier);
          break;
        case TargetIdentifierOneofCase.PropIdentifier:
          if (PropIdentifier == null) {
            PropIdentifier = new global::Rv.Data.CollectionElementType();
          }
          PropIdentifier.MergeFrom(other.PropIdentifier);
          break;
        case TargetIdentifierOneofCase.TimerIdentifier:
          if (TimerIdentifier == null) {
            TimerIdentifier = new global::Rv.Data.CollectionElementType();
          }
          TimerIdentifier.MergeFrom(other.TimerIdentifier);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (keyboard_ == null) {
              Keyboard = new global::Rv.Data.KeyMapping.Types.ComputerKeyboard();
            }
            input.ReadMessage(Keyboard);
            break;
          }
          case 18: {
            if (midi_ == null) {
              Midi = new global::Rv.Data.KeyMapping.Types.MIDIKeyboard();
            }
            input.ReadMessage(Midi);
            break;
          }
          case 802: {
            MenuItem = input.ReadString();
            break;
          }
          case 810: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.ClearGroupIdentifier) {
              subBuilder.MergeFrom(ClearGroupIdentifier);
            }
            input.ReadMessage(subBuilder);
            ClearGroupIdentifier = subBuilder;
            break;
          }
          case 818: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.CueIdentifier) {
              subBuilder.MergeFrom(CueIdentifier);
            }
            input.ReadMessage(subBuilder);
            CueIdentifier = subBuilder;
            break;
          }
          case 826: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.GroupIdentifier) {
              subBuilder.MergeFrom(GroupIdentifier);
            }
            input.ReadMessage(subBuilder);
            GroupIdentifier = subBuilder;
            break;
          }
          case 834: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.MacroIdentifier) {
              subBuilder.MergeFrom(MacroIdentifier);
            }
            input.ReadMessage(subBuilder);
            MacroIdentifier = subBuilder;
            break;
          }
          case 842: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.PropIdentifier) {
              subBuilder.MergeFrom(PropIdentifier);
            }
            input.ReadMessage(subBuilder);
            PropIdentifier = subBuilder;
            break;
          }
          case 850: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.TimerIdentifier) {
              subBuilder.MergeFrom(TimerIdentifier);
            }
            input.ReadMessage(subBuilder);
            TimerIdentifier = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (keyboard_ == null) {
              Keyboard = new global::Rv.Data.KeyMapping.Types.ComputerKeyboard();
            }
            input.ReadMessage(Keyboard);
            break;
          }
          case 18: {
            if (midi_ == null) {
              Midi = new global::Rv.Data.KeyMapping.Types.MIDIKeyboard();
            }
            input.ReadMessage(Midi);
            break;
          }
          case 802: {
            MenuItem = input.ReadString();
            break;
          }
          case 810: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.ClearGroupIdentifier) {
              subBuilder.MergeFrom(ClearGroupIdentifier);
            }
            input.ReadMessage(subBuilder);
            ClearGroupIdentifier = subBuilder;
            break;
          }
          case 818: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.CueIdentifier) {
              subBuilder.MergeFrom(CueIdentifier);
            }
            input.ReadMessage(subBuilder);
            CueIdentifier = subBuilder;
            break;
          }
          case 826: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.GroupIdentifier) {
              subBuilder.MergeFrom(GroupIdentifier);
            }
            input.ReadMessage(subBuilder);
            GroupIdentifier = subBuilder;
            break;
          }
          case 834: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.MacroIdentifier) {
              subBuilder.MergeFrom(MacroIdentifier);
            }
            input.ReadMessage(subBuilder);
            MacroIdentifier = subBuilder;
            break;
          }
          case 842: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.PropIdentifier) {
              subBuilder.MergeFrom(PropIdentifier);
            }
            input.ReadMessage(subBuilder);
            PropIdentifier = subBuilder;
            break;
          }
          case 850: {
            global::Rv.Data.CollectionElementType subBuilder = new global::Rv.Data.CollectionElementType();
            if (targetIdentifierCase_ == TargetIdentifierOneofCase.TimerIdentifier) {
              subBuilder.MergeFrom(TimerIdentifier);
            }
            input.ReadMessage(subBuilder);
            TimerIdentifier = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the KeyMapping message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class ComputerKeyboard : pb::IMessage<ComputerKeyboard>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ComputerKeyboard> _parser = new pb::MessageParser<ComputerKeyboard>(() => new ComputerKeyboard());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ComputerKeyboard> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.KeyMapping.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ComputerKeyboard() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ComputerKeyboard(ComputerKeyboard other) : this() {
          keyEquivalent_ = other.keyEquivalent_;
          keyEquivalentModifierFlags_ = other.keyEquivalentModifierFlags_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ComputerKeyboard Clone() {
          return new ComputerKeyboard(this);
        }

        /// <summary>Field number for the "key_equivalent" field.</summary>
        public const int KeyEquivalentFieldNumber = 1;
        private string keyEquivalent_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string KeyEquivalent {
          get { return keyEquivalent_; }
          set {
            keyEquivalent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "key_equivalent_modifier_flags" field.</summary>
        public const int KeyEquivalentModifierFlagsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Rv.Data.KeyMapping.Types.ComputerKeyboard.Types.ModifierFlags> _repeated_keyEquivalentModifierFlags_codec
            = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Rv.Data.KeyMapping.Types.ComputerKeyboard.Types.ModifierFlags) x);
        private readonly pbc::RepeatedField<global::Rv.Data.KeyMapping.Types.ComputerKeyboard.Types.ModifierFlags> keyEquivalentModifierFlags_ = new pbc::RepeatedField<global::Rv.Data.KeyMapping.Types.ComputerKeyboard.Types.ModifierFlags>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Rv.Data.KeyMapping.Types.ComputerKeyboard.Types.ModifierFlags> KeyEquivalentModifierFlags {
          get { return keyEquivalentModifierFlags_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ComputerKeyboard);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ComputerKeyboard other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (KeyEquivalent != other.KeyEquivalent) return false;
          if(!keyEquivalentModifierFlags_.Equals(other.keyEquivalentModifierFlags_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (KeyEquivalent.Length != 0) hash ^= KeyEquivalent.GetHashCode();
          hash ^= keyEquivalentModifierFlags_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (KeyEquivalent.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(KeyEquivalent);
          }
          keyEquivalentModifierFlags_.WriteTo(output, _repeated_keyEquivalentModifierFlags_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (KeyEquivalent.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(KeyEquivalent);
          }
          keyEquivalentModifierFlags_.WriteTo(ref output, _repeated_keyEquivalentModifierFlags_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (KeyEquivalent.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyEquivalent);
          }
          size += keyEquivalentModifierFlags_.CalculateSize(_repeated_keyEquivalentModifierFlags_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ComputerKeyboard other) {
          if (other == null) {
            return;
          }
          if (other.KeyEquivalent.Length != 0) {
            KeyEquivalent = other.KeyEquivalent;
          }
          keyEquivalentModifierFlags_.Add(other.keyEquivalentModifierFlags_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                KeyEquivalent = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                keyEquivalentModifierFlags_.AddEntriesFrom(input, _repeated_keyEquivalentModifierFlags_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                KeyEquivalent = input.ReadString();
                break;
              }
              case 18:
              case 16: {
                keyEquivalentModifierFlags_.AddEntriesFrom(ref input, _repeated_keyEquivalentModifierFlags_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the ComputerKeyboard message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum ModifierFlags {
            [pbr::OriginalName("MODIFIERFLAGS_COMMAND_KEY")] CommandKey = 0,
            [pbr::OriginalName("MODIFIERFLAGS_SHIFT_KEY")] ShiftKey = 1,
            [pbr::OriginalName("MODIFIERFLAGS_OPTION_KEY")] OptionKey = 2,
            [pbr::OriginalName("MODIFIERFLAGS_CONTROL_KEY")] ControlKey = 3,
            [pbr::OriginalName("MODIFIERFLAGS_FUNCTION_KEY")] FunctionKey = 4,
          }

        }
        #endregion

      }

      public sealed partial class MIDIKeyboard : pb::IMessage<MIDIKeyboard>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MIDIKeyboard> _parser = new pb::MessageParser<MIDIKeyboard>(() => new MIDIKeyboard());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MIDIKeyboard> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.KeyMapping.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MIDIKeyboard() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MIDIKeyboard(MIDIKeyboard other) : this() {
          channel_ = other.channel_;
          pitch_ = other.pitch_;
          velocity_ = other.velocity_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MIDIKeyboard Clone() {
          return new MIDIKeyboard(this);
        }

        /// <summary>Field number for the "channel" field.</summary>
        public const int ChannelFieldNumber = 1;
        private int channel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Channel {
          get { return channel_; }
          set {
            channel_ = value;
          }
        }

        /// <summary>Field number for the "pitch" field.</summary>
        public const int PitchFieldNumber = 2;
        private int pitch_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Pitch {
          get { return pitch_; }
          set {
            pitch_ = value;
          }
        }

        /// <summary>Field number for the "velocity" field.</summary>
        public const int VelocityFieldNumber = 3;
        private int velocity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Velocity {
          get { return velocity_; }
          set {
            velocity_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MIDIKeyboard);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MIDIKeyboard other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Channel != other.Channel) return false;
          if (Pitch != other.Pitch) return false;
          if (Velocity != other.Velocity) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Channel != 0) hash ^= Channel.GetHashCode();
          if (Pitch != 0) hash ^= Pitch.GetHashCode();
          if (Velocity != 0) hash ^= Velocity.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Channel != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Channel);
          }
          if (Pitch != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Pitch);
          }
          if (Velocity != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Velocity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Channel != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Channel);
          }
          if (Pitch != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Pitch);
          }
          if (Velocity != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Velocity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Channel != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
          }
          if (Pitch != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pitch);
          }
          if (Velocity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Velocity);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MIDIKeyboard other) {
          if (other == null) {
            return;
          }
          if (other.Channel != 0) {
            Channel = other.Channel;
          }
          if (other.Pitch != 0) {
            Pitch = other.Pitch;
          }
          if (other.Velocity != 0) {
            Velocity = other.Velocity;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Channel = input.ReadInt32();
                break;
              }
              case 16: {
                Pitch = input.ReadInt32();
                break;
              }
              case 24: {
                Velocity = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Channel = input.ReadInt32();
                break;
              }
              case 16: {
                Pitch = input.ReadInt32();
                break;
              }
              case 24: {
                Velocity = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class KeyMappingDocument : pb::IMessage<KeyMappingDocument>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyMappingDocument> _parser = new pb::MessageParser<KeyMappingDocument>(() => new KeyMappingDocument());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyMappingDocument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rv.Data.KeymappingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyMappingDocument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyMappingDocument(KeyMappingDocument other) : this() {
      applicationInfo_ = other.applicationInfo_ != null ? other.applicationInfo_.Clone() : null;
      keymappings_ = other.keymappings_.Clone();
      macosKeymappings_ = other.macosKeymappings_.Clone();
      windowsKeymappings_ = other.windowsKeymappings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyMappingDocument Clone() {
      return new KeyMappingDocument(this);
    }

    /// <summary>Field number for the "application_info" field.</summary>
    public const int ApplicationInfoFieldNumber = 1;
    private global::Rv.Data.ApplicationInfo applicationInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.ApplicationInfo ApplicationInfo {
      get { return applicationInfo_; }
      set {
        applicationInfo_ = value;
      }
    }

    /// <summary>Field number for the "keymappings" field.</summary>
    public const int KeymappingsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rv.Data.KeyMapping> _repeated_keymappings_codec
        = pb::FieldCodec.ForMessage(18, global::Rv.Data.KeyMapping.Parser);
    private readonly pbc::RepeatedField<global::Rv.Data.KeyMapping> keymappings_ = new pbc::RepeatedField<global::Rv.Data.KeyMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Rv.Data.KeyMapping> Keymappings {
      get { return keymappings_; }
    }

    /// <summary>Field number for the "macos_keymappings" field.</summary>
    public const int MacosKeymappingsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Rv.Data.KeyMapping> _repeated_macosKeymappings_codec
        = pb::FieldCodec.ForMessage(26, global::Rv.Data.KeyMapping.Parser);
    private readonly pbc::RepeatedField<global::Rv.Data.KeyMapping> macosKeymappings_ = new pbc::RepeatedField<global::Rv.Data.KeyMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Rv.Data.KeyMapping> MacosKeymappings {
      get { return macosKeymappings_; }
    }

    /// <summary>Field number for the "windows_keymappings" field.</summary>
    public const int WindowsKeymappingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Rv.Data.KeyMapping> _repeated_windowsKeymappings_codec
        = pb::FieldCodec.ForMessage(34, global::Rv.Data.KeyMapping.Parser);
    private readonly pbc::RepeatedField<global::Rv.Data.KeyMapping> windowsKeymappings_ = new pbc::RepeatedField<global::Rv.Data.KeyMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Rv.Data.KeyMapping> WindowsKeymappings {
      get { return windowsKeymappings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyMappingDocument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyMappingDocument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ApplicationInfo, other.ApplicationInfo)) return false;
      if(!keymappings_.Equals(other.keymappings_)) return false;
      if(!macosKeymappings_.Equals(other.macosKeymappings_)) return false;
      if(!windowsKeymappings_.Equals(other.windowsKeymappings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (applicationInfo_ != null) hash ^= ApplicationInfo.GetHashCode();
      hash ^= keymappings_.GetHashCode();
      hash ^= macosKeymappings_.GetHashCode();
      hash ^= windowsKeymappings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (applicationInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ApplicationInfo);
      }
      keymappings_.WriteTo(output, _repeated_keymappings_codec);
      macosKeymappings_.WriteTo(output, _repeated_macosKeymappings_codec);
      windowsKeymappings_.WriteTo(output, _repeated_windowsKeymappings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (applicationInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ApplicationInfo);
      }
      keymappings_.WriteTo(ref output, _repeated_keymappings_codec);
      macosKeymappings_.WriteTo(ref output, _repeated_macosKeymappings_codec);
      windowsKeymappings_.WriteTo(ref output, _repeated_windowsKeymappings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (applicationInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplicationInfo);
      }
      size += keymappings_.CalculateSize(_repeated_keymappings_codec);
      size += macosKeymappings_.CalculateSize(_repeated_macosKeymappings_codec);
      size += windowsKeymappings_.CalculateSize(_repeated_windowsKeymappings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyMappingDocument other) {
      if (other == null) {
        return;
      }
      if (other.applicationInfo_ != null) {
        if (applicationInfo_ == null) {
          ApplicationInfo = new global::Rv.Data.ApplicationInfo();
        }
        ApplicationInfo.MergeFrom(other.ApplicationInfo);
      }
      keymappings_.Add(other.keymappings_);
      macosKeymappings_.Add(other.macosKeymappings_);
      windowsKeymappings_.Add(other.windowsKeymappings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (applicationInfo_ == null) {
              ApplicationInfo = new global::Rv.Data.ApplicationInfo();
            }
            input.ReadMessage(ApplicationInfo);
            break;
          }
          case 18: {
            keymappings_.AddEntriesFrom(input, _repeated_keymappings_codec);
            break;
          }
          case 26: {
            macosKeymappings_.AddEntriesFrom(input, _repeated_macosKeymappings_codec);
            break;
          }
          case 34: {
            windowsKeymappings_.AddEntriesFrom(input, _repeated_windowsKeymappings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (applicationInfo_ == null) {
              ApplicationInfo = new global::Rv.Data.ApplicationInfo();
            }
            input.ReadMessage(ApplicationInfo);
            break;
          }
          case 18: {
            keymappings_.AddEntriesFrom(ref input, _repeated_keymappings_codec);
            break;
          }
          case 26: {
            macosKeymappings_.AddEntriesFrom(ref input, _repeated_macosKeymappings_codec);
            break;
          }
          case 34: {
            windowsKeymappings_.AddEntriesFrom(ref input, _repeated_windowsKeymappings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
