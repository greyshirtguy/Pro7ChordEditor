// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: audio.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rv.Data {

  /// <summary>Holder for reflection information generated from audio.proto</summary>
  public static partial class AudioReflection {

    #region Descriptor
    /// <summary>File descriptor for audio.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AudioReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgthdWRpby5wcm90bxIHcnYuZGF0YRoQYmFzaWNUeXBlcy5wcm90byKqCAoF",
            "QXVkaW8ajQEKEFNldHRpbmdzRG9jdW1lbnQSMAoMb3V0cHV0X3NldHVwGAEg",
            "ASgLMhoucnYuZGF0YS5BdWRpby5PdXRwdXRTZXR1cBItCg5tb25pdG9yX2Rl",
            "dmljZRgCIAEoCzIVLnJ2LmRhdGEuQXVkaW8uRGV2aWNlEhgKEG1vbml0b3Jf",
            "b25fbWFpbnMYAyABKAga9QEKC091dHB1dFNldHVwEhsKBHV1aWQYASABKAsy",
            "DS5ydi5kYXRhLlVVSUQSKwoMYXVkaW9fZGV2aWNlGAIgASgLMhUucnYuZGF0",
            "YS5BdWRpby5EZXZpY2USNwoQbG9naWNhbF9jaGFubmVscxgDIAMoCzIdLnJ2",
            "LmRhdGEuQXVkaW8uTG9naWNhbENoYW5uZWwSEwoLYXVkaW9fZGVsYXkYBCAB",
            "KAESFAoMbWFzdGVyX2xldmVsGAUgASgBEjgKEHBoeXNpY2FsX2NoYW5lbHMY",
            "BiADKAsyHi5ydi5kYXRhLkF1ZGlvLlBoeXNpY2FsQ2hhbm5lbBqcAgoGRGV2",
            "aWNlEgwKBG5hbWUYASABKAkSEAoIcmVuZGVySUQYAiABKAkSGwoTaW5wdXRf",
            "Y2hhbm5lbF9jb3VudBgDIAEoDRIcChRvdXRwdXRfY2hhbm5lbF9jb3VudBgE",
            "IAEoDRItCgdmb3JtYXRzGAUgAygLMhwucnYuZGF0YS5BdWRpby5EZXZpY2Uu",
            "Rm9ybWF0GocBCgZGb3JtYXQSEwoLc2FtcGxlX3JhdGUYASABKA0SEQoJYml0",
            "X2RlcHRoGAIgASgNEi8KBHR5cGUYAyABKA4yIS5ydi5kYXRhLkF1ZGlvLkRl",
            "dmljZS5Gb3JtYXQuVHlwZSIkCgRUeXBlEgwKCFRZUEVfSU5UEAASDgoKVFlQ",
            "RV9GTE9BVBABGpgCCg5Mb2dpY2FsQ2hhbm5lbBIbCgR1dWlkGAEgASgLMg0u",
            "cnYuZGF0YS5VVUlEEgwKBG5hbWUYAiABKAkSDQoFaW5kZXgYAyABKA0SDQoF",
            "bXV0ZWQYBCABKAgSTAoXcGh5c2ljYWxfYXVkaW9fY2hhbm5lbHMYBSADKAsy",
            "Ky5ydi5kYXRhLkF1ZGlvLkxvZ2ljYWxDaGFubmVsLk91dHB1dENoYW5uZWwS",
            "DAoEc29sbxgGIAEoCBIRCgl0ZXN0X3RvbmUYByABKAgaTgoNT3V0cHV0Q2hh",
            "bm5lbBINCgVpbmRleBgBIAEoDRINCgVtdXRlZBgCIAEoCBIMCgRzb2xvGAMg",
            "ASgIEhEKCXRlc3RfdG9uZRgEIAEoCBpfCg9QaHlzaWNhbENoYW5uZWwSDQoF",
            "aW5kZXgYASABKA0SEwoLbXV0ZV9lbmFibGUYAiABKAgSEwoLc29sb19lbmFi",
            "bGUYAyABKAgSEwoLdG9uZV9lbmFibGUYBCABKAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Rv.Data.BasicTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Audio), global::Rv.Data.Audio.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Audio.Types.SettingsDocument), global::Rv.Data.Audio.Types.SettingsDocument.Parser, new[]{ "OutputSetup", "MonitorDevice", "MonitorOnMains" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Audio.Types.OutputSetup), global::Rv.Data.Audio.Types.OutputSetup.Parser, new[]{ "Uuid", "AudioDevice", "LogicalChannels", "AudioDelay", "MasterLevel", "PhysicalChanels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Audio.Types.Device), global::Rv.Data.Audio.Types.Device.Parser, new[]{ "Name", "RenderID", "InputChannelCount", "OutputChannelCount", "Formats" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Audio.Types.Device.Types.Format), global::Rv.Data.Audio.Types.Device.Types.Format.Parser, new[]{ "SampleRate", "BitDepth", "Type" }, null, new[]{ typeof(global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Audio.Types.LogicalChannel), global::Rv.Data.Audio.Types.LogicalChannel.Parser, new[]{ "Uuid", "Name", "Index", "Muted", "PhysicalAudioChannels", "Solo", "TestTone" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Audio.Types.LogicalChannel.Types.OutputChannel), global::Rv.Data.Audio.Types.LogicalChannel.Types.OutputChannel.Parser, new[]{ "Index", "Muted", "Solo", "TestTone" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Audio.Types.PhysicalChannel), global::Rv.Data.Audio.Types.PhysicalChannel.Parser, new[]{ "Index", "MuteEnable", "SoloEnable", "ToneEnable" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Audio : pb::IMessage<Audio>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Audio> _parser = new pb::MessageParser<Audio>(() => new Audio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Audio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rv.Data.AudioReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Audio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Audio(Audio other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Audio Clone() {
      return new Audio(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Audio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Audio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Audio other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Audio message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class SettingsDocument : pb::IMessage<SettingsDocument>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SettingsDocument> _parser = new pb::MessageParser<SettingsDocument>(() => new SettingsDocument());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SettingsDocument> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.Audio.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SettingsDocument() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SettingsDocument(SettingsDocument other) : this() {
          outputSetup_ = other.outputSetup_ != null ? other.outputSetup_.Clone() : null;
          monitorDevice_ = other.monitorDevice_ != null ? other.monitorDevice_.Clone() : null;
          monitorOnMains_ = other.monitorOnMains_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SettingsDocument Clone() {
          return new SettingsDocument(this);
        }

        /// <summary>Field number for the "output_setup" field.</summary>
        public const int OutputSetupFieldNumber = 1;
        private global::Rv.Data.Audio.Types.OutputSetup outputSetup_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Audio.Types.OutputSetup OutputSetup {
          get { return outputSetup_; }
          set {
            outputSetup_ = value;
          }
        }

        /// <summary>Field number for the "monitor_device" field.</summary>
        public const int MonitorDeviceFieldNumber = 2;
        private global::Rv.Data.Audio.Types.Device monitorDevice_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Audio.Types.Device MonitorDevice {
          get { return monitorDevice_; }
          set {
            monitorDevice_ = value;
          }
        }

        /// <summary>Field number for the "monitor_on_mains" field.</summary>
        public const int MonitorOnMainsFieldNumber = 3;
        private bool monitorOnMains_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool MonitorOnMains {
          get { return monitorOnMains_; }
          set {
            monitorOnMains_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SettingsDocument);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SettingsDocument other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(OutputSetup, other.OutputSetup)) return false;
          if (!object.Equals(MonitorDevice, other.MonitorDevice)) return false;
          if (MonitorOnMains != other.MonitorOnMains) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (outputSetup_ != null) hash ^= OutputSetup.GetHashCode();
          if (monitorDevice_ != null) hash ^= MonitorDevice.GetHashCode();
          if (MonitorOnMains != false) hash ^= MonitorOnMains.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (outputSetup_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(OutputSetup);
          }
          if (monitorDevice_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MonitorDevice);
          }
          if (MonitorOnMains != false) {
            output.WriteRawTag(24);
            output.WriteBool(MonitorOnMains);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (outputSetup_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(OutputSetup);
          }
          if (monitorDevice_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MonitorDevice);
          }
          if (MonitorOnMains != false) {
            output.WriteRawTag(24);
            output.WriteBool(MonitorOnMains);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (outputSetup_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputSetup);
          }
          if (monitorDevice_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonitorDevice);
          }
          if (MonitorOnMains != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SettingsDocument other) {
          if (other == null) {
            return;
          }
          if (other.outputSetup_ != null) {
            if (outputSetup_ == null) {
              OutputSetup = new global::Rv.Data.Audio.Types.OutputSetup();
            }
            OutputSetup.MergeFrom(other.OutputSetup);
          }
          if (other.monitorDevice_ != null) {
            if (monitorDevice_ == null) {
              MonitorDevice = new global::Rv.Data.Audio.Types.Device();
            }
            MonitorDevice.MergeFrom(other.MonitorDevice);
          }
          if (other.MonitorOnMains != false) {
            MonitorOnMains = other.MonitorOnMains;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (outputSetup_ == null) {
                  OutputSetup = new global::Rv.Data.Audio.Types.OutputSetup();
                }
                input.ReadMessage(OutputSetup);
                break;
              }
              case 18: {
                if (monitorDevice_ == null) {
                  MonitorDevice = new global::Rv.Data.Audio.Types.Device();
                }
                input.ReadMessage(MonitorDevice);
                break;
              }
              case 24: {
                MonitorOnMains = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (outputSetup_ == null) {
                  OutputSetup = new global::Rv.Data.Audio.Types.OutputSetup();
                }
                input.ReadMessage(OutputSetup);
                break;
              }
              case 18: {
                if (monitorDevice_ == null) {
                  MonitorDevice = new global::Rv.Data.Audio.Types.Device();
                }
                input.ReadMessage(MonitorDevice);
                break;
              }
              case 24: {
                MonitorOnMains = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class OutputSetup : pb::IMessage<OutputSetup>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OutputSetup> _parser = new pb::MessageParser<OutputSetup>(() => new OutputSetup());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OutputSetup> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.Audio.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OutputSetup() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OutputSetup(OutputSetup other) : this() {
          uuid_ = other.uuid_ != null ? other.uuid_.Clone() : null;
          audioDevice_ = other.audioDevice_ != null ? other.audioDevice_.Clone() : null;
          logicalChannels_ = other.logicalChannels_.Clone();
          audioDelay_ = other.audioDelay_;
          masterLevel_ = other.masterLevel_;
          physicalChanels_ = other.physicalChanels_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OutputSetup Clone() {
          return new OutputSetup(this);
        }

        /// <summary>Field number for the "uuid" field.</summary>
        public const int UuidFieldNumber = 1;
        private global::Rv.Data.UUID uuid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.UUID Uuid {
          get { return uuid_; }
          set {
            uuid_ = value;
          }
        }

        /// <summary>Field number for the "audio_device" field.</summary>
        public const int AudioDeviceFieldNumber = 2;
        private global::Rv.Data.Audio.Types.Device audioDevice_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Audio.Types.Device AudioDevice {
          get { return audioDevice_; }
          set {
            audioDevice_ = value;
          }
        }

        /// <summary>Field number for the "logical_channels" field.</summary>
        public const int LogicalChannelsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Rv.Data.Audio.Types.LogicalChannel> _repeated_logicalChannels_codec
            = pb::FieldCodec.ForMessage(26, global::Rv.Data.Audio.Types.LogicalChannel.Parser);
        private readonly pbc::RepeatedField<global::Rv.Data.Audio.Types.LogicalChannel> logicalChannels_ = new pbc::RepeatedField<global::Rv.Data.Audio.Types.LogicalChannel>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Rv.Data.Audio.Types.LogicalChannel> LogicalChannels {
          get { return logicalChannels_; }
        }

        /// <summary>Field number for the "audio_delay" field.</summary>
        public const int AudioDelayFieldNumber = 4;
        private double audioDelay_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double AudioDelay {
          get { return audioDelay_; }
          set {
            audioDelay_ = value;
          }
        }

        /// <summary>Field number for the "master_level" field.</summary>
        public const int MasterLevelFieldNumber = 5;
        private double masterLevel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double MasterLevel {
          get { return masterLevel_; }
          set {
            masterLevel_ = value;
          }
        }

        /// <summary>Field number for the "physical_chanels" field.</summary>
        public const int PhysicalChanelsFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Rv.Data.Audio.Types.PhysicalChannel> _repeated_physicalChanels_codec
            = pb::FieldCodec.ForMessage(50, global::Rv.Data.Audio.Types.PhysicalChannel.Parser);
        private readonly pbc::RepeatedField<global::Rv.Data.Audio.Types.PhysicalChannel> physicalChanels_ = new pbc::RepeatedField<global::Rv.Data.Audio.Types.PhysicalChannel>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Rv.Data.Audio.Types.PhysicalChannel> PhysicalChanels {
          get { return physicalChanels_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OutputSetup);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OutputSetup other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Uuid, other.Uuid)) return false;
          if (!object.Equals(AudioDevice, other.AudioDevice)) return false;
          if(!logicalChannels_.Equals(other.logicalChannels_)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AudioDelay, other.AudioDelay)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MasterLevel, other.MasterLevel)) return false;
          if(!physicalChanels_.Equals(other.physicalChanels_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (uuid_ != null) hash ^= Uuid.GetHashCode();
          if (audioDevice_ != null) hash ^= AudioDevice.GetHashCode();
          hash ^= logicalChannels_.GetHashCode();
          if (AudioDelay != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AudioDelay);
          if (MasterLevel != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MasterLevel);
          hash ^= physicalChanels_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (uuid_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Uuid);
          }
          if (audioDevice_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(AudioDevice);
          }
          logicalChannels_.WriteTo(output, _repeated_logicalChannels_codec);
          if (AudioDelay != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(AudioDelay);
          }
          if (MasterLevel != 0D) {
            output.WriteRawTag(41);
            output.WriteDouble(MasterLevel);
          }
          physicalChanels_.WriteTo(output, _repeated_physicalChanels_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (uuid_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Uuid);
          }
          if (audioDevice_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(AudioDevice);
          }
          logicalChannels_.WriteTo(ref output, _repeated_logicalChannels_codec);
          if (AudioDelay != 0D) {
            output.WriteRawTag(33);
            output.WriteDouble(AudioDelay);
          }
          if (MasterLevel != 0D) {
            output.WriteRawTag(41);
            output.WriteDouble(MasterLevel);
          }
          physicalChanels_.WriteTo(ref output, _repeated_physicalChanels_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (uuid_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
          }
          if (audioDevice_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioDevice);
          }
          size += logicalChannels_.CalculateSize(_repeated_logicalChannels_codec);
          if (AudioDelay != 0D) {
            size += 1 + 8;
          }
          if (MasterLevel != 0D) {
            size += 1 + 8;
          }
          size += physicalChanels_.CalculateSize(_repeated_physicalChanels_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OutputSetup other) {
          if (other == null) {
            return;
          }
          if (other.uuid_ != null) {
            if (uuid_ == null) {
              Uuid = new global::Rv.Data.UUID();
            }
            Uuid.MergeFrom(other.Uuid);
          }
          if (other.audioDevice_ != null) {
            if (audioDevice_ == null) {
              AudioDevice = new global::Rv.Data.Audio.Types.Device();
            }
            AudioDevice.MergeFrom(other.AudioDevice);
          }
          logicalChannels_.Add(other.logicalChannels_);
          if (other.AudioDelay != 0D) {
            AudioDelay = other.AudioDelay;
          }
          if (other.MasterLevel != 0D) {
            MasterLevel = other.MasterLevel;
          }
          physicalChanels_.Add(other.physicalChanels_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (uuid_ == null) {
                  Uuid = new global::Rv.Data.UUID();
                }
                input.ReadMessage(Uuid);
                break;
              }
              case 18: {
                if (audioDevice_ == null) {
                  AudioDevice = new global::Rv.Data.Audio.Types.Device();
                }
                input.ReadMessage(AudioDevice);
                break;
              }
              case 26: {
                logicalChannels_.AddEntriesFrom(input, _repeated_logicalChannels_codec);
                break;
              }
              case 33: {
                AudioDelay = input.ReadDouble();
                break;
              }
              case 41: {
                MasterLevel = input.ReadDouble();
                break;
              }
              case 50: {
                physicalChanels_.AddEntriesFrom(input, _repeated_physicalChanels_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (uuid_ == null) {
                  Uuid = new global::Rv.Data.UUID();
                }
                input.ReadMessage(Uuid);
                break;
              }
              case 18: {
                if (audioDevice_ == null) {
                  AudioDevice = new global::Rv.Data.Audio.Types.Device();
                }
                input.ReadMessage(AudioDevice);
                break;
              }
              case 26: {
                logicalChannels_.AddEntriesFrom(ref input, _repeated_logicalChannels_codec);
                break;
              }
              case 33: {
                AudioDelay = input.ReadDouble();
                break;
              }
              case 41: {
                MasterLevel = input.ReadDouble();
                break;
              }
              case 50: {
                physicalChanels_.AddEntriesFrom(ref input, _repeated_physicalChanels_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Device : pb::IMessage<Device>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Device> _parser = new pb::MessageParser<Device>(() => new Device());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Device> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.Audio.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Device() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Device(Device other) : this() {
          name_ = other.name_;
          renderID_ = other.renderID_;
          inputChannelCount_ = other.inputChannelCount_;
          outputChannelCount_ = other.outputChannelCount_;
          formats_ = other.formats_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Device Clone() {
          return new Device(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "renderID" field.</summary>
        public const int RenderIDFieldNumber = 2;
        private string renderID_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RenderID {
          get { return renderID_; }
          set {
            renderID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "input_channel_count" field.</summary>
        public const int InputChannelCountFieldNumber = 3;
        private uint inputChannelCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint InputChannelCount {
          get { return inputChannelCount_; }
          set {
            inputChannelCount_ = value;
          }
        }

        /// <summary>Field number for the "output_channel_count" field.</summary>
        public const int OutputChannelCountFieldNumber = 4;
        private uint outputChannelCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint OutputChannelCount {
          get { return outputChannelCount_; }
          set {
            outputChannelCount_ = value;
          }
        }

        /// <summary>Field number for the "formats" field.</summary>
        public const int FormatsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Rv.Data.Audio.Types.Device.Types.Format> _repeated_formats_codec
            = pb::FieldCodec.ForMessage(42, global::Rv.Data.Audio.Types.Device.Types.Format.Parser);
        private readonly pbc::RepeatedField<global::Rv.Data.Audio.Types.Device.Types.Format> formats_ = new pbc::RepeatedField<global::Rv.Data.Audio.Types.Device.Types.Format>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Rv.Data.Audio.Types.Device.Types.Format> Formats {
          get { return formats_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Device);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Device other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (RenderID != other.RenderID) return false;
          if (InputChannelCount != other.InputChannelCount) return false;
          if (OutputChannelCount != other.OutputChannelCount) return false;
          if(!formats_.Equals(other.formats_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (RenderID.Length != 0) hash ^= RenderID.GetHashCode();
          if (InputChannelCount != 0) hash ^= InputChannelCount.GetHashCode();
          if (OutputChannelCount != 0) hash ^= OutputChannelCount.GetHashCode();
          hash ^= formats_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (RenderID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RenderID);
          }
          if (InputChannelCount != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(InputChannelCount);
          }
          if (OutputChannelCount != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(OutputChannelCount);
          }
          formats_.WriteTo(output, _repeated_formats_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (RenderID.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RenderID);
          }
          if (InputChannelCount != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(InputChannelCount);
          }
          if (OutputChannelCount != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(OutputChannelCount);
          }
          formats_.WriteTo(ref output, _repeated_formats_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (RenderID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RenderID);
          }
          if (InputChannelCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InputChannelCount);
          }
          if (OutputChannelCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OutputChannelCount);
          }
          size += formats_.CalculateSize(_repeated_formats_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Device other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.RenderID.Length != 0) {
            RenderID = other.RenderID;
          }
          if (other.InputChannelCount != 0) {
            InputChannelCount = other.InputChannelCount;
          }
          if (other.OutputChannelCount != 0) {
            OutputChannelCount = other.OutputChannelCount;
          }
          formats_.Add(other.formats_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                RenderID = input.ReadString();
                break;
              }
              case 24: {
                InputChannelCount = input.ReadUInt32();
                break;
              }
              case 32: {
                OutputChannelCount = input.ReadUInt32();
                break;
              }
              case 42: {
                formats_.AddEntriesFrom(input, _repeated_formats_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                RenderID = input.ReadString();
                break;
              }
              case 24: {
                InputChannelCount = input.ReadUInt32();
                break;
              }
              case 32: {
                OutputChannelCount = input.ReadUInt32();
                break;
              }
              case 42: {
                formats_.AddEntriesFrom(ref input, _repeated_formats_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Device message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public sealed partial class Format : pb::IMessage<Format>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Format> _parser = new pb::MessageParser<Format>(() => new Format());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Format> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Rv.Data.Audio.Types.Device.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Format() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Format(Format other) : this() {
              sampleRate_ = other.sampleRate_;
              bitDepth_ = other.bitDepth_;
              type_ = other.type_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Format Clone() {
              return new Format(this);
            }

            /// <summary>Field number for the "sample_rate" field.</summary>
            public const int SampleRateFieldNumber = 1;
            private uint sampleRate_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint SampleRate {
              get { return sampleRate_; }
              set {
                sampleRate_ = value;
              }
            }

            /// <summary>Field number for the "bit_depth" field.</summary>
            public const int BitDepthFieldNumber = 2;
            private uint bitDepth_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint BitDepth {
              get { return bitDepth_; }
              set {
                bitDepth_ = value;
              }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 3;
            private global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type type_ = global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type.Int;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type Type {
              get { return type_; }
              set {
                type_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Format);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Format other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (SampleRate != other.SampleRate) return false;
              if (BitDepth != other.BitDepth) return false;
              if (Type != other.Type) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (SampleRate != 0) hash ^= SampleRate.GetHashCode();
              if (BitDepth != 0) hash ^= BitDepth.GetHashCode();
              if (Type != global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type.Int) hash ^= Type.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (SampleRate != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(SampleRate);
              }
              if (BitDepth != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(BitDepth);
              }
              if (Type != global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type.Int) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (SampleRate != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(SampleRate);
              }
              if (BitDepth != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(BitDepth);
              }
              if (Type != global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type.Int) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (SampleRate != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SampleRate);
              }
              if (BitDepth != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BitDepth);
              }
              if (Type != global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type.Int) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Format other) {
              if (other == null) {
                return;
              }
              if (other.SampleRate != 0) {
                SampleRate = other.SampleRate;
              }
              if (other.BitDepth != 0) {
                BitDepth = other.BitDepth;
              }
              if (other.Type != global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type.Int) {
                Type = other.Type;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    SampleRate = input.ReadUInt32();
                    break;
                  }
                  case 16: {
                    BitDepth = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    Type = (global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    SampleRate = input.ReadUInt32();
                    break;
                  }
                  case 16: {
                    BitDepth = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    Type = (global::Rv.Data.Audio.Types.Device.Types.Format.Types.Type) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Format message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              public enum Type {
                [pbr::OriginalName("TYPE_INT")] Int = 0,
                [pbr::OriginalName("TYPE_FLOAT")] Float = 1,
              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class LogicalChannel : pb::IMessage<LogicalChannel>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LogicalChannel> _parser = new pb::MessageParser<LogicalChannel>(() => new LogicalChannel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<LogicalChannel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.Audio.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LogicalChannel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LogicalChannel(LogicalChannel other) : this() {
          uuid_ = other.uuid_ != null ? other.uuid_.Clone() : null;
          name_ = other.name_;
          index_ = other.index_;
          muted_ = other.muted_;
          physicalAudioChannels_ = other.physicalAudioChannels_.Clone();
          solo_ = other.solo_;
          testTone_ = other.testTone_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LogicalChannel Clone() {
          return new LogicalChannel(this);
        }

        /// <summary>Field number for the "uuid" field.</summary>
        public const int UuidFieldNumber = 1;
        private global::Rv.Data.UUID uuid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.UUID Uuid {
          get { return uuid_; }
          set {
            uuid_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 3;
        private uint index_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        /// <summary>Field number for the "muted" field.</summary>
        public const int MutedFieldNumber = 4;
        private bool muted_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Muted {
          get { return muted_; }
          set {
            muted_ = value;
          }
        }

        /// <summary>Field number for the "physical_audio_channels" field.</summary>
        public const int PhysicalAudioChannelsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Rv.Data.Audio.Types.LogicalChannel.Types.OutputChannel> _repeated_physicalAudioChannels_codec
            = pb::FieldCodec.ForMessage(42, global::Rv.Data.Audio.Types.LogicalChannel.Types.OutputChannel.Parser);
        private readonly pbc::RepeatedField<global::Rv.Data.Audio.Types.LogicalChannel.Types.OutputChannel> physicalAudioChannels_ = new pbc::RepeatedField<global::Rv.Data.Audio.Types.LogicalChannel.Types.OutputChannel>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Rv.Data.Audio.Types.LogicalChannel.Types.OutputChannel> PhysicalAudioChannels {
          get { return physicalAudioChannels_; }
        }

        /// <summary>Field number for the "solo" field.</summary>
        public const int SoloFieldNumber = 6;
        private bool solo_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Solo {
          get { return solo_; }
          set {
            solo_ = value;
          }
        }

        /// <summary>Field number for the "test_tone" field.</summary>
        public const int TestToneFieldNumber = 7;
        private bool testTone_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool TestTone {
          get { return testTone_; }
          set {
            testTone_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as LogicalChannel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(LogicalChannel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Uuid, other.Uuid)) return false;
          if (Name != other.Name) return false;
          if (Index != other.Index) return false;
          if (Muted != other.Muted) return false;
          if(!physicalAudioChannels_.Equals(other.physicalAudioChannels_)) return false;
          if (Solo != other.Solo) return false;
          if (TestTone != other.TestTone) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (uuid_ != null) hash ^= Uuid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Index != 0) hash ^= Index.GetHashCode();
          if (Muted != false) hash ^= Muted.GetHashCode();
          hash ^= physicalAudioChannels_.GetHashCode();
          if (Solo != false) hash ^= Solo.GetHashCode();
          if (TestTone != false) hash ^= TestTone.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (uuid_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Uuid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Index != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Index);
          }
          if (Muted != false) {
            output.WriteRawTag(32);
            output.WriteBool(Muted);
          }
          physicalAudioChannels_.WriteTo(output, _repeated_physicalAudioChannels_codec);
          if (Solo != false) {
            output.WriteRawTag(48);
            output.WriteBool(Solo);
          }
          if (TestTone != false) {
            output.WriteRawTag(56);
            output.WriteBool(TestTone);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (uuid_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Uuid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Index != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(Index);
          }
          if (Muted != false) {
            output.WriteRawTag(32);
            output.WriteBool(Muted);
          }
          physicalAudioChannels_.WriteTo(ref output, _repeated_physicalAudioChannels_codec);
          if (Solo != false) {
            output.WriteRawTag(48);
            output.WriteBool(Solo);
          }
          if (TestTone != false) {
            output.WriteRawTag(56);
            output.WriteBool(TestTone);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (uuid_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Index != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
          }
          if (Muted != false) {
            size += 1 + 1;
          }
          size += physicalAudioChannels_.CalculateSize(_repeated_physicalAudioChannels_codec);
          if (Solo != false) {
            size += 1 + 1;
          }
          if (TestTone != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(LogicalChannel other) {
          if (other == null) {
            return;
          }
          if (other.uuid_ != null) {
            if (uuid_ == null) {
              Uuid = new global::Rv.Data.UUID();
            }
            Uuid.MergeFrom(other.Uuid);
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Index != 0) {
            Index = other.Index;
          }
          if (other.Muted != false) {
            Muted = other.Muted;
          }
          physicalAudioChannels_.Add(other.physicalAudioChannels_);
          if (other.Solo != false) {
            Solo = other.Solo;
          }
          if (other.TestTone != false) {
            TestTone = other.TestTone;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (uuid_ == null) {
                  Uuid = new global::Rv.Data.UUID();
                }
                input.ReadMessage(Uuid);
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                Index = input.ReadUInt32();
                break;
              }
              case 32: {
                Muted = input.ReadBool();
                break;
              }
              case 42: {
                physicalAudioChannels_.AddEntriesFrom(input, _repeated_physicalAudioChannels_codec);
                break;
              }
              case 48: {
                Solo = input.ReadBool();
                break;
              }
              case 56: {
                TestTone = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (uuid_ == null) {
                  Uuid = new global::Rv.Data.UUID();
                }
                input.ReadMessage(Uuid);
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                Index = input.ReadUInt32();
                break;
              }
              case 32: {
                Muted = input.ReadBool();
                break;
              }
              case 42: {
                physicalAudioChannels_.AddEntriesFrom(ref input, _repeated_physicalAudioChannels_codec);
                break;
              }
              case 48: {
                Solo = input.ReadBool();
                break;
              }
              case 56: {
                TestTone = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the LogicalChannel message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public sealed partial class OutputChannel : pb::IMessage<OutputChannel>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<OutputChannel> _parser = new pb::MessageParser<OutputChannel>(() => new OutputChannel());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<OutputChannel> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Rv.Data.Audio.Types.LogicalChannel.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public OutputChannel() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public OutputChannel(OutputChannel other) : this() {
              index_ = other.index_;
              muted_ = other.muted_;
              solo_ = other.solo_;
              testTone_ = other.testTone_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public OutputChannel Clone() {
              return new OutputChannel(this);
            }

            /// <summary>Field number for the "index" field.</summary>
            public const int IndexFieldNumber = 1;
            private uint index_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint Index {
              get { return index_; }
              set {
                index_ = value;
              }
            }

            /// <summary>Field number for the "muted" field.</summary>
            public const int MutedFieldNumber = 2;
            private bool muted_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Muted {
              get { return muted_; }
              set {
                muted_ = value;
              }
            }

            /// <summary>Field number for the "solo" field.</summary>
            public const int SoloFieldNumber = 3;
            private bool solo_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Solo {
              get { return solo_; }
              set {
                solo_ = value;
              }
            }

            /// <summary>Field number for the "test_tone" field.</summary>
            public const int TestToneFieldNumber = 4;
            private bool testTone_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool TestTone {
              get { return testTone_; }
              set {
                testTone_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as OutputChannel);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(OutputChannel other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Index != other.Index) return false;
              if (Muted != other.Muted) return false;
              if (Solo != other.Solo) return false;
              if (TestTone != other.TestTone) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Index != 0) hash ^= Index.GetHashCode();
              if (Muted != false) hash ^= Muted.GetHashCode();
              if (Solo != false) hash ^= Solo.GetHashCode();
              if (TestTone != false) hash ^= TestTone.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Index != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Index);
              }
              if (Muted != false) {
                output.WriteRawTag(16);
                output.WriteBool(Muted);
              }
              if (Solo != false) {
                output.WriteRawTag(24);
                output.WriteBool(Solo);
              }
              if (TestTone != false) {
                output.WriteRawTag(32);
                output.WriteBool(TestTone);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Index != 0) {
                output.WriteRawTag(8);
                output.WriteUInt32(Index);
              }
              if (Muted != false) {
                output.WriteRawTag(16);
                output.WriteBool(Muted);
              }
              if (Solo != false) {
                output.WriteRawTag(24);
                output.WriteBool(Solo);
              }
              if (TestTone != false) {
                output.WriteRawTag(32);
                output.WriteBool(TestTone);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Index != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
              }
              if (Muted != false) {
                size += 1 + 1;
              }
              if (Solo != false) {
                size += 1 + 1;
              }
              if (TestTone != false) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(OutputChannel other) {
              if (other == null) {
                return;
              }
              if (other.Index != 0) {
                Index = other.Index;
              }
              if (other.Muted != false) {
                Muted = other.Muted;
              }
              if (other.Solo != false) {
                Solo = other.Solo;
              }
              if (other.TestTone != false) {
                TestTone = other.TestTone;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Index = input.ReadUInt32();
                    break;
                  }
                  case 16: {
                    Muted = input.ReadBool();
                    break;
                  }
                  case 24: {
                    Solo = input.ReadBool();
                    break;
                  }
                  case 32: {
                    TestTone = input.ReadBool();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Index = input.ReadUInt32();
                    break;
                  }
                  case 16: {
                    Muted = input.ReadBool();
                    break;
                  }
                  case 24: {
                    Solo = input.ReadBool();
                    break;
                  }
                  case 32: {
                    TestTone = input.ReadBool();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class PhysicalChannel : pb::IMessage<PhysicalChannel>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PhysicalChannel> _parser = new pb::MessageParser<PhysicalChannel>(() => new PhysicalChannel());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PhysicalChannel> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.Audio.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PhysicalChannel() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PhysicalChannel(PhysicalChannel other) : this() {
          index_ = other.index_;
          muteEnable_ = other.muteEnable_;
          soloEnable_ = other.soloEnable_;
          toneEnable_ = other.toneEnable_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PhysicalChannel Clone() {
          return new PhysicalChannel(this);
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 1;
        private uint index_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        /// <summary>Field number for the "mute_enable" field.</summary>
        public const int MuteEnableFieldNumber = 2;
        private bool muteEnable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool MuteEnable {
          get { return muteEnable_; }
          set {
            muteEnable_ = value;
          }
        }

        /// <summary>Field number for the "solo_enable" field.</summary>
        public const int SoloEnableFieldNumber = 3;
        private bool soloEnable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SoloEnable {
          get { return soloEnable_; }
          set {
            soloEnable_ = value;
          }
        }

        /// <summary>Field number for the "tone_enable" field.</summary>
        public const int ToneEnableFieldNumber = 4;
        private bool toneEnable_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ToneEnable {
          get { return toneEnable_; }
          set {
            toneEnable_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PhysicalChannel);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PhysicalChannel other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Index != other.Index) return false;
          if (MuteEnable != other.MuteEnable) return false;
          if (SoloEnable != other.SoloEnable) return false;
          if (ToneEnable != other.ToneEnable) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Index != 0) hash ^= Index.GetHashCode();
          if (MuteEnable != false) hash ^= MuteEnable.GetHashCode();
          if (SoloEnable != false) hash ^= SoloEnable.GetHashCode();
          if (ToneEnable != false) hash ^= ToneEnable.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Index != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Index);
          }
          if (MuteEnable != false) {
            output.WriteRawTag(16);
            output.WriteBool(MuteEnable);
          }
          if (SoloEnable != false) {
            output.WriteRawTag(24);
            output.WriteBool(SoloEnable);
          }
          if (ToneEnable != false) {
            output.WriteRawTag(32);
            output.WriteBool(ToneEnable);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Index != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Index);
          }
          if (MuteEnable != false) {
            output.WriteRawTag(16);
            output.WriteBool(MuteEnable);
          }
          if (SoloEnable != false) {
            output.WriteRawTag(24);
            output.WriteBool(SoloEnable);
          }
          if (ToneEnable != false) {
            output.WriteRawTag(32);
            output.WriteBool(ToneEnable);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Index != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
          }
          if (MuteEnable != false) {
            size += 1 + 1;
          }
          if (SoloEnable != false) {
            size += 1 + 1;
          }
          if (ToneEnable != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PhysicalChannel other) {
          if (other == null) {
            return;
          }
          if (other.Index != 0) {
            Index = other.Index;
          }
          if (other.MuteEnable != false) {
            MuteEnable = other.MuteEnable;
          }
          if (other.SoloEnable != false) {
            SoloEnable = other.SoloEnable;
          }
          if (other.ToneEnable != false) {
            ToneEnable = other.ToneEnable;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Index = input.ReadUInt32();
                break;
              }
              case 16: {
                MuteEnable = input.ReadBool();
                break;
              }
              case 24: {
                SoloEnable = input.ReadBool();
                break;
              }
              case 32: {
                ToneEnable = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Index = input.ReadUInt32();
                break;
              }
              case 16: {
                MuteEnable = input.ReadBool();
                break;
              }
              case 24: {
                SoloEnable = input.ReadBool();
                break;
              }
              case 32: {
                ToneEnable = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
