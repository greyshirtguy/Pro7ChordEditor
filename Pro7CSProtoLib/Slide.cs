// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: slide.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rv.Data {

  /// <summary>Holder for reflection information generated from slide.proto</summary>
  public static partial class SlideReflection {

    #region Descriptor
    /// <summary>File descriptor for slide.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SlideReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtzbGlkZS5wcm90bxIHcnYuZGF0YRoSZ3JhcGhpY3NEYXRhLnByb3RvGhBi",
            "YXNpY1R5cGVzLnByb3RvGhRhbGlnbm1lbnRHdWlkZS5wcm90bxoNZWZmZWN0",
            "cy5wcm90bxoMdGltZXJzLnByb3RvIotoCgVTbGlkZRIoCghlbGVtZW50cxgB",
            "IAMoCzIWLnJ2LmRhdGEuU2xpZGUuRWxlbWVudBIqChNlbGVtZW50X2J1aWxk",
            "X29yZGVyGAIgAygLMg0ucnYuZGF0YS5VVUlEEisKCmd1aWRlbGluZXMYAyAD",
            "KAsyFy5ydi5kYXRhLkFsaWdubWVudEd1aWRlEh4KFmRyYXdzX2JhY2tncm91",
            "bmRfY29sb3IYBCABKAgSKAoQYmFja2dyb3VuZF9jb2xvchgFIAEoCzIOLnJ2",
            "LmRhdGEuQ29sb3ISJAoEc2l6ZRgGIAEoCzIWLnJ2LmRhdGEuR3JhcGhpY3Mu",
            "U2l6ZRIbCgR1dWlkGAcgASgLMg0ucnYuZGF0YS5VVUlEGvFlCgdFbGVtZW50",
            "EioKB2VsZW1lbnQYASABKAsyGS5ydi5kYXRhLkdyYXBoaWNzLkVsZW1lbnQS",
            "LgoIYnVpbGRfaW4YAiABKAsyHC5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuQnVp",
            "bGQSLwoJYnVpbGRfb3V0GAMgASgLMhwucnYuZGF0YS5TbGlkZS5FbGVtZW50",
            "LkJ1aWxkEgwKBGluZm8YBCABKA0SOgoLcmV2ZWFsX3R5cGUYBSABKA4yJS5y",
            "di5kYXRhLlNsaWRlLkVsZW1lbnQuVGV4dFJldmVhbFR5cGUSMwoKZGF0YV9s",
            "aW5rcxgGIAMoCzIfLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluaxI2",
            "CgtjaGlsZEJ1aWxkcxgHIAMoCzIhLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5D",
            "aGlsZEJ1aWxkEhkKEXJldmVhbF9mcm9tX2luZGV4GAggASgNEjoKDXRleHRf",
            "c2Nyb2xsZXIYCSABKAsyIy5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuVGV4dFNj",
            "cm9sbGVyGp0CCgVCdWlsZBIbCgR1dWlkGAEgASgLMg0ucnYuZGF0YS5VVUlE",
            "EiIKC2VsZW1lbnRVVUlEGAIgASgLMg0ucnYuZGF0YS5VVUlEEjEKBXN0YXJ0",
            "GAMgASgOMiIucnYuZGF0YS5TbGlkZS5FbGVtZW50LkJ1aWxkLlN0YXJ0EhEK",
            "CWRlbGF5VGltZRgEIAEoARInCgp0cmFuc2l0aW9uGAUgASgLMhMucnYuZGF0",
            "YS5UcmFuc2l0aW9uImQKBVN0YXJ0EhIKDlNUQVJUX09OX0NMSUNLEAASFwoT",
            "U1RBUlRfV0lUSF9QUkVWSU9VUxABEhgKFFNUQVJUX0FGVEVSX1BSRVZJT1VT",
            "EAISFAoQU1RBUlRfV0lUSF9TTElERRADGukBCgpDaGlsZEJ1aWxkEhsKBHV1",
            "aWQYASABKAsyDS5ydi5kYXRhLlVVSUQSNgoFc3RhcnQYAiABKA4yJy5ydi5k",
            "YXRhLlNsaWRlLkVsZW1lbnQuQ2hpbGRCdWlsZC5TdGFydBIRCglkZWxheVRp",
            "bWUYAyABKAESDQoFaW5kZXgYBCABKA0iZAoFU3RhcnQSEgoOU1RBUlRfT05f",
            "Q0xJQ0sQABIXChNTVEFSVF9XSVRIX1BSRVZJT1VTEAESGAoUU1RBUlRfQUZU",
            "RVJfUFJFVklPVVMQAhIUChBTVEFSVF9XSVRIX1NMSURFEAMa/VoKCERhdGFM",
            "aW5rEjgKBnRpY2tlchgBIAEoCzImLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5E",
            "YXRhTGluay5UaWNrZXJIABJOCg5hbHRlcm5hdGVfdGV4dBgCIAEoCzI0LnJ2",
            "LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5BbHRlcm5hdGVFbGVtZW50",
            "VGV4dEgAEj8KCnRpbWVyX3RleHQYAyABKAsyKS5ydi5kYXRhLlNsaWRlLkVs",
            "ZW1lbnQuRGF0YUxpbmsuVGltZXJUZXh0SAASPwoKY2xvY2tfdGV4dBgEIAEo",
            "CzIpLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5DbG9ja1RleHRI",
            "ABJBCgtjaG9yZF9jaGFydBgFIAEoCzIqLnJ2LmRhdGEuU2xpZGUuRWxlbWVu",
            "dC5EYXRhTGluay5DaG9yZENoYXJ0SAASRQoNb3V0cHV0X3NjcmVlbhgGIAEo",
            "CzIsLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5PdXRwdXRTY3Jl",
            "ZW5IABI7CghwY29fbGl2ZRgHIAEoCzInLnJ2LmRhdGEuU2xpZGUuRWxlbWVu",
            "dC5EYXRhTGluay5QQ09MaXZlSAASTgoOYWx0ZXJuYXRlX2ZpbGwYCCABKAsy",
            "NC5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuQWx0ZXJuYXRlRWxl",
            "bWVudEZpbGxIABJJCg92aXNpYmlsaXR5X2xpbmsYCSABKAsyLi5ydi5kYXRh",
            "LlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuVmlzaWJpbGl0eUxpbmtIABI/Cgpz",
            "bGlkZV90ZXh0GAogASgLMikucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFM",
            "aW5rLlNsaWRlVGV4dEgAEkUKDXN0YWdlX21lc3NhZ2UYCyABKAsyLC5ydi5k",
            "YXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuU3RhZ2VNZXNzYWdlSAASSQoP",
            "dmlkZW9fY291bnRkb3duGAwgASgLMi4ucnYuZGF0YS5TbGlkZS5FbGVtZW50",
            "LkRhdGFMaW5rLlZpZGVvQ291bnRkb3duSAASQQoLc2xpZGVfaW1hZ2UYDSAB",
            "KAsyKi5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuU2xpZGVJbWFn",
            "ZUgAEj0KCWNjbGlfdGV4dBgOIAEoCzIoLnJ2LmRhdGEuU2xpZGUuRWxlbWVu",
            "dC5EYXRhTGluay5DQ0xJVGV4dEgAEj8KCmdyb3VwX25hbWUYDyABKAsyKS5y",
            "di5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuR3JvdXBOYW1lSAASQQoL",
            "Z3JvdXBfY29sb3IYECABKAsyKi5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0",
            "YUxpbmsuR3JvdXBDb2xvckgAEk8KEnByZXNlbnRhdGlvbl9ub3RlcxgRIAEo",
            "CzIxLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5QcmVzZW50YXRp",
            "b25Ob3Rlc0gAEkUKDXBsYXlsaXN0X2l0ZW0YEiABKAsyLC5ydi5kYXRhLlNs",
            "aWRlLkVsZW1lbnQuRGF0YUxpbmsuUGxheWxpc3RJdGVtSAASXwobYXV0b19h",
            "ZHZhbmNlX3RpbWVfcmVtYWluaW5nGBMgASgLMjgucnYuZGF0YS5TbGlkZS5F",
            "bGVtZW50LkRhdGFMaW5rLkF1dG9BZHZhbmNlVGltZVJlbWFpbmluZ0gAElAK",
            "E2NhcHR1cmVfc3RhdHVzX3RleHQYFCABKAsyMS5ydi5kYXRhLlNsaWRlLkVs",
            "ZW1lbnQuRGF0YUxpbmsuQ2FwdHVyZVN0YXR1c1RleHRIABJSChRjYXB0dXJl",
            "X3N0YXR1c19jb2xvchgVIAEoCzIyLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5E",
            "YXRhTGluay5DYXB0dXJlU3RhdHVzQ29sb3JIABJBCgtzbGlkZV9jb3VudBgW",
            "IAEoCzIqLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5TbGlkZUNv",
            "dW50SAASSQoPYXVkaW9fY291bnRkb3duGBcgASgLMi4ucnYuZGF0YS5TbGlk",
            "ZS5FbGVtZW50LkRhdGFMaW5rLkF1ZGlvQ291bnRkb3duSAASRAoMcHJlc2Vu",
            "dGF0aW9uGBggASgLMiwucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFMaW5r",
            "LlByZXNlbnRhdGlvbkgAEkoKEHNsaWRlX0xhYmVsX1RleHQYGSABKAsyLi5y",
            "di5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuU2xpZGVMYWJlbFRleHRI",
            "ABJMChFzbGlkZV9MYWJlbF9Db2xvchgaIAEoCzIvLnJ2LmRhdGEuU2xpZGUu",
            "RWxlbWVudC5EYXRhTGluay5TbGlkZUxhYmVsQ29sb3JIABI7Cghyc3NfZmVl",
            "ZBgbIAEoCzInLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5SU1NG",
            "ZWVkSAASPQoJZmlsZV9mZWVkGBwgASgLMigucnYuZGF0YS5TbGlkZS5FbGVt",
            "ZW50LkRhdGFMaW5rLkZpbGVGZWVkSAASSAoPY2hvcmRfcHJvX2NoYXJ0GB0g",
            "ASgLMi0ucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFMaW5rLkNob3JkUHJv",
            "Q2hhcnRIABrWAQoHUlNTRmVlZBIZCgN1cmwYASABKAsyDC5ydi5kYXRhLlVS",
            "TBJECgdjb250ZW50GAIgASgOMjMucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRh",
            "dGFMaW5rLlJTU0ZlZWQuQ29udGVudFR5cGUSFgoOdGV4dF9kZWxpbWl0ZXIY",
            "AyABKAkiUgoLQ29udGVudFR5cGUSGwoXQ09OVEVOVF9UWVBFX1RJVExFX09O",
            "TFkQABImCiJDT05URU5UX1RZUEVfVElUTEVfQU5EX0RFU0NSSVBUSU9OEAEa",
            "JQoIRmlsZUZlZWQSGQoDdXJsGAEgASgLMgwucnYuZGF0YS5VUkwawwQKBlRp",
            "Y2tlchIRCglwbGF5X3JhdGUYBCABKAESEwoLc2hvdWxkX2xvb3AYBSABKAgS",
            "EgoKbG9vcF9kZWxheRgGIAEoARIWCg50ZXh0X2RlbGltaXRlchgHIAEoCRJE",
            "Cgl0ZXh0X3R5cGUYASABKAsyLy5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0",
            "YUxpbmsuVGlja2VyLlRleHRUeXBlSAASQgoIcnNzX3R5cGUYAiABKAsyLi5y",
            "di5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuVGlja2VyLlJTU1R5cGVI",
            "ABJECglmaWxlX3R5cGUYAyABKAsyLy5ydi5kYXRhLlNsaWRlLkVsZW1lbnQu",
            "RGF0YUxpbmsuVGlja2VyLkZpbGVUeXBlSAAaGAoIVGV4dFR5cGUSDAoEdGV4",
            "dBgBIAEoCRrFAQoHUlNTVHlwZRIZCgN1cmwYASABKAsyDC5ydi5kYXRhLlVS",
            "TBJLCgdjb250ZW50GAIgASgOMjoucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRh",
            "dGFMaW5rLlRpY2tlci5SU1NUeXBlLkNvbnRlbnRUeXBlIlIKC0NvbnRlbnRU",
            "eXBlEhsKF0NPTlRFTlRfVFlQRV9USVRMRV9PTkxZEAASJgoiQ09OVEVOVF9U",
            "WVBFX1RJVExFX0FORF9ERVNDUklQVElPThABGiUKCEZpbGVUeXBlEhkKA3Vy",
            "bBgBIAEoCzIMLnJ2LmRhdGEuVVJMQgwKClNvdXJjZVR5cGUapQMKFEFsdGVy",
            "bmF0ZUVsZW1lbnRUZXh0EikKEm90aGVyX2VsZW1lbnRfdXVpZBgBIAEoCzIN",
            "LnJ2LmRhdGEuVVVJRBIaChJvdGhlcl9lbGVtZW50X25hbWUYAiABKAkSHgoW",
            "dGV4dF90cmFuc2Zvcm1fb3B0aW9ucxgDIAEoDRJgCg50ZXh0X3RyYW5zZm9y",
            "bRgEIAEoDjJILnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5BbHRl",
            "cm5hdGVFbGVtZW50VGV4dC5UZXh0VHJhbnNmb3JtT3B0aW9uIsMBChNUZXh0",
            "VHJhbnNmb3JtT3B0aW9uEh4KGlRFWFRfVFJBTlNGT1JNX09QVElPTl9OT05F",
            "EAASLQopVEVYVF9UUkFOU0ZPUk1fT1BUSU9OX1JFTU9WRV9MSU5FX1JFVFVS",
            "TlMQARIrCidURVhUX1RSQU5TRk9STV9PUFRJT05fT05FX1dPUkRfUEVSX0xJ",
            "TkUQAhIwCixURVhUX1RSQU5TRk9STV9PUFRJT05fT05FX0NIQVJBQ1RFUl9Q",
            "RVJfTElORRADGgoKCENDTElUZXh0GjsKDENvbG9yVHJpZ2dlchIMCgR0aW1l",
            "GAEgASgBEh0KBWNvbG9yGAIgASgLMg4ucnYuZGF0YS5Db2xvchrSAQoJVGlt",
            "ZXJUZXh0EiEKCnRpbWVyX3V1aWQYASABKAsyDS5ydi5kYXRhLlVVSUQSEgoK",
            "dGltZXJfbmFtZRgCIAEoCRIrCgx0aW1lcl9mb3JtYXQYAyABKAsyFS5ydi5k",
            "YXRhLlRpbWVyLkZvcm1hdBIbChN0aW1lcl9mb3JtYXRfc3RyaW5nGAQgASgJ",
            "EkQKDmNvbG9yX3RyaWdnZXJzGAUgAygLMiwucnYuZGF0YS5TbGlkZS5FbGVt",
            "ZW50LkRhdGFMaW5rLkNvbG9yVHJpZ2dlchpPCglDbG9ja1RleHQSGwoTY2xv",
            "Y2tfZm9ybWF0X3N0cmluZxgBIAEoCRIlCgZmb3JtYXQYBSABKAsyFS5ydi5k",
            "YXRhLkNsb2NrLkZvcm1hdBoMCgpDaG9yZENoYXJ0GkUKDE91dHB1dFNjcmVl",
            "bhIgCglzY3JlZW5faWQYASABKAsyDS5ydi5kYXRhLlVVSUQSEwoLc2NyZWVu",
            "X25hbWUYAiABKAka1AIKB1BDT0xpdmUSPAoFdGhlbWUYAiABKA4yLS5ydi5k",
            "YXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuUENPTGl2ZS5UaGVtZRJNCg5j",
            "b3VudGRvd25fdHlwZRgDIAEoDjI1LnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5E",
            "YXRhTGluay5QQ09MaXZlLkNvdW50ZG93blR5cGUiOAoFVGhlbWUSFwoTUENP",
            "TElWRV9USEVNRV9MSUdIVBAAEhYKElBDT0xJVkVfVEhFTUVfREFSSxABIoEB",
            "Cg1Db3VudGRvd25UeXBlEiMKH0NPVU5URE9XTl9UWVBFX0ZVTExfSVRFTV9M",
            "RU5HVEgQABIjCh9DT1VOVERPV05fVFlQRV9FTkRfSVRFTV9PTl9USU1FEAES",
            "JgoiQ09VTlRET1dOX1RZUEVfRU5EX1NFUlZJQ0VfT05fVElNRRACGl0KFEFs",
            "dGVybmF0ZUVsZW1lbnRGaWxsEikKEm90aGVyX2VsZW1lbnRfdXVpZBgBIAEo",
            "CzINLnJ2LmRhdGEuVVVJRBIaChJvdGhlcl9lbGVtZW50X25hbWUYAiABKAka",
            "qBsKDlZpc2liaWxpdHlMaW5rEmAKFHZpc2liaWxpdHlfY3JpdGVyaW9uGAEg",
            "ASgOMkIucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFMaW5rLlZpc2liaWxp",
            "dHlMaW5rLlZpc2liaWxpdHlDcml0ZXJpb24STAoKY29uZGl0aW9ucxgCIAMo",
            "CzI4LnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5WaXNpYmlsaXR5",
            "TGluay5Db25kaXRpb24a8xgKCUNvbmRpdGlvbhJoChJlbGVtZW50X3Zpc2li",
            "aWxpdHkYASABKAsySi5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsu",
            "VmlzaWJpbGl0eUxpbmsuQ29uZGl0aW9uLkVsZW1lbnRWaXNpYmlsaXR5SAAS",
            "ZAoQdGltZXJfdmlzaWJpbGl0eRgCIAEoCzJILnJ2LmRhdGEuU2xpZGUuRWxl",
            "bWVudC5EYXRhTGluay5WaXNpYmlsaXR5TGluay5Db25kaXRpb24uVGltZXJW",
            "aXNpYmlsaXR5SAASdwoadmlkZW9fY291bnRkb3duX3Zpc2liaWxpdHkYAyAB",
            "KAsyUS5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuVmlzaWJpbGl0",
            "eUxpbmsuQ29uZGl0aW9uLlZpZGVvQ291bnRkb3duVmlzaWJpbGl0eUgAEncK",
            "GmNhcHR1cmVfc2Vzc2lvbl92aXNpYmlsaXR5GAQgASgLMlEucnYuZGF0YS5T",
            "bGlkZS5FbGVtZW50LkRhdGFMaW5rLlZpc2liaWxpdHlMaW5rLkNvbmRpdGlv",
            "bi5DYXB0dXJlU2Vzc2lvblZpc2liaWxpdHlIABJvChZ2aWRlb19pbnB1dF92",
            "aXNpYmlsaXR5GAUgASgLMk0ucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFM",
            "aW5rLlZpc2liaWxpdHlMaW5rLkNvbmRpdGlvbi5WaWRlb0lucHV0VmlzaWJp",
            "bGl0eUgAEncKGmF1ZGlvX2NvdW50ZG93bl92aXNpYmlsaXR5GAYgASgLMlEu",
            "cnYuZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFMaW5rLlZpc2liaWxpdHlMaW5r",
            "LkNvbmRpdGlvbi5BdWRpb0NvdW50ZG93blZpc2liaWxpdHlIABrXAgoRRWxl",
            "bWVudFZpc2liaWxpdHkSKQoSb3RoZXJfZWxlbWVudF91dWlkGAEgASgLMg0u",
            "cnYuZGF0YS5VVUlEEhoKEm90aGVyX2VsZW1lbnRfbmFtZRgCIAEoCRKDAQoU",
            "dmlzaWJpbGl0eV9jcml0ZXJpb24YAyABKA4yZS5ydi5kYXRhLlNsaWRlLkVs",
            "ZW1lbnQuRGF0YUxpbmsuVmlzaWJpbGl0eUxpbmsuQ29uZGl0aW9uLkVsZW1l",
            "bnRWaXNpYmlsaXR5LkVsZW1lbnRWaXNpYmlsaXR5Q3JpdGVyaW9uInUKGkVs",
            "ZW1lbnRWaXNpYmlsaXR5Q3JpdGVyaW9uEikKJUVMRU1FTlRfVklTSUJJTElU",
            "WV9DUklURVJJT05fSEFTX1RFWFQQABIsCihFTEVNRU5UX1ZJU0lCSUxJVFlf",
            "Q1JJVEVSSU9OX0hBU19OT19URVhUEAEanAMKD1RpbWVyVmlzaWJpbGl0eRIh",
            "Cgp0aW1lcl91dWlkGAEgASgLMg0ucnYuZGF0YS5VVUlEEhIKCnRpbWVyX25h",
            "bWUYAiABKAkSfwoUdmlzaWJpbGl0eV9jcml0ZXJpb24YAyABKA4yYS5ydi5k",
            "YXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuVmlzaWJpbGl0eUxpbmsuQ29u",
            "ZGl0aW9uLlRpbWVyVmlzaWJpbGl0eS5UaW1lclZpc2liaWxpdHlDcml0ZXJp",
            "b24i0AEKGFRpbWVyVmlzaWJpbGl0eUNyaXRlcmlvbhIxCi1USU1FUl9WSVNJ",
            "QklMSVRZX0NSSVRFUklPTl9IQVNfVElNRV9SRU1BSU5JTkcQABIqCiZUSU1F",
            "Ul9WSVNJQklMSVRZX0NSSVRFUklPTl9IQVNfRVhQSVJFRBABEikKJVRJTUVS",
            "X1ZJU0lCSUxJVFlfQ1JJVEVSSU9OX0lTX1JVTk5JTkcQAhIqCiZUSU1FUl9W",
            "SVNJQklMSVRZX0NSSVRFUklPTl9OT1RfUlVOTklORxADGpoEChhWaWRlb0Nv",
            "dW50ZG93blZpc2liaWxpdHkSkQEKFHZpc2liaWxpdHlfY3JpdGVyaW9uGAEg",
            "ASgOMnMucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFMaW5rLlZpc2liaWxp",
            "dHlMaW5rLkNvbmRpdGlvbi5WaWRlb0NvdW50ZG93blZpc2liaWxpdHkuVmlk",
            "ZW9Db3VudGRvd25WaXNpYmlsaXR5Q3JpdGVyaW9uIukCCiFWaWRlb0NvdW50",
            "ZG93blZpc2liaWxpdHlDcml0ZXJpb24SOwo3VklERU9fQ09VTlRET1dOX1ZJ",
            "U0lCSUxJVFlfQ1JJVEVSSU9OX0hBU19USU1FX1JFTUFJTklORxAAEjQKMFZJ",
            "REVPX0NPVU5URE9XTl9WSVNJQklMSVRZX0NSSVRFUklPTl9IQVNfRVhQSVJF",
            "RBABEjMKL1ZJREVPX0NPVU5URE9XTl9WSVNJQklMSVRZX0NSSVRFUklPTl9J",
            "U19SVU5OSU5HEAISNAowVklERU9fQ09VTlRET1dOX1ZJU0lCSUxJVFlfQ1JJ",
            "VEVSSU9OX05PVF9SVU5OSU5HEAMSMAosVklERU9fQ09VTlRET1dOX1ZJU0lC",
            "SUxJVFlfQ1JJVEVSSU9OX0xPT1BJTkcQBBI0CjBWSURFT19DT1VOVERPV05f",
            "VklTSUJJTElUWV9DUklURVJJT05fTk9UX0xPT1BJTkcQBRqaBAoYQXVkaW9D",
            "b3VudGRvd25WaXNpYmlsaXR5EpEBChR2aXNpYmlsaXR5X2NyaXRlcmlvbhgB",
            "IAEoDjJzLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5WaXNpYmls",
            "aXR5TGluay5Db25kaXRpb24uQXVkaW9Db3VudGRvd25WaXNpYmlsaXR5LkF1",
            "ZGlvQ291bnRkb3duVmlzaWJpbGl0eUNyaXRlcmlvbiLpAgohQXVkaW9Db3Vu",
            "dGRvd25WaXNpYmlsaXR5Q3JpdGVyaW9uEjsKN0FVRElPX0NPVU5URE9XTl9W",
            "SVNJQklMSVRZX0NSSVRFUklPTl9IQVNfVElNRV9SRU1BSU5JTkcQABI0CjBB",
            "VURJT19DT1VOVERPV05fVklTSUJJTElUWV9DUklURVJJT05fSEFTX0VYUElS",
            "RUQQARIzCi9BVURJT19DT1VOVERPV05fVklTSUJJTElUWV9DUklURVJJT05f",
            "SVNfUlVOTklORxACEjQKMEFVRElPX0NPVU5URE9XTl9WSVNJQklMSVRZX0NS",
            "SVRFUklPTl9OT1RfUlVOTklORxADEjAKLEFVRElPX0NPVU5URE9XTl9WSVNJ",
            "QklMSVRZX0NSSVRFUklPTl9MT09QSU5HEAQSNAowQVVESU9fQ09VTlRET1dO",
            "X1ZJU0lCSUxJVFlfQ1JJVEVSSU9OX05PVF9MT09QSU5HEAUauAIKGENhcHR1",
            "cmVTZXNzaW9uVmlzaWJpbGl0eRKRAQoUdmlzaWJpbGl0eV9jcml0ZXJpb24Y",
            "ASABKA4ycy5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuVmlzaWJp",
            "bGl0eUxpbmsuQ29uZGl0aW9uLkNhcHR1cmVTZXNzaW9uVmlzaWJpbGl0eS5D",
            "YXB0dXJlU2Vzc2lvblZpc2liaWxpdHlDcml0ZXJpb24ihwEKIUNhcHR1cmVT",
            "ZXNzaW9uVmlzaWJpbGl0eUNyaXRlcmlvbhIvCitDQVBUVVJFX1NFU1NJT05f",
            "VklTSUJJTElUWV9DUklURVJJT05fQUNUSVZFEAASMQotQ0FQVFVSRV9TRVNT",
            "SU9OX1ZJU0lCSUxJVFlfQ1JJVEVSSU9OX0lOQUNUSVZFEAEaugIKFFZpZGVv",
            "SW5wdXRWaXNpYmlsaXR5EhkKEXZpZGVvX2lucHV0X2luZGV4GAEgASgFEokB",
            "ChR2aXNpYmlsaXR5X2NyaXRlcmlvbhgCIAEoDjJrLnJ2LmRhdGEuU2xpZGUu",
            "RWxlbWVudC5EYXRhTGluay5WaXNpYmlsaXR5TGluay5Db25kaXRpb24uVmlk",
            "ZW9JbnB1dFZpc2liaWxpdHkuVmlkZW9JbnB1dFZpc2liaWxpdHlDcml0ZXJp",
            "b24iewodVmlkZW9JbnB1dFZpc2liaWxpdHlDcml0ZXJpb24SKwonVklERU9f",
            "SU5QVVRfVklTSUJJTElUWV9DUklURVJJT05fQUNUSVZFEAASLQopVklERU9f",
            "SU5QVVRfVklTSUJJTElUWV9DUklURVJJT05fSU5BQ1RJVkUQAUIPCg1Db25k",
            "aXRpb25UeXBlInAKE1Zpc2liaWxpdHlDcml0ZXJpb24SHAoYVklTSUJJTElU",
            "WV9DUklURVJJT05fQUxMEAASHAoYVklTSUJJTElUWV9DUklURVJJT05fQU5Z",
            "EAESHQoZVklTSUJJTElUWV9DUklURVJJT05fTk9ORRACGuEFCglTbGlkZVRl",
            "eHQSTwoMc291cmNlX3NsaWRlGAEgASgOMjkucnYuZGF0YS5TbGlkZS5FbGVt",
            "ZW50LkRhdGFMaW5rLlNsaWRlVGV4dC5TbGlkZVNvdXJjZVR5cGUSUQoNc291",
            "cmNlX29wdGlvbhgCIAEoDjI6LnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRh",
            "TGluay5TbGlkZVRleHQuVGV4dFNvdXJjZU9wdGlvbhIdChVwcmVzZXJ2ZV9u",
            "b3Rlc19mb3JtYXQYAyABKAgSFQoNbmFtZV90b19tYXRjaBgEIAEoCRJdChZl",
            "bGVtZW50X3RleHRfdHJhbnNmb3JtGAUgASgOMj0ucnYuZGF0YS5TbGlkZS5F",
            "bGVtZW50LkRhdGFMaW5rLlNsaWRlVGV4dC5UZXh0VHJhbnNmb3JtT3B0aW9u",
            "IlgKD1NsaWRlU291cmNlVHlwZRIjCh9TTElERV9TT1VSQ0VfVFlQRV9DVVJS",
            "RU5UX1NMSURFEAASIAocU0xJREVfU09VUkNFX1RZUEVfTkVYVF9TTElERRAB",
            "InsKEFRleHRTb3VyY2VPcHRpb24SGwoXVEVYVF9TT1VSQ0VfT1BUSU9OX1RF",
            "WFQQABIcChhURVhUX1NPVVJDRV9PUFRJT05fTk9URVMQARIsCihURVhUX1NP",
            "VVJDRV9PUFRJT05fRUxFTUVOVF9NQVRDSElOR19OQU1FEAIiwwEKE1RleHRU",
            "cmFuc2Zvcm1PcHRpb24SHgoaVEVYVF9UUkFOU0ZPUk1fT1BUSU9OX05PTkUQ",
            "ABItCilURVhUX1RSQU5TRk9STV9PUFRJT05fUkVNT1ZFX0xJTkVfUkVUVVJO",
            "UxABEisKJ1RFWFRfVFJBTlNGT1JNX09QVElPTl9PTkVfV09SRF9QRVJfTElO",
            "RRACEjAKLFRFWFRfVFJBTlNGT1JNX09QVElPTl9PTkVfQ0hBUkFDVEVSX1BF",
            "Ul9MSU5FEAMauAEKClNsaWRlSW1hZ2USUAoMc291cmNlX3NsaWRlGAEgASgO",
            "MjoucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFMaW5rLlNsaWRlSW1hZ2Uu",
            "U2xpZGVTb3VyY2VUeXBlIlgKD1NsaWRlU291cmNlVHlwZRIjCh9TTElERV9T",
            "T1VSQ0VfVFlQRV9DVVJSRU5UX1NMSURFEAASIAocU0xJREVfU09VUkNFX1RZ",
            "UEVfTkVYVF9TTElERRABGkkKDFN0YWdlTWVzc2FnZRIUCgxzaG91bGRfZmxh",
            "c2gYASABKAgSIwoLZmxhc2hfY29sb3IYAiABKAsyDi5ydi5kYXRhLkNvbG9y",
            "Go4DCg5WaWRlb0NvdW50ZG93bhIrCgx0aW1lcl9mb3JtYXQYASABKAsyFS5y",
            "di5kYXRhLlRpbWVyLkZvcm1hdBIbChN0aW1lcl9mb3JtYXRfc3RyaW5nGAIg",
            "ASgJEkQKDmNvbG9yX3RyaWdnZXJzGAMgAygLMiwucnYuZGF0YS5TbGlkZS5F",
            "bGVtZW50LkRhdGFMaW5rLkNvbG9yVHJpZ2dlchIdChVpZ25vcmVfbG9vcGlu",
            "Z192aWRlb3MYBCABKAgSYwoWdmlkZW9fY291bnRkb3duX3NvdXJjZRgFIAEo",
            "DjJDLnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5EYXRhTGluay5WaWRlb0NvdW50",
            "ZG93bi5WaWRlb0NvdW50ZG93blNvdXJjZSJoChRWaWRlb0NvdW50ZG93blNv",
            "dXJjZRInCiNWSURFT19DT1VOVERPV05fU09VUkNFX1BSRVNFTlRBVElPThAA",
            "EicKI1ZJREVPX0NPVU5URE9XTl9TT1VSQ0VfQU5OT1VOQ0VNRU5UEAEavgEK",
            "DkF1ZGlvQ291bnRkb3duEisKDHRpbWVyX2Zvcm1hdBgBIAEoCzIVLnJ2LmRh",
            "dGEuVGltZXIuRm9ybWF0EhsKE3RpbWVyX2Zvcm1hdF9zdHJpbmcYAiABKAkS",
            "RAoOY29sb3JfdHJpZ2dlcnMYAyADKAsyLC5ydi5kYXRhLlNsaWRlLkVsZW1l",
            "bnQuRGF0YUxpbmsuQ29sb3JUcmlnZ2VyEhwKFGlnbm9yZV9sb29waW5nX2F1",
            "ZGlvGAQgASgIGtcBCglHcm91cE5hbWUSTgoLZ3JvdXBTb3VyY2UYASABKA4y",
            "OS5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuR3JvdXBOYW1lLkdy",
            "b3VwU291cmNlVHlwZSJ6Cg9Hcm91cFNvdXJjZVR5cGUSIwofR1JPVVBfU09V",
            "UkNFX1RZUEVfQ1VSUkVOVF9TTElERRAAEiAKHEdST1VQX1NPVVJDRV9UWVBF",
            "X05FWFRfU0xJREUQARIgChxHUk9VUF9TT1VSQ0VfVFlQRV9ORVhUX0dST1VQ",
            "EAIa2QEKCkdyb3VwQ29sb3ISTwoLZ3JvdXBTb3VyY2UYASABKA4yOi5ydi5k",
            "YXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuR3JvdXBDb2xvci5Hcm91cFNv",
            "dXJjZVR5cGUiegoPR3JvdXBTb3VyY2VUeXBlEiMKH0dST1VQX1NPVVJDRV9U",
            "WVBFX0NVUlJFTlRfU0xJREUQABIgChxHUk9VUF9TT1VSQ0VfVFlQRV9ORVhU",
            "X1NMSURFEAESIAocR1JPVVBfU09VUkNFX1RZUEVfTkVYVF9HUk9VUBACGsoB",
            "Cg5TbGlkZUxhYmVsVGV4dBJbChJzbGlkZV9sYWJlbF9zb3VyY2UYASABKA4y",
            "Py5ydi5kYXRhLlNsaWRlLkVsZW1lbnQuRGF0YUxpbmsuU2xpZGVMYWJlbFRl",
            "eHQuU2xpZGVMYWJlbFNvdXJjZSJbChBTbGlkZUxhYmVsU291cmNlEiQKIFNM",
            "SURFX0xBQkVMX1NPVVJDRV9DVVJSRU5UX1NMSURFEAASIQodU0xJREVfTEFC",
            "RUxfU09VUkNFX05FWFRfU0xJREUQARrMAQoPU2xpZGVMYWJlbENvbG9yElwK",
            "EnNsaWRlX2xhYmVsX3NvdXJjZRgBIAEoDjJALnJ2LmRhdGEuU2xpZGUuRWxl",
            "bWVudC5EYXRhTGluay5TbGlkZUxhYmVsQ29sb3IuU2xpZGVMYWJlbFNvdXJj",
            "ZSJbChBTbGlkZUxhYmVsU291cmNlEiQKIFNMSURFX0xBQkVMX1NPVVJDRV9D",
            "VVJSRU5UX1NMSURFEAASIQodU0xJREVfTEFCRUxfU09VUkNFX05FWFRfU0xJ",
            "REUQARoTChFQcmVzZW50YXRpb25Ob3RlcxrOAQoMUHJlc2VudGF0aW9uElwK",
            "E3ByZXNlbnRhdGlvbl9zb3VyY2UYASABKA4yPy5ydi5kYXRhLlNsaWRlLkVs",
            "ZW1lbnQuRGF0YUxpbmsuUHJlc2VudGF0aW9uLlByZXNlbnRhdGlvblNvdXJj",
            "ZSJgChJQcmVzZW50YXRpb25Tb3VyY2USJAogUFJFU0VOVEFUSU9OX1NPVVJD",
            "RV9QUkVTRU5UQVRJT04QABIkCiBQUkVTRU5UQVRJT05fU09VUkNFX0FOTk9V",
            "TkNFTUVOVBABGvYCCgxQbGF5bGlzdEl0ZW0SXwoScGxheWxpc3RJdGVtU291",
            "cmNlGAEgASgOMkMucnYuZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFMaW5rLlBs",
            "YXlsaXN0SXRlbS5QbGF5bGlzdEl0ZW1Tb3VyY2VUeXBlEhcKD3Nob3dBcnJh",
            "bmdlbWVudBgCIAEoCCLrAQoWUGxheWxpc3RJdGVtU291cmNlVHlwZRIlCiFQ",
            "TEFZTElTVF9JVEVNX1NPVVJDRV9UWVBFX0NVUlJFTlQQABIiCh5QTEFZTElT",
            "VF9JVEVNX1NPVVJDRV9UWVBFX05FWFQQARIsCihQTEFZTElTVF9JVEVNX1NP",
            "VVJDRV9UWVBFX0NVUlJFTlRfSEVBREVSEAISKQolUExBWUxJU1RfSVRFTV9T",
            "T1VSQ0VfVFlQRV9ORVhUX0hFQURFUhADEi0KKVBMQVlMSVNUX0lURU1fU09V",
            "UkNFX1RZUEVfUEFSRU5UX1BMQVlMSVNUEAQakQIKGEF1dG9BZHZhbmNlVGlt",
            "ZVJlbWFpbmluZxJnChNhdXRvX2FkdmFuY2Vfc291cmNlGAEgASgOMkoucnYu",
            "ZGF0YS5TbGlkZS5FbGVtZW50LkRhdGFMaW5rLkF1dG9BZHZhbmNlVGltZVJl",
            "bWFpbmluZy5BdXRvQWR2YW5jZVNvdXJjZRIrCgx0aW1lcl9mb3JtYXQYAiAB",
            "KAsyFS5ydi5kYXRhLlRpbWVyLkZvcm1hdCJfChFBdXRvQWR2YW5jZVNvdXJj",
            "ZRIkCiBBVVRPX0FEVkFOQ0VfU09VUkNFX1BSRVNFTlRBVElPThAAEiQKIEFV",
            "VE9fQURWQU5DRV9TT1VSQ0VfQU5OT1VOQ0VNRU5UEAEalQIKEUNhcHR1cmVT",
            "dGF0dXNUZXh0ElMKC3N0YXR1c190ZXh0GAEgASgLMjwucnYuZGF0YS5TbGlk",
            "ZS5FbGVtZW50LkRhdGFMaW5rLkNhcHR1cmVTdGF0dXNUZXh0LlN0YXR1c1Rl",
            "eHRIABJVCgxlbGFwc2VkX3RpbWUYAiABKAsyPS5ydi5kYXRhLlNsaWRlLkVs",
            "ZW1lbnQuRGF0YUxpbmsuQ2FwdHVyZVN0YXR1c1RleHQuRWxhcHNlZFRpbWVI",
            "ABoMCgpTdGF0dXNUZXh0GjoKC0VsYXBzZWRUaW1lEisKDHRpbWVyX2Zvcm1h",
            "dBgBIAEoCzIVLnJ2LmRhdGEuVGltZXIuRm9ybWF0QgoKCFRleHRUeXBlGhQK",
            "EkNhcHR1cmVTdGF0dXNDb2xvchrzAQoKU2xpZGVDb3VudBJdChRzbGlkZUNv",
            "dW50U291cmNlVHlwZRgBIAEoDjI/LnJ2LmRhdGEuU2xpZGUuRWxlbWVudC5E",
            "YXRhTGluay5TbGlkZUNvdW50LlNsaWRlQ291bnRTb3VyY2VUeXBlIoUBChRT",
            "bGlkZUNvdW50U291cmNlVHlwZRIjCh9TTElERV9DT1VOVF9TT1VSQ0VfVFlQ",
            "RV9DVVJSRU5UEAASJQohU0xJREVfQ09VTlRfU09VUkNFX1RZUEVfUkVNQUlO",
            "SU5HEAESIQodU0xJREVfQ09VTlRfU09VUkNFX1RZUEVfVE9UQUwQAhoPCg1D",
            "aG9yZFByb0NoYXJ0Qg4KDFByb3BlcnR5VHlwZRrUAgoMVGV4dFNjcm9sbGVy",
            "EhUKDXNob3VsZF9zY3JvbGwYASABKAgSEwoLc2Nyb2xsX3JhdGUYAiABKAES",
            "FQoNc2hvdWxkX3JlcGVhdBgDIAEoCBIXCg9yZXBlYXRfZGlzdGFuY2UYBCAB",
            "KAESSgoTc2Nyb2xsaW5nX2RpcmVjdGlvbhgFIAEoDjItLnJ2LmRhdGEuU2xp",
            "ZGUuRWxlbWVudC5UZXh0U2Nyb2xsZXIuRGlyZWN0aW9uEhkKEXN0YXJ0c19v",
            "ZmZfc2NyZWVuGAYgASgIEhEKCWZhZGVfbGVmdBgHIAEoARISCgpmYWRlX3Jp",
            "Z2h0GAggASgBIloKCURpcmVjdGlvbhISCg5ESVJFQ1RJT05fTEVGVBAAEhMK",
            "D0RJUkVDVElPTl9SSUdIVBABEhAKDERJUkVDVElPTl9VUBACEhIKDkRJUkVD",
            "VElPTl9ET1dOEAMiaAoOVGV4dFJldmVhbFR5cGUSGQoVVEVYVF9SRVZFQUxf",
            "VFlQRV9OT05FEAASGwoXVEVYVF9SRVZFQUxfVFlQRV9CVUxMRVQQARIeChpU",
            "RVhUX1JFVkVBTF9UWVBFX1VOREVSTElORRACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Rv.Data.GraphicsDataReflection.Descriptor, global::Rv.Data.BasicTypesReflection.Descriptor, global::Rv.Data.AlignmentGuideReflection.Descriptor, global::Rv.Data.EffectsReflection.Descriptor, global::Rv.Data.TimersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide), global::Rv.Data.Slide.Parser, new[]{ "Elements", "ElementBuildOrder", "Guidelines", "DrawsBackgroundColor", "BackgroundColor", "Size", "Uuid" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element), global::Rv.Data.Slide.Types.Element.Parser, new[]{ "Element_", "BuildIn", "BuildOut", "Info", "RevealType", "DataLinks", "ChildBuilds", "RevealFromIndex", "TextScroller" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.TextRevealType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.Build), global::Rv.Data.Slide.Types.Element.Types.Build.Parser, new[]{ "Uuid", "ElementUUID", "Start", "DelayTime", "Transition" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.ChildBuild), global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Parser, new[]{ "Uuid", "Start", "DelayTime", "Index" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink), global::Rv.Data.Slide.Types.Element.Types.DataLink.Parser, new[]{ "Ticker", "AlternateText", "TimerText", "ClockText", "ChordChart", "OutputScreen", "PcoLive", "AlternateFill", "VisibilityLink", "SlideText", "StageMessage", "VideoCountdown", "SlideImage", "CcliText", "GroupName", "GroupColor", "PresentationNotes", "PlaylistItem", "AutoAdvanceTimeRemaining", "CaptureStatusText", "CaptureStatusColor", "SlideCount", "AudioCountdown", "Presentation", "SlideLabelText", "SlideLabelColor", "RssFeed", "FileFeed", "ChordProChart" }, new[]{ "PropertyType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Parser, new[]{ "Url", "Content", "TextDelimiter" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.FileFeed), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.FileFeed.Parser, new[]{ "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Parser, new[]{ "PlayRate", "ShouldLoop", "LoopDelay", "TextDelimiter", "TextType", "RssType", "FileType" }, new[]{ "SourceType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.TextType), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.TextType.Parser, new[]{ "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Parser, new[]{ "Url", "Content" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.FileType), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.FileType.Parser, new[]{ "Url" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Parser, new[]{ "OtherElementUuid", "OtherElementName", "TextTransformOptions", "TextTransform" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CCLIText), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CCLIText.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger.Parser, new[]{ "Time", "Color" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.TimerText), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.TimerText.Parser, new[]{ "TimerUuid", "TimerName", "TimerFormat", "TimerFormatString", "ColorTriggers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ClockText), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ClockText.Parser, new[]{ "ClockFormatString", "Format" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordChart), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordChart.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.OutputScreen), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.OutputScreen.Parser, new[]{ "ScreenId", "ScreenName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Parser, new[]{ "Theme", "CountdownType" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme), typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementFill), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementFill.Parser, new[]{ "OtherElementUuid", "OtherElementName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Parser, new[]{ "VisibilityCriterion", "Conditions" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Parser, new[]{ "ElementVisibility", "TimerVisibility", "VideoCountdownVisibility", "CaptureSessionVisibility", "VideoInputVisibility", "AudioCountdownVisibility" }, new[]{ "ConditionType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Parser, new[]{ "OtherElementUuid", "OtherElementName", "VisibilityCriterion" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Parser, new[]{ "TimerUuid", "TimerName", "VisibilityCriterion" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Parser, new[]{ "VisibilityCriterion" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Parser, new[]{ "VisibilityCriterion" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Parser, new[]{ "VisibilityCriterion" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Parser, new[]{ "VideoInputIndex", "VisibilityCriterion" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion) }, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Parser, new[]{ "SourceSlide", "SourceOption", "PreserveNotesFormat", "NameToMatch", "ElementTextTransform" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType), typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption), typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Parser, new[]{ "SourceSlide" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.StageMessage), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.StageMessage.Parser, new[]{ "ShouldFlash", "FlashColor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Parser, new[]{ "TimerFormat", "TimerFormatString", "ColorTriggers", "IgnoreLoopingVideos", "VideoCountdownSource" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AudioCountdown), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AudioCountdown.Parser, new[]{ "TimerFormat", "TimerFormatString", "ColorTriggers", "IgnoreLoopingAudio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Parser, new[]{ "GroupSource" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Parser, new[]{ "GroupSource" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Parser, new[]{ "SlideLabelSource" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Parser, new[]{ "SlideLabelSource" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PresentationNotes), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PresentationNotes.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Parser, new[]{ "PresentationSource" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Parser, new[]{ "PlaylistItemSource", "ShowArrangement" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Parser, new[]{ "AutoAdvanceSource", "TimerFormat" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Parser, new[]{ "StatusText", "ElapsedTime" }, new[]{ "TextType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.StatusText), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.StatusText.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.ElapsedTime), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.ElapsedTime.Parser, new[]{ "TimerFormat" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusColor), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusColor.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Parser, new[]{ "SlideCountSourceType" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordProChart), global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordProChart.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Slide.Types.Element.Types.TextScroller), global::Rv.Data.Slide.Types.Element.Types.TextScroller.Parser, new[]{ "ShouldScroll", "ScrollRate", "ShouldRepeat", "RepeatDistance", "ScrollingDirection", "StartsOffScreen", "FadeLeft", "FadeRight" }, null, new[]{ typeof(global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction) }, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Slide : pb::IMessage<Slide>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Slide> _parser = new pb::MessageParser<Slide>(() => new Slide());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Slide> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rv.Data.SlideReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Slide() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Slide(Slide other) : this() {
      elements_ = other.elements_.Clone();
      elementBuildOrder_ = other.elementBuildOrder_.Clone();
      guidelines_ = other.guidelines_.Clone();
      drawsBackgroundColor_ = other.drawsBackgroundColor_;
      backgroundColor_ = other.backgroundColor_ != null ? other.backgroundColor_.Clone() : null;
      size_ = other.size_ != null ? other.size_.Clone() : null;
      uuid_ = other.uuid_ != null ? other.uuid_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Slide Clone() {
      return new Slide(this);
    }

    /// <summary>Field number for the "elements" field.</summary>
    public const int ElementsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Rv.Data.Slide.Types.Element> _repeated_elements_codec
        = pb::FieldCodec.ForMessage(10, global::Rv.Data.Slide.Types.Element.Parser);
    private readonly pbc::RepeatedField<global::Rv.Data.Slide.Types.Element> elements_ = new pbc::RepeatedField<global::Rv.Data.Slide.Types.Element>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Rv.Data.Slide.Types.Element> Elements {
      get { return elements_; }
    }

    /// <summary>Field number for the "element_build_order" field.</summary>
    public const int ElementBuildOrderFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Rv.Data.UUID> _repeated_elementBuildOrder_codec
        = pb::FieldCodec.ForMessage(18, global::Rv.Data.UUID.Parser);
    private readonly pbc::RepeatedField<global::Rv.Data.UUID> elementBuildOrder_ = new pbc::RepeatedField<global::Rv.Data.UUID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Rv.Data.UUID> ElementBuildOrder {
      get { return elementBuildOrder_; }
    }

    /// <summary>Field number for the "guidelines" field.</summary>
    public const int GuidelinesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Rv.Data.AlignmentGuide> _repeated_guidelines_codec
        = pb::FieldCodec.ForMessage(26, global::Rv.Data.AlignmentGuide.Parser);
    private readonly pbc::RepeatedField<global::Rv.Data.AlignmentGuide> guidelines_ = new pbc::RepeatedField<global::Rv.Data.AlignmentGuide>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Rv.Data.AlignmentGuide> Guidelines {
      get { return guidelines_; }
    }

    /// <summary>Field number for the "draws_background_color" field.</summary>
    public const int DrawsBackgroundColorFieldNumber = 4;
    private bool drawsBackgroundColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DrawsBackgroundColor {
      get { return drawsBackgroundColor_; }
      set {
        drawsBackgroundColor_ = value;
      }
    }

    /// <summary>Field number for the "background_color" field.</summary>
    public const int BackgroundColorFieldNumber = 5;
    private global::Rv.Data.Color backgroundColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.Color BackgroundColor {
      get { return backgroundColor_; }
      set {
        backgroundColor_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 6;
    private global::Rv.Data.Graphics.Types.Size size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.Graphics.Types.Size Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 7;
    private global::Rv.Data.UUID uuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.UUID Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Slide);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Slide other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!elements_.Equals(other.elements_)) return false;
      if(!elementBuildOrder_.Equals(other.elementBuildOrder_)) return false;
      if(!guidelines_.Equals(other.guidelines_)) return false;
      if (DrawsBackgroundColor != other.DrawsBackgroundColor) return false;
      if (!object.Equals(BackgroundColor, other.BackgroundColor)) return false;
      if (!object.Equals(Size, other.Size)) return false;
      if (!object.Equals(Uuid, other.Uuid)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= elements_.GetHashCode();
      hash ^= elementBuildOrder_.GetHashCode();
      hash ^= guidelines_.GetHashCode();
      if (DrawsBackgroundColor != false) hash ^= DrawsBackgroundColor.GetHashCode();
      if (backgroundColor_ != null) hash ^= BackgroundColor.GetHashCode();
      if (size_ != null) hash ^= Size.GetHashCode();
      if (uuid_ != null) hash ^= Uuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      elements_.WriteTo(output, _repeated_elements_codec);
      elementBuildOrder_.WriteTo(output, _repeated_elementBuildOrder_codec);
      guidelines_.WriteTo(output, _repeated_guidelines_codec);
      if (DrawsBackgroundColor != false) {
        output.WriteRawTag(32);
        output.WriteBool(DrawsBackgroundColor);
      }
      if (backgroundColor_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BackgroundColor);
      }
      if (size_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Size);
      }
      if (uuid_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      elements_.WriteTo(ref output, _repeated_elements_codec);
      elementBuildOrder_.WriteTo(ref output, _repeated_elementBuildOrder_codec);
      guidelines_.WriteTo(ref output, _repeated_guidelines_codec);
      if (DrawsBackgroundColor != false) {
        output.WriteRawTag(32);
        output.WriteBool(DrawsBackgroundColor);
      }
      if (backgroundColor_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BackgroundColor);
      }
      if (size_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Size);
      }
      if (uuid_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += elements_.CalculateSize(_repeated_elements_codec);
      size += elementBuildOrder_.CalculateSize(_repeated_elementBuildOrder_codec);
      size += guidelines_.CalculateSize(_repeated_guidelines_codec);
      if (DrawsBackgroundColor != false) {
        size += 1 + 1;
      }
      if (backgroundColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackgroundColor);
      }
      if (size_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Size);
      }
      if (uuid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Slide other) {
      if (other == null) {
        return;
      }
      elements_.Add(other.elements_);
      elementBuildOrder_.Add(other.elementBuildOrder_);
      guidelines_.Add(other.guidelines_);
      if (other.DrawsBackgroundColor != false) {
        DrawsBackgroundColor = other.DrawsBackgroundColor;
      }
      if (other.backgroundColor_ != null) {
        if (backgroundColor_ == null) {
          BackgroundColor = new global::Rv.Data.Color();
        }
        BackgroundColor.MergeFrom(other.BackgroundColor);
      }
      if (other.size_ != null) {
        if (size_ == null) {
          Size = new global::Rv.Data.Graphics.Types.Size();
        }
        Size.MergeFrom(other.Size);
      }
      if (other.uuid_ != null) {
        if (uuid_ == null) {
          Uuid = new global::Rv.Data.UUID();
        }
        Uuid.MergeFrom(other.Uuid);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            elements_.AddEntriesFrom(input, _repeated_elements_codec);
            break;
          }
          case 18: {
            elementBuildOrder_.AddEntriesFrom(input, _repeated_elementBuildOrder_codec);
            break;
          }
          case 26: {
            guidelines_.AddEntriesFrom(input, _repeated_guidelines_codec);
            break;
          }
          case 32: {
            DrawsBackgroundColor = input.ReadBool();
            break;
          }
          case 42: {
            if (backgroundColor_ == null) {
              BackgroundColor = new global::Rv.Data.Color();
            }
            input.ReadMessage(BackgroundColor);
            break;
          }
          case 50: {
            if (size_ == null) {
              Size = new global::Rv.Data.Graphics.Types.Size();
            }
            input.ReadMessage(Size);
            break;
          }
          case 58: {
            if (uuid_ == null) {
              Uuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(Uuid);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            elements_.AddEntriesFrom(ref input, _repeated_elements_codec);
            break;
          }
          case 18: {
            elementBuildOrder_.AddEntriesFrom(ref input, _repeated_elementBuildOrder_codec);
            break;
          }
          case 26: {
            guidelines_.AddEntriesFrom(ref input, _repeated_guidelines_codec);
            break;
          }
          case 32: {
            DrawsBackgroundColor = input.ReadBool();
            break;
          }
          case 42: {
            if (backgroundColor_ == null) {
              BackgroundColor = new global::Rv.Data.Color();
            }
            input.ReadMessage(BackgroundColor);
            break;
          }
          case 50: {
            if (size_ == null) {
              Size = new global::Rv.Data.Graphics.Types.Size();
            }
            input.ReadMessage(Size);
            break;
          }
          case 58: {
            if (uuid_ == null) {
              Uuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(Uuid);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Slide message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Element : pb::IMessage<Element>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Element> _parser = new pb::MessageParser<Element>(() => new Element());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Element> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.Slide.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Element() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Element(Element other) : this() {
          element_ = other.element_ != null ? other.element_.Clone() : null;
          buildIn_ = other.buildIn_ != null ? other.buildIn_.Clone() : null;
          buildOut_ = other.buildOut_ != null ? other.buildOut_.Clone() : null;
          info_ = other.info_;
          revealType_ = other.revealType_;
          dataLinks_ = other.dataLinks_.Clone();
          childBuilds_ = other.childBuilds_.Clone();
          revealFromIndex_ = other.revealFromIndex_;
          textScroller_ = other.textScroller_ != null ? other.textScroller_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Element Clone() {
          return new Element(this);
        }

        /// <summary>Field number for the "element" field.</summary>
        public const int Element_FieldNumber = 1;
        private global::Rv.Data.Graphics.Types.Element element_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Graphics.Types.Element Element_ {
          get { return element_; }
          set {
            element_ = value;
          }
        }

        /// <summary>Field number for the "build_in" field.</summary>
        public const int BuildInFieldNumber = 2;
        private global::Rv.Data.Slide.Types.Element.Types.Build buildIn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Slide.Types.Element.Types.Build BuildIn {
          get { return buildIn_; }
          set {
            buildIn_ = value;
          }
        }

        /// <summary>Field number for the "build_out" field.</summary>
        public const int BuildOutFieldNumber = 3;
        private global::Rv.Data.Slide.Types.Element.Types.Build buildOut_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Slide.Types.Element.Types.Build BuildOut {
          get { return buildOut_; }
          set {
            buildOut_ = value;
          }
        }

        /// <summary>Field number for the "info" field.</summary>
        public const int InfoFieldNumber = 4;
        private uint info_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Info {
          get { return info_; }
          set {
            info_ = value;
          }
        }

        /// <summary>Field number for the "reveal_type" field.</summary>
        public const int RevealTypeFieldNumber = 5;
        private global::Rv.Data.Slide.Types.Element.Types.TextRevealType revealType_ = global::Rv.Data.Slide.Types.Element.Types.TextRevealType.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Slide.Types.Element.Types.TextRevealType RevealType {
          get { return revealType_; }
          set {
            revealType_ = value;
          }
        }

        /// <summary>Field number for the "data_links" field.</summary>
        public const int DataLinksFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Rv.Data.Slide.Types.Element.Types.DataLink> _repeated_dataLinks_codec
            = pb::FieldCodec.ForMessage(50, global::Rv.Data.Slide.Types.Element.Types.DataLink.Parser);
        private readonly pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink> dataLinks_ = new pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink> DataLinks {
          get { return dataLinks_; }
        }

        /// <summary>Field number for the "childBuilds" field.</summary>
        public const int ChildBuildsFieldNumber = 7;
        private static readonly pb::FieldCodec<global::Rv.Data.Slide.Types.Element.Types.ChildBuild> _repeated_childBuilds_codec
            = pb::FieldCodec.ForMessage(58, global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Parser);
        private readonly pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.ChildBuild> childBuilds_ = new pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.ChildBuild>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.ChildBuild> ChildBuilds {
          get { return childBuilds_; }
        }

        /// <summary>Field number for the "reveal_from_index" field.</summary>
        public const int RevealFromIndexFieldNumber = 8;
        private uint revealFromIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint RevealFromIndex {
          get { return revealFromIndex_; }
          set {
            revealFromIndex_ = value;
          }
        }

        /// <summary>Field number for the "text_scroller" field.</summary>
        public const int TextScrollerFieldNumber = 9;
        private global::Rv.Data.Slide.Types.Element.Types.TextScroller textScroller_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Slide.Types.Element.Types.TextScroller TextScroller {
          get { return textScroller_; }
          set {
            textScroller_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Element);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Element other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Element_, other.Element_)) return false;
          if (!object.Equals(BuildIn, other.BuildIn)) return false;
          if (!object.Equals(BuildOut, other.BuildOut)) return false;
          if (Info != other.Info) return false;
          if (RevealType != other.RevealType) return false;
          if(!dataLinks_.Equals(other.dataLinks_)) return false;
          if(!childBuilds_.Equals(other.childBuilds_)) return false;
          if (RevealFromIndex != other.RevealFromIndex) return false;
          if (!object.Equals(TextScroller, other.TextScroller)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (element_ != null) hash ^= Element_.GetHashCode();
          if (buildIn_ != null) hash ^= BuildIn.GetHashCode();
          if (buildOut_ != null) hash ^= BuildOut.GetHashCode();
          if (Info != 0) hash ^= Info.GetHashCode();
          if (RevealType != global::Rv.Data.Slide.Types.Element.Types.TextRevealType.None) hash ^= RevealType.GetHashCode();
          hash ^= dataLinks_.GetHashCode();
          hash ^= childBuilds_.GetHashCode();
          if (RevealFromIndex != 0) hash ^= RevealFromIndex.GetHashCode();
          if (textScroller_ != null) hash ^= TextScroller.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (element_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Element_);
          }
          if (buildIn_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(BuildIn);
          }
          if (buildOut_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(BuildOut);
          }
          if (Info != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Info);
          }
          if (RevealType != global::Rv.Data.Slide.Types.Element.Types.TextRevealType.None) {
            output.WriteRawTag(40);
            output.WriteEnum((int) RevealType);
          }
          dataLinks_.WriteTo(output, _repeated_dataLinks_codec);
          childBuilds_.WriteTo(output, _repeated_childBuilds_codec);
          if (RevealFromIndex != 0) {
            output.WriteRawTag(64);
            output.WriteUInt32(RevealFromIndex);
          }
          if (textScroller_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(TextScroller);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (element_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Element_);
          }
          if (buildIn_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(BuildIn);
          }
          if (buildOut_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(BuildOut);
          }
          if (Info != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Info);
          }
          if (RevealType != global::Rv.Data.Slide.Types.Element.Types.TextRevealType.None) {
            output.WriteRawTag(40);
            output.WriteEnum((int) RevealType);
          }
          dataLinks_.WriteTo(ref output, _repeated_dataLinks_codec);
          childBuilds_.WriteTo(ref output, _repeated_childBuilds_codec);
          if (RevealFromIndex != 0) {
            output.WriteRawTag(64);
            output.WriteUInt32(RevealFromIndex);
          }
          if (textScroller_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(TextScroller);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (element_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Element_);
          }
          if (buildIn_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildIn);
          }
          if (buildOut_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildOut);
          }
          if (Info != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Info);
          }
          if (RevealType != global::Rv.Data.Slide.Types.Element.Types.TextRevealType.None) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RevealType);
          }
          size += dataLinks_.CalculateSize(_repeated_dataLinks_codec);
          size += childBuilds_.CalculateSize(_repeated_childBuilds_codec);
          if (RevealFromIndex != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RevealFromIndex);
          }
          if (textScroller_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextScroller);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Element other) {
          if (other == null) {
            return;
          }
          if (other.element_ != null) {
            if (element_ == null) {
              Element_ = new global::Rv.Data.Graphics.Types.Element();
            }
            Element_.MergeFrom(other.Element_);
          }
          if (other.buildIn_ != null) {
            if (buildIn_ == null) {
              BuildIn = new global::Rv.Data.Slide.Types.Element.Types.Build();
            }
            BuildIn.MergeFrom(other.BuildIn);
          }
          if (other.buildOut_ != null) {
            if (buildOut_ == null) {
              BuildOut = new global::Rv.Data.Slide.Types.Element.Types.Build();
            }
            BuildOut.MergeFrom(other.BuildOut);
          }
          if (other.Info != 0) {
            Info = other.Info;
          }
          if (other.RevealType != global::Rv.Data.Slide.Types.Element.Types.TextRevealType.None) {
            RevealType = other.RevealType;
          }
          dataLinks_.Add(other.dataLinks_);
          childBuilds_.Add(other.childBuilds_);
          if (other.RevealFromIndex != 0) {
            RevealFromIndex = other.RevealFromIndex;
          }
          if (other.textScroller_ != null) {
            if (textScroller_ == null) {
              TextScroller = new global::Rv.Data.Slide.Types.Element.Types.TextScroller();
            }
            TextScroller.MergeFrom(other.TextScroller);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (element_ == null) {
                  Element_ = new global::Rv.Data.Graphics.Types.Element();
                }
                input.ReadMessage(Element_);
                break;
              }
              case 18: {
                if (buildIn_ == null) {
                  BuildIn = new global::Rv.Data.Slide.Types.Element.Types.Build();
                }
                input.ReadMessage(BuildIn);
                break;
              }
              case 26: {
                if (buildOut_ == null) {
                  BuildOut = new global::Rv.Data.Slide.Types.Element.Types.Build();
                }
                input.ReadMessage(BuildOut);
                break;
              }
              case 32: {
                Info = input.ReadUInt32();
                break;
              }
              case 40: {
                RevealType = (global::Rv.Data.Slide.Types.Element.Types.TextRevealType) input.ReadEnum();
                break;
              }
              case 50: {
                dataLinks_.AddEntriesFrom(input, _repeated_dataLinks_codec);
                break;
              }
              case 58: {
                childBuilds_.AddEntriesFrom(input, _repeated_childBuilds_codec);
                break;
              }
              case 64: {
                RevealFromIndex = input.ReadUInt32();
                break;
              }
              case 74: {
                if (textScroller_ == null) {
                  TextScroller = new global::Rv.Data.Slide.Types.Element.Types.TextScroller();
                }
                input.ReadMessage(TextScroller);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (element_ == null) {
                  Element_ = new global::Rv.Data.Graphics.Types.Element();
                }
                input.ReadMessage(Element_);
                break;
              }
              case 18: {
                if (buildIn_ == null) {
                  BuildIn = new global::Rv.Data.Slide.Types.Element.Types.Build();
                }
                input.ReadMessage(BuildIn);
                break;
              }
              case 26: {
                if (buildOut_ == null) {
                  BuildOut = new global::Rv.Data.Slide.Types.Element.Types.Build();
                }
                input.ReadMessage(BuildOut);
                break;
              }
              case 32: {
                Info = input.ReadUInt32();
                break;
              }
              case 40: {
                RevealType = (global::Rv.Data.Slide.Types.Element.Types.TextRevealType) input.ReadEnum();
                break;
              }
              case 50: {
                dataLinks_.AddEntriesFrom(ref input, _repeated_dataLinks_codec);
                break;
              }
              case 58: {
                childBuilds_.AddEntriesFrom(ref input, _repeated_childBuilds_codec);
                break;
              }
              case 64: {
                RevealFromIndex = input.ReadUInt32();
                break;
              }
              case 74: {
                if (textScroller_ == null) {
                  TextScroller = new global::Rv.Data.Slide.Types.Element.Types.TextScroller();
                }
                input.ReadMessage(TextScroller);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Element message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum TextRevealType {
            [pbr::OriginalName("TEXT_REVEAL_TYPE_NONE")] None = 0,
            [pbr::OriginalName("TEXT_REVEAL_TYPE_BULLET")] Bullet = 1,
            [pbr::OriginalName("TEXT_REVEAL_TYPE_UNDERLINE")] Underline = 2,
          }

          public sealed partial class Build : pb::IMessage<Build>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Build> _parser = new pb::MessageParser<Build>(() => new Build());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Build> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Rv.Data.Slide.Types.Element.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Build() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Build(Build other) : this() {
              uuid_ = other.uuid_ != null ? other.uuid_.Clone() : null;
              elementUUID_ = other.elementUUID_ != null ? other.elementUUID_.Clone() : null;
              start_ = other.start_;
              delayTime_ = other.delayTime_;
              transition_ = other.transition_ != null ? other.transition_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Build Clone() {
              return new Build(this);
            }

            /// <summary>Field number for the "uuid" field.</summary>
            public const int UuidFieldNumber = 1;
            private global::Rv.Data.UUID uuid_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.UUID Uuid {
              get { return uuid_; }
              set {
                uuid_ = value;
              }
            }

            /// <summary>Field number for the "elementUUID" field.</summary>
            public const int ElementUUIDFieldNumber = 2;
            private global::Rv.Data.UUID elementUUID_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.UUID ElementUUID {
              get { return elementUUID_; }
              set {
                elementUUID_ = value;
              }
            }

            /// <summary>Field number for the "start" field.</summary>
            public const int StartFieldNumber = 3;
            private global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start start_ = global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start.OnClick;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start Start {
              get { return start_; }
              set {
                start_ = value;
              }
            }

            /// <summary>Field number for the "delayTime" field.</summary>
            public const int DelayTimeFieldNumber = 4;
            private double delayTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double DelayTime {
              get { return delayTime_; }
              set {
                delayTime_ = value;
              }
            }

            /// <summary>Field number for the "transition" field.</summary>
            public const int TransitionFieldNumber = 5;
            private global::Rv.Data.Transition transition_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Transition Transition {
              get { return transition_; }
              set {
                transition_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Build);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Build other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Uuid, other.Uuid)) return false;
              if (!object.Equals(ElementUUID, other.ElementUUID)) return false;
              if (Start != other.Start) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DelayTime, other.DelayTime)) return false;
              if (!object.Equals(Transition, other.Transition)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (uuid_ != null) hash ^= Uuid.GetHashCode();
              if (elementUUID_ != null) hash ^= ElementUUID.GetHashCode();
              if (Start != global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start.OnClick) hash ^= Start.GetHashCode();
              if (DelayTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DelayTime);
              if (transition_ != null) hash ^= Transition.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (uuid_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Uuid);
              }
              if (elementUUID_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(ElementUUID);
              }
              if (Start != global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start.OnClick) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Start);
              }
              if (DelayTime != 0D) {
                output.WriteRawTag(33);
                output.WriteDouble(DelayTime);
              }
              if (transition_ != null) {
                output.WriteRawTag(42);
                output.WriteMessage(Transition);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (uuid_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Uuid);
              }
              if (elementUUID_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(ElementUUID);
              }
              if (Start != global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start.OnClick) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Start);
              }
              if (DelayTime != 0D) {
                output.WriteRawTag(33);
                output.WriteDouble(DelayTime);
              }
              if (transition_ != null) {
                output.WriteRawTag(42);
                output.WriteMessage(Transition);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (uuid_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
              }
              if (elementUUID_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ElementUUID);
              }
              if (Start != global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start.OnClick) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Start);
              }
              if (DelayTime != 0D) {
                size += 1 + 8;
              }
              if (transition_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transition);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Build other) {
              if (other == null) {
                return;
              }
              if (other.uuid_ != null) {
                if (uuid_ == null) {
                  Uuid = new global::Rv.Data.UUID();
                }
                Uuid.MergeFrom(other.Uuid);
              }
              if (other.elementUUID_ != null) {
                if (elementUUID_ == null) {
                  ElementUUID = new global::Rv.Data.UUID();
                }
                ElementUUID.MergeFrom(other.ElementUUID);
              }
              if (other.Start != global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start.OnClick) {
                Start = other.Start;
              }
              if (other.DelayTime != 0D) {
                DelayTime = other.DelayTime;
              }
              if (other.transition_ != null) {
                if (transition_ == null) {
                  Transition = new global::Rv.Data.Transition();
                }
                Transition.MergeFrom(other.Transition);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (uuid_ == null) {
                      Uuid = new global::Rv.Data.UUID();
                    }
                    input.ReadMessage(Uuid);
                    break;
                  }
                  case 18: {
                    if (elementUUID_ == null) {
                      ElementUUID = new global::Rv.Data.UUID();
                    }
                    input.ReadMessage(ElementUUID);
                    break;
                  }
                  case 24: {
                    Start = (global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start) input.ReadEnum();
                    break;
                  }
                  case 33: {
                    DelayTime = input.ReadDouble();
                    break;
                  }
                  case 42: {
                    if (transition_ == null) {
                      Transition = new global::Rv.Data.Transition();
                    }
                    input.ReadMessage(Transition);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (uuid_ == null) {
                      Uuid = new global::Rv.Data.UUID();
                    }
                    input.ReadMessage(Uuid);
                    break;
                  }
                  case 18: {
                    if (elementUUID_ == null) {
                      ElementUUID = new global::Rv.Data.UUID();
                    }
                    input.ReadMessage(ElementUUID);
                    break;
                  }
                  case 24: {
                    Start = (global::Rv.Data.Slide.Types.Element.Types.Build.Types.Start) input.ReadEnum();
                    break;
                  }
                  case 33: {
                    DelayTime = input.ReadDouble();
                    break;
                  }
                  case 42: {
                    if (transition_ == null) {
                      Transition = new global::Rv.Data.Transition();
                    }
                    input.ReadMessage(Transition);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Build message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              public enum Start {
                [pbr::OriginalName("START_ON_CLICK")] OnClick = 0,
                [pbr::OriginalName("START_WITH_PREVIOUS")] WithPrevious = 1,
                [pbr::OriginalName("START_AFTER_PREVIOUS")] AfterPrevious = 2,
                [pbr::OriginalName("START_WITH_SLIDE")] WithSlide = 3,
              }

            }
            #endregion

          }

          public sealed partial class ChildBuild : pb::IMessage<ChildBuild>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ChildBuild> _parser = new pb::MessageParser<ChildBuild>(() => new ChildBuild());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<ChildBuild> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Rv.Data.Slide.Types.Element.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ChildBuild() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ChildBuild(ChildBuild other) : this() {
              uuid_ = other.uuid_ != null ? other.uuid_.Clone() : null;
              start_ = other.start_;
              delayTime_ = other.delayTime_;
              index_ = other.index_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public ChildBuild Clone() {
              return new ChildBuild(this);
            }

            /// <summary>Field number for the "uuid" field.</summary>
            public const int UuidFieldNumber = 1;
            private global::Rv.Data.UUID uuid_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.UUID Uuid {
              get { return uuid_; }
              set {
                uuid_ = value;
              }
            }

            /// <summary>Field number for the "start" field.</summary>
            public const int StartFieldNumber = 2;
            private global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start start_ = global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start.OnClick;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start Start {
              get { return start_; }
              set {
                start_ = value;
              }
            }

            /// <summary>Field number for the "delayTime" field.</summary>
            public const int DelayTimeFieldNumber = 3;
            private double delayTime_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double DelayTime {
              get { return delayTime_; }
              set {
                delayTime_ = value;
              }
            }

            /// <summary>Field number for the "index" field.</summary>
            public const int IndexFieldNumber = 4;
            private uint index_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public uint Index {
              get { return index_; }
              set {
                index_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as ChildBuild);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(ChildBuild other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Uuid, other.Uuid)) return false;
              if (Start != other.Start) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DelayTime, other.DelayTime)) return false;
              if (Index != other.Index) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (uuid_ != null) hash ^= Uuid.GetHashCode();
              if (Start != global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start.OnClick) hash ^= Start.GetHashCode();
              if (DelayTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DelayTime);
              if (Index != 0) hash ^= Index.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (uuid_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Uuid);
              }
              if (Start != global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start.OnClick) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Start);
              }
              if (DelayTime != 0D) {
                output.WriteRawTag(25);
                output.WriteDouble(DelayTime);
              }
              if (Index != 0) {
                output.WriteRawTag(32);
                output.WriteUInt32(Index);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (uuid_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Uuid);
              }
              if (Start != global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start.OnClick) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Start);
              }
              if (DelayTime != 0D) {
                output.WriteRawTag(25);
                output.WriteDouble(DelayTime);
              }
              if (Index != 0) {
                output.WriteRawTag(32);
                output.WriteUInt32(Index);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (uuid_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
              }
              if (Start != global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start.OnClick) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Start);
              }
              if (DelayTime != 0D) {
                size += 1 + 8;
              }
              if (Index != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(ChildBuild other) {
              if (other == null) {
                return;
              }
              if (other.uuid_ != null) {
                if (uuid_ == null) {
                  Uuid = new global::Rv.Data.UUID();
                }
                Uuid.MergeFrom(other.Uuid);
              }
              if (other.Start != global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start.OnClick) {
                Start = other.Start;
              }
              if (other.DelayTime != 0D) {
                DelayTime = other.DelayTime;
              }
              if (other.Index != 0) {
                Index = other.Index;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (uuid_ == null) {
                      Uuid = new global::Rv.Data.UUID();
                    }
                    input.ReadMessage(Uuid);
                    break;
                  }
                  case 16: {
                    Start = (global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start) input.ReadEnum();
                    break;
                  }
                  case 25: {
                    DelayTime = input.ReadDouble();
                    break;
                  }
                  case 32: {
                    Index = input.ReadUInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (uuid_ == null) {
                      Uuid = new global::Rv.Data.UUID();
                    }
                    input.ReadMessage(Uuid);
                    break;
                  }
                  case 16: {
                    Start = (global::Rv.Data.Slide.Types.Element.Types.ChildBuild.Types.Start) input.ReadEnum();
                    break;
                  }
                  case 25: {
                    DelayTime = input.ReadDouble();
                    break;
                  }
                  case 32: {
                    Index = input.ReadUInt32();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the ChildBuild message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              public enum Start {
                [pbr::OriginalName("START_ON_CLICK")] OnClick = 0,
                [pbr::OriginalName("START_WITH_PREVIOUS")] WithPrevious = 1,
                [pbr::OriginalName("START_AFTER_PREVIOUS")] AfterPrevious = 2,
                [pbr::OriginalName("START_WITH_SLIDE")] WithSlide = 3,
              }

            }
            #endregion

          }

          public sealed partial class DataLink : pb::IMessage<DataLink>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<DataLink> _parser = new pb::MessageParser<DataLink>(() => new DataLink());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<DataLink> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Rv.Data.Slide.Types.Element.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public DataLink() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public DataLink(DataLink other) : this() {
              switch (other.PropertyTypeCase) {
                case PropertyTypeOneofCase.Ticker:
                  Ticker = other.Ticker.Clone();
                  break;
                case PropertyTypeOneofCase.AlternateText:
                  AlternateText = other.AlternateText.Clone();
                  break;
                case PropertyTypeOneofCase.TimerText:
                  TimerText = other.TimerText.Clone();
                  break;
                case PropertyTypeOneofCase.ClockText:
                  ClockText = other.ClockText.Clone();
                  break;
                case PropertyTypeOneofCase.ChordChart:
                  ChordChart = other.ChordChart.Clone();
                  break;
                case PropertyTypeOneofCase.OutputScreen:
                  OutputScreen = other.OutputScreen.Clone();
                  break;
                case PropertyTypeOneofCase.PcoLive:
                  PcoLive = other.PcoLive.Clone();
                  break;
                case PropertyTypeOneofCase.AlternateFill:
                  AlternateFill = other.AlternateFill.Clone();
                  break;
                case PropertyTypeOneofCase.VisibilityLink:
                  VisibilityLink = other.VisibilityLink.Clone();
                  break;
                case PropertyTypeOneofCase.SlideText:
                  SlideText = other.SlideText.Clone();
                  break;
                case PropertyTypeOneofCase.StageMessage:
                  StageMessage = other.StageMessage.Clone();
                  break;
                case PropertyTypeOneofCase.VideoCountdown:
                  VideoCountdown = other.VideoCountdown.Clone();
                  break;
                case PropertyTypeOneofCase.SlideImage:
                  SlideImage = other.SlideImage.Clone();
                  break;
                case PropertyTypeOneofCase.CcliText:
                  CcliText = other.CcliText.Clone();
                  break;
                case PropertyTypeOneofCase.GroupName:
                  GroupName = other.GroupName.Clone();
                  break;
                case PropertyTypeOneofCase.GroupColor:
                  GroupColor = other.GroupColor.Clone();
                  break;
                case PropertyTypeOneofCase.PresentationNotes:
                  PresentationNotes = other.PresentationNotes.Clone();
                  break;
                case PropertyTypeOneofCase.PlaylistItem:
                  PlaylistItem = other.PlaylistItem.Clone();
                  break;
                case PropertyTypeOneofCase.AutoAdvanceTimeRemaining:
                  AutoAdvanceTimeRemaining = other.AutoAdvanceTimeRemaining.Clone();
                  break;
                case PropertyTypeOneofCase.CaptureStatusText:
                  CaptureStatusText = other.CaptureStatusText.Clone();
                  break;
                case PropertyTypeOneofCase.CaptureStatusColor:
                  CaptureStatusColor = other.CaptureStatusColor.Clone();
                  break;
                case PropertyTypeOneofCase.SlideCount:
                  SlideCount = other.SlideCount.Clone();
                  break;
                case PropertyTypeOneofCase.AudioCountdown:
                  AudioCountdown = other.AudioCountdown.Clone();
                  break;
                case PropertyTypeOneofCase.Presentation:
                  Presentation = other.Presentation.Clone();
                  break;
                case PropertyTypeOneofCase.SlideLabelText:
                  SlideLabelText = other.SlideLabelText.Clone();
                  break;
                case PropertyTypeOneofCase.SlideLabelColor:
                  SlideLabelColor = other.SlideLabelColor.Clone();
                  break;
                case PropertyTypeOneofCase.RssFeed:
                  RssFeed = other.RssFeed.Clone();
                  break;
                case PropertyTypeOneofCase.FileFeed:
                  FileFeed = other.FileFeed.Clone();
                  break;
                case PropertyTypeOneofCase.ChordProChart:
                  ChordProChart = other.ChordProChart.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public DataLink Clone() {
              return new DataLink(this);
            }

            /// <summary>Field number for the "ticker" field.</summary>
            public const int TickerFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker Ticker {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.Ticker ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.Ticker;
              }
            }

            /// <summary>Field number for the "alternate_text" field.</summary>
            public const int AlternateTextFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText AlternateText {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.AlternateText ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.AlternateText;
              }
            }

            /// <summary>Field number for the "timer_text" field.</summary>
            public const int TimerTextFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.TimerText TimerText {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.TimerText ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.TimerText) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.TimerText;
              }
            }

            /// <summary>Field number for the "clock_text" field.</summary>
            public const int ClockTextFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ClockText ClockText {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.ClockText ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ClockText) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.ClockText;
              }
            }

            /// <summary>Field number for the "chord_chart" field.</summary>
            public const int ChordChartFieldNumber = 5;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordChart ChordChart {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.ChordChart ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordChart) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.ChordChart;
              }
            }

            /// <summary>Field number for the "output_screen" field.</summary>
            public const int OutputScreenFieldNumber = 6;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.OutputScreen OutputScreen {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.OutputScreen ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.OutputScreen) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.OutputScreen;
              }
            }

            /// <summary>Field number for the "pco_live" field.</summary>
            public const int PcoLiveFieldNumber = 7;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive PcoLive {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.PcoLive ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.PcoLive;
              }
            }

            /// <summary>Field number for the "alternate_fill" field.</summary>
            public const int AlternateFillFieldNumber = 8;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementFill AlternateFill {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.AlternateFill ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementFill) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.AlternateFill;
              }
            }

            /// <summary>Field number for the "visibility_link" field.</summary>
            public const int VisibilityLinkFieldNumber = 9;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink VisibilityLink {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.VisibilityLink ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.VisibilityLink;
              }
            }

            /// <summary>Field number for the "slide_text" field.</summary>
            public const int SlideTextFieldNumber = 10;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText SlideText {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.SlideText ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.SlideText;
              }
            }

            /// <summary>Field number for the "stage_message" field.</summary>
            public const int StageMessageFieldNumber = 11;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.StageMessage StageMessage {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.StageMessage ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.StageMessage) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.StageMessage;
              }
            }

            /// <summary>Field number for the "video_countdown" field.</summary>
            public const int VideoCountdownFieldNumber = 12;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown VideoCountdown {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.VideoCountdown ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.VideoCountdown;
              }
            }

            /// <summary>Field number for the "slide_image" field.</summary>
            public const int SlideImageFieldNumber = 13;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage SlideImage {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.SlideImage ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.SlideImage;
              }
            }

            /// <summary>Field number for the "ccli_text" field.</summary>
            public const int CcliTextFieldNumber = 14;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CCLIText CcliText {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.CcliText ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CCLIText) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.CcliText;
              }
            }

            /// <summary>Field number for the "group_name" field.</summary>
            public const int GroupNameFieldNumber = 15;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName GroupName {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.GroupName ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.GroupName;
              }
            }

            /// <summary>Field number for the "group_color" field.</summary>
            public const int GroupColorFieldNumber = 16;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor GroupColor {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.GroupColor ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.GroupColor;
              }
            }

            /// <summary>Field number for the "presentation_notes" field.</summary>
            public const int PresentationNotesFieldNumber = 17;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PresentationNotes PresentationNotes {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.PresentationNotes ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PresentationNotes) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.PresentationNotes;
              }
            }

            /// <summary>Field number for the "playlist_item" field.</summary>
            public const int PlaylistItemFieldNumber = 18;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem PlaylistItem {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.PlaylistItem ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.PlaylistItem;
              }
            }

            /// <summary>Field number for the "auto_advance_time_remaining" field.</summary>
            public const int AutoAdvanceTimeRemainingFieldNumber = 19;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining AutoAdvanceTimeRemaining {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.AutoAdvanceTimeRemaining ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.AutoAdvanceTimeRemaining;
              }
            }

            /// <summary>Field number for the "capture_status_text" field.</summary>
            public const int CaptureStatusTextFieldNumber = 20;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText CaptureStatusText {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusText ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.CaptureStatusText;
              }
            }

            /// <summary>Field number for the "capture_status_color" field.</summary>
            public const int CaptureStatusColorFieldNumber = 21;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusColor CaptureStatusColor {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusColor ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusColor) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.CaptureStatusColor;
              }
            }

            /// <summary>Field number for the "slide_count" field.</summary>
            public const int SlideCountFieldNumber = 22;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount SlideCount {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.SlideCount ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.SlideCount;
              }
            }

            /// <summary>Field number for the "audio_countdown" field.</summary>
            public const int AudioCountdownFieldNumber = 23;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AudioCountdown AudioCountdown {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.AudioCountdown ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AudioCountdown) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.AudioCountdown;
              }
            }

            /// <summary>Field number for the "presentation" field.</summary>
            public const int PresentationFieldNumber = 24;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation Presentation {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.Presentation ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.Presentation;
              }
            }

            /// <summary>Field number for the "slide_Label_Text" field.</summary>
            public const int SlideLabelTextFieldNumber = 25;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText SlideLabelText {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelText ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.SlideLabelText;
              }
            }

            /// <summary>Field number for the "slide_Label_Color" field.</summary>
            public const int SlideLabelColorFieldNumber = 26;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor SlideLabelColor {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelColor ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.SlideLabelColor;
              }
            }

            /// <summary>Field number for the "rss_feed" field.</summary>
            public const int RssFeedFieldNumber = 27;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed RssFeed {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.RssFeed ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.RssFeed;
              }
            }

            /// <summary>Field number for the "file_feed" field.</summary>
            public const int FileFeedFieldNumber = 28;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.FileFeed FileFeed {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.FileFeed ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.FileFeed) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.FileFeed;
              }
            }

            /// <summary>Field number for the "chord_pro_chart" field.</summary>
            public const int ChordProChartFieldNumber = 29;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordProChart ChordProChart {
              get { return propertyTypeCase_ == PropertyTypeOneofCase.ChordProChart ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordProChart) propertyType_ : null; }
              set {
                propertyType_ = value;
                propertyTypeCase_ = value == null ? PropertyTypeOneofCase.None : PropertyTypeOneofCase.ChordProChart;
              }
            }

            private object propertyType_;
            /// <summary>Enum of possible cases for the "PropertyType" oneof.</summary>
            public enum PropertyTypeOneofCase {
              None = 0,
              Ticker = 1,
              AlternateText = 2,
              TimerText = 3,
              ClockText = 4,
              ChordChart = 5,
              OutputScreen = 6,
              PcoLive = 7,
              AlternateFill = 8,
              VisibilityLink = 9,
              SlideText = 10,
              StageMessage = 11,
              VideoCountdown = 12,
              SlideImage = 13,
              CcliText = 14,
              GroupName = 15,
              GroupColor = 16,
              PresentationNotes = 17,
              PlaylistItem = 18,
              AutoAdvanceTimeRemaining = 19,
              CaptureStatusText = 20,
              CaptureStatusColor = 21,
              SlideCount = 22,
              AudioCountdown = 23,
              Presentation = 24,
              SlideLabelText = 25,
              SlideLabelColor = 26,
              RssFeed = 27,
              FileFeed = 28,
              ChordProChart = 29,
            }
            private PropertyTypeOneofCase propertyTypeCase_ = PropertyTypeOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public PropertyTypeOneofCase PropertyTypeCase {
              get { return propertyTypeCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearPropertyType() {
              propertyTypeCase_ = PropertyTypeOneofCase.None;
              propertyType_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as DataLink);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(DataLink other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Ticker, other.Ticker)) return false;
              if (!object.Equals(AlternateText, other.AlternateText)) return false;
              if (!object.Equals(TimerText, other.TimerText)) return false;
              if (!object.Equals(ClockText, other.ClockText)) return false;
              if (!object.Equals(ChordChart, other.ChordChart)) return false;
              if (!object.Equals(OutputScreen, other.OutputScreen)) return false;
              if (!object.Equals(PcoLive, other.PcoLive)) return false;
              if (!object.Equals(AlternateFill, other.AlternateFill)) return false;
              if (!object.Equals(VisibilityLink, other.VisibilityLink)) return false;
              if (!object.Equals(SlideText, other.SlideText)) return false;
              if (!object.Equals(StageMessage, other.StageMessage)) return false;
              if (!object.Equals(VideoCountdown, other.VideoCountdown)) return false;
              if (!object.Equals(SlideImage, other.SlideImage)) return false;
              if (!object.Equals(CcliText, other.CcliText)) return false;
              if (!object.Equals(GroupName, other.GroupName)) return false;
              if (!object.Equals(GroupColor, other.GroupColor)) return false;
              if (!object.Equals(PresentationNotes, other.PresentationNotes)) return false;
              if (!object.Equals(PlaylistItem, other.PlaylistItem)) return false;
              if (!object.Equals(AutoAdvanceTimeRemaining, other.AutoAdvanceTimeRemaining)) return false;
              if (!object.Equals(CaptureStatusText, other.CaptureStatusText)) return false;
              if (!object.Equals(CaptureStatusColor, other.CaptureStatusColor)) return false;
              if (!object.Equals(SlideCount, other.SlideCount)) return false;
              if (!object.Equals(AudioCountdown, other.AudioCountdown)) return false;
              if (!object.Equals(Presentation, other.Presentation)) return false;
              if (!object.Equals(SlideLabelText, other.SlideLabelText)) return false;
              if (!object.Equals(SlideLabelColor, other.SlideLabelColor)) return false;
              if (!object.Equals(RssFeed, other.RssFeed)) return false;
              if (!object.Equals(FileFeed, other.FileFeed)) return false;
              if (!object.Equals(ChordProChart, other.ChordProChart)) return false;
              if (PropertyTypeCase != other.PropertyTypeCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (propertyTypeCase_ == PropertyTypeOneofCase.Ticker) hash ^= Ticker.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateText) hash ^= AlternateText.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.TimerText) hash ^= TimerText.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.ClockText) hash ^= ClockText.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.ChordChart) hash ^= ChordChart.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.OutputScreen) hash ^= OutputScreen.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.PcoLive) hash ^= PcoLive.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateFill) hash ^= AlternateFill.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.VisibilityLink) hash ^= VisibilityLink.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideText) hash ^= SlideText.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.StageMessage) hash ^= StageMessage.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.VideoCountdown) hash ^= VideoCountdown.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideImage) hash ^= SlideImage.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.CcliText) hash ^= CcliText.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.GroupName) hash ^= GroupName.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.GroupColor) hash ^= GroupColor.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.PresentationNotes) hash ^= PresentationNotes.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.PlaylistItem) hash ^= PlaylistItem.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.AutoAdvanceTimeRemaining) hash ^= AutoAdvanceTimeRemaining.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusText) hash ^= CaptureStatusText.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusColor) hash ^= CaptureStatusColor.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideCount) hash ^= SlideCount.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.AudioCountdown) hash ^= AudioCountdown.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.Presentation) hash ^= Presentation.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelText) hash ^= SlideLabelText.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelColor) hash ^= SlideLabelColor.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.RssFeed) hash ^= RssFeed.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.FileFeed) hash ^= FileFeed.GetHashCode();
              if (propertyTypeCase_ == PropertyTypeOneofCase.ChordProChart) hash ^= ChordProChart.GetHashCode();
              hash ^= (int) propertyTypeCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (propertyTypeCase_ == PropertyTypeOneofCase.Ticker) {
                output.WriteRawTag(10);
                output.WriteMessage(Ticker);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateText) {
                output.WriteRawTag(18);
                output.WriteMessage(AlternateText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.TimerText) {
                output.WriteRawTag(26);
                output.WriteMessage(TimerText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.ClockText) {
                output.WriteRawTag(34);
                output.WriteMessage(ClockText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.ChordChart) {
                output.WriteRawTag(42);
                output.WriteMessage(ChordChart);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.OutputScreen) {
                output.WriteRawTag(50);
                output.WriteMessage(OutputScreen);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.PcoLive) {
                output.WriteRawTag(58);
                output.WriteMessage(PcoLive);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateFill) {
                output.WriteRawTag(66);
                output.WriteMessage(AlternateFill);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.VisibilityLink) {
                output.WriteRawTag(74);
                output.WriteMessage(VisibilityLink);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideText) {
                output.WriteRawTag(82);
                output.WriteMessage(SlideText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.StageMessage) {
                output.WriteRawTag(90);
                output.WriteMessage(StageMessage);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.VideoCountdown) {
                output.WriteRawTag(98);
                output.WriteMessage(VideoCountdown);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideImage) {
                output.WriteRawTag(106);
                output.WriteMessage(SlideImage);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.CcliText) {
                output.WriteRawTag(114);
                output.WriteMessage(CcliText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.GroupName) {
                output.WriteRawTag(122);
                output.WriteMessage(GroupName);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.GroupColor) {
                output.WriteRawTag(130, 1);
                output.WriteMessage(GroupColor);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.PresentationNotes) {
                output.WriteRawTag(138, 1);
                output.WriteMessage(PresentationNotes);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.PlaylistItem) {
                output.WriteRawTag(146, 1);
                output.WriteMessage(PlaylistItem);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AutoAdvanceTimeRemaining) {
                output.WriteRawTag(154, 1);
                output.WriteMessage(AutoAdvanceTimeRemaining);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusText) {
                output.WriteRawTag(162, 1);
                output.WriteMessage(CaptureStatusText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusColor) {
                output.WriteRawTag(170, 1);
                output.WriteMessage(CaptureStatusColor);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideCount) {
                output.WriteRawTag(178, 1);
                output.WriteMessage(SlideCount);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AudioCountdown) {
                output.WriteRawTag(186, 1);
                output.WriteMessage(AudioCountdown);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.Presentation) {
                output.WriteRawTag(194, 1);
                output.WriteMessage(Presentation);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelText) {
                output.WriteRawTag(202, 1);
                output.WriteMessage(SlideLabelText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelColor) {
                output.WriteRawTag(210, 1);
                output.WriteMessage(SlideLabelColor);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.RssFeed) {
                output.WriteRawTag(218, 1);
                output.WriteMessage(RssFeed);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.FileFeed) {
                output.WriteRawTag(226, 1);
                output.WriteMessage(FileFeed);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.ChordProChart) {
                output.WriteRawTag(234, 1);
                output.WriteMessage(ChordProChart);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (propertyTypeCase_ == PropertyTypeOneofCase.Ticker) {
                output.WriteRawTag(10);
                output.WriteMessage(Ticker);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateText) {
                output.WriteRawTag(18);
                output.WriteMessage(AlternateText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.TimerText) {
                output.WriteRawTag(26);
                output.WriteMessage(TimerText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.ClockText) {
                output.WriteRawTag(34);
                output.WriteMessage(ClockText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.ChordChart) {
                output.WriteRawTag(42);
                output.WriteMessage(ChordChart);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.OutputScreen) {
                output.WriteRawTag(50);
                output.WriteMessage(OutputScreen);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.PcoLive) {
                output.WriteRawTag(58);
                output.WriteMessage(PcoLive);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateFill) {
                output.WriteRawTag(66);
                output.WriteMessage(AlternateFill);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.VisibilityLink) {
                output.WriteRawTag(74);
                output.WriteMessage(VisibilityLink);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideText) {
                output.WriteRawTag(82);
                output.WriteMessage(SlideText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.StageMessage) {
                output.WriteRawTag(90);
                output.WriteMessage(StageMessage);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.VideoCountdown) {
                output.WriteRawTag(98);
                output.WriteMessage(VideoCountdown);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideImage) {
                output.WriteRawTag(106);
                output.WriteMessage(SlideImage);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.CcliText) {
                output.WriteRawTag(114);
                output.WriteMessage(CcliText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.GroupName) {
                output.WriteRawTag(122);
                output.WriteMessage(GroupName);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.GroupColor) {
                output.WriteRawTag(130, 1);
                output.WriteMessage(GroupColor);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.PresentationNotes) {
                output.WriteRawTag(138, 1);
                output.WriteMessage(PresentationNotes);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.PlaylistItem) {
                output.WriteRawTag(146, 1);
                output.WriteMessage(PlaylistItem);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AutoAdvanceTimeRemaining) {
                output.WriteRawTag(154, 1);
                output.WriteMessage(AutoAdvanceTimeRemaining);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusText) {
                output.WriteRawTag(162, 1);
                output.WriteMessage(CaptureStatusText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusColor) {
                output.WriteRawTag(170, 1);
                output.WriteMessage(CaptureStatusColor);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideCount) {
                output.WriteRawTag(178, 1);
                output.WriteMessage(SlideCount);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AudioCountdown) {
                output.WriteRawTag(186, 1);
                output.WriteMessage(AudioCountdown);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.Presentation) {
                output.WriteRawTag(194, 1);
                output.WriteMessage(Presentation);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelText) {
                output.WriteRawTag(202, 1);
                output.WriteMessage(SlideLabelText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelColor) {
                output.WriteRawTag(210, 1);
                output.WriteMessage(SlideLabelColor);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.RssFeed) {
                output.WriteRawTag(218, 1);
                output.WriteMessage(RssFeed);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.FileFeed) {
                output.WriteRawTag(226, 1);
                output.WriteMessage(FileFeed);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.ChordProChart) {
                output.WriteRawTag(234, 1);
                output.WriteMessage(ChordProChart);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (propertyTypeCase_ == PropertyTypeOneofCase.Ticker) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticker);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateText) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlternateText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.TimerText) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimerText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.ClockText) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClockText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.ChordChart) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChordChart);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.OutputScreen) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputScreen);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.PcoLive) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(PcoLive);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateFill) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlternateFill);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.VisibilityLink) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(VisibilityLink);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideText) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SlideText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.StageMessage) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(StageMessage);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.VideoCountdown) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoCountdown);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideImage) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SlideImage);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.CcliText) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CcliText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.GroupName) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupName);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.GroupColor) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(GroupColor);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.PresentationNotes) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(PresentationNotes);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.PlaylistItem) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlaylistItem);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AutoAdvanceTimeRemaining) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(AutoAdvanceTimeRemaining);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusText) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureStatusText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusColor) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(CaptureStatusColor);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideCount) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(SlideCount);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.AudioCountdown) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(AudioCountdown);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.Presentation) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(Presentation);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelText) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(SlideLabelText);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelColor) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(SlideLabelColor);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.RssFeed) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(RssFeed);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.FileFeed) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(FileFeed);
              }
              if (propertyTypeCase_ == PropertyTypeOneofCase.ChordProChart) {
                size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChordProChart);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(DataLink other) {
              if (other == null) {
                return;
              }
              switch (other.PropertyTypeCase) {
                case PropertyTypeOneofCase.Ticker:
                  if (Ticker == null) {
                    Ticker = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker();
                  }
                  Ticker.MergeFrom(other.Ticker);
                  break;
                case PropertyTypeOneofCase.AlternateText:
                  if (AlternateText == null) {
                    AlternateText = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText();
                  }
                  AlternateText.MergeFrom(other.AlternateText);
                  break;
                case PropertyTypeOneofCase.TimerText:
                  if (TimerText == null) {
                    TimerText = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.TimerText();
                  }
                  TimerText.MergeFrom(other.TimerText);
                  break;
                case PropertyTypeOneofCase.ClockText:
                  if (ClockText == null) {
                    ClockText = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ClockText();
                  }
                  ClockText.MergeFrom(other.ClockText);
                  break;
                case PropertyTypeOneofCase.ChordChart:
                  if (ChordChart == null) {
                    ChordChart = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordChart();
                  }
                  ChordChart.MergeFrom(other.ChordChart);
                  break;
                case PropertyTypeOneofCase.OutputScreen:
                  if (OutputScreen == null) {
                    OutputScreen = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.OutputScreen();
                  }
                  OutputScreen.MergeFrom(other.OutputScreen);
                  break;
                case PropertyTypeOneofCase.PcoLive:
                  if (PcoLive == null) {
                    PcoLive = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive();
                  }
                  PcoLive.MergeFrom(other.PcoLive);
                  break;
                case PropertyTypeOneofCase.AlternateFill:
                  if (AlternateFill == null) {
                    AlternateFill = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementFill();
                  }
                  AlternateFill.MergeFrom(other.AlternateFill);
                  break;
                case PropertyTypeOneofCase.VisibilityLink:
                  if (VisibilityLink == null) {
                    VisibilityLink = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink();
                  }
                  VisibilityLink.MergeFrom(other.VisibilityLink);
                  break;
                case PropertyTypeOneofCase.SlideText:
                  if (SlideText == null) {
                    SlideText = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText();
                  }
                  SlideText.MergeFrom(other.SlideText);
                  break;
                case PropertyTypeOneofCase.StageMessage:
                  if (StageMessage == null) {
                    StageMessage = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.StageMessage();
                  }
                  StageMessage.MergeFrom(other.StageMessage);
                  break;
                case PropertyTypeOneofCase.VideoCountdown:
                  if (VideoCountdown == null) {
                    VideoCountdown = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown();
                  }
                  VideoCountdown.MergeFrom(other.VideoCountdown);
                  break;
                case PropertyTypeOneofCase.SlideImage:
                  if (SlideImage == null) {
                    SlideImage = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage();
                  }
                  SlideImage.MergeFrom(other.SlideImage);
                  break;
                case PropertyTypeOneofCase.CcliText:
                  if (CcliText == null) {
                    CcliText = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CCLIText();
                  }
                  CcliText.MergeFrom(other.CcliText);
                  break;
                case PropertyTypeOneofCase.GroupName:
                  if (GroupName == null) {
                    GroupName = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName();
                  }
                  GroupName.MergeFrom(other.GroupName);
                  break;
                case PropertyTypeOneofCase.GroupColor:
                  if (GroupColor == null) {
                    GroupColor = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor();
                  }
                  GroupColor.MergeFrom(other.GroupColor);
                  break;
                case PropertyTypeOneofCase.PresentationNotes:
                  if (PresentationNotes == null) {
                    PresentationNotes = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PresentationNotes();
                  }
                  PresentationNotes.MergeFrom(other.PresentationNotes);
                  break;
                case PropertyTypeOneofCase.PlaylistItem:
                  if (PlaylistItem == null) {
                    PlaylistItem = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem();
                  }
                  PlaylistItem.MergeFrom(other.PlaylistItem);
                  break;
                case PropertyTypeOneofCase.AutoAdvanceTimeRemaining:
                  if (AutoAdvanceTimeRemaining == null) {
                    AutoAdvanceTimeRemaining = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining();
                  }
                  AutoAdvanceTimeRemaining.MergeFrom(other.AutoAdvanceTimeRemaining);
                  break;
                case PropertyTypeOneofCase.CaptureStatusText:
                  if (CaptureStatusText == null) {
                    CaptureStatusText = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText();
                  }
                  CaptureStatusText.MergeFrom(other.CaptureStatusText);
                  break;
                case PropertyTypeOneofCase.CaptureStatusColor:
                  if (CaptureStatusColor == null) {
                    CaptureStatusColor = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusColor();
                  }
                  CaptureStatusColor.MergeFrom(other.CaptureStatusColor);
                  break;
                case PropertyTypeOneofCase.SlideCount:
                  if (SlideCount == null) {
                    SlideCount = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount();
                  }
                  SlideCount.MergeFrom(other.SlideCount);
                  break;
                case PropertyTypeOneofCase.AudioCountdown:
                  if (AudioCountdown == null) {
                    AudioCountdown = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AudioCountdown();
                  }
                  AudioCountdown.MergeFrom(other.AudioCountdown);
                  break;
                case PropertyTypeOneofCase.Presentation:
                  if (Presentation == null) {
                    Presentation = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation();
                  }
                  Presentation.MergeFrom(other.Presentation);
                  break;
                case PropertyTypeOneofCase.SlideLabelText:
                  if (SlideLabelText == null) {
                    SlideLabelText = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText();
                  }
                  SlideLabelText.MergeFrom(other.SlideLabelText);
                  break;
                case PropertyTypeOneofCase.SlideLabelColor:
                  if (SlideLabelColor == null) {
                    SlideLabelColor = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor();
                  }
                  SlideLabelColor.MergeFrom(other.SlideLabelColor);
                  break;
                case PropertyTypeOneofCase.RssFeed:
                  if (RssFeed == null) {
                    RssFeed = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed();
                  }
                  RssFeed.MergeFrom(other.RssFeed);
                  break;
                case PropertyTypeOneofCase.FileFeed:
                  if (FileFeed == null) {
                    FileFeed = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.FileFeed();
                  }
                  FileFeed.MergeFrom(other.FileFeed);
                  break;
                case PropertyTypeOneofCase.ChordProChart:
                  if (ChordProChart == null) {
                    ChordProChart = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordProChart();
                  }
                  ChordProChart.MergeFrom(other.ChordProChart);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.Ticker) {
                      subBuilder.MergeFrom(Ticker);
                    }
                    input.ReadMessage(subBuilder);
                    Ticker = subBuilder;
                    break;
                  }
                  case 18: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateText) {
                      subBuilder.MergeFrom(AlternateText);
                    }
                    input.ReadMessage(subBuilder);
                    AlternateText = subBuilder;
                    break;
                  }
                  case 26: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.TimerText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.TimerText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.TimerText) {
                      subBuilder.MergeFrom(TimerText);
                    }
                    input.ReadMessage(subBuilder);
                    TimerText = subBuilder;
                    break;
                  }
                  case 34: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ClockText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ClockText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.ClockText) {
                      subBuilder.MergeFrom(ClockText);
                    }
                    input.ReadMessage(subBuilder);
                    ClockText = subBuilder;
                    break;
                  }
                  case 42: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordChart subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordChart();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.ChordChart) {
                      subBuilder.MergeFrom(ChordChart);
                    }
                    input.ReadMessage(subBuilder);
                    ChordChart = subBuilder;
                    break;
                  }
                  case 50: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.OutputScreen subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.OutputScreen();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.OutputScreen) {
                      subBuilder.MergeFrom(OutputScreen);
                    }
                    input.ReadMessage(subBuilder);
                    OutputScreen = subBuilder;
                    break;
                  }
                  case 58: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.PcoLive) {
                      subBuilder.MergeFrom(PcoLive);
                    }
                    input.ReadMessage(subBuilder);
                    PcoLive = subBuilder;
                    break;
                  }
                  case 66: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementFill subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementFill();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateFill) {
                      subBuilder.MergeFrom(AlternateFill);
                    }
                    input.ReadMessage(subBuilder);
                    AlternateFill = subBuilder;
                    break;
                  }
                  case 74: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.VisibilityLink) {
                      subBuilder.MergeFrom(VisibilityLink);
                    }
                    input.ReadMessage(subBuilder);
                    VisibilityLink = subBuilder;
                    break;
                  }
                  case 82: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideText) {
                      subBuilder.MergeFrom(SlideText);
                    }
                    input.ReadMessage(subBuilder);
                    SlideText = subBuilder;
                    break;
                  }
                  case 90: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.StageMessage subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.StageMessage();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.StageMessage) {
                      subBuilder.MergeFrom(StageMessage);
                    }
                    input.ReadMessage(subBuilder);
                    StageMessage = subBuilder;
                    break;
                  }
                  case 98: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.VideoCountdown) {
                      subBuilder.MergeFrom(VideoCountdown);
                    }
                    input.ReadMessage(subBuilder);
                    VideoCountdown = subBuilder;
                    break;
                  }
                  case 106: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideImage) {
                      subBuilder.MergeFrom(SlideImage);
                    }
                    input.ReadMessage(subBuilder);
                    SlideImage = subBuilder;
                    break;
                  }
                  case 114: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CCLIText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CCLIText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.CcliText) {
                      subBuilder.MergeFrom(CcliText);
                    }
                    input.ReadMessage(subBuilder);
                    CcliText = subBuilder;
                    break;
                  }
                  case 122: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.GroupName) {
                      subBuilder.MergeFrom(GroupName);
                    }
                    input.ReadMessage(subBuilder);
                    GroupName = subBuilder;
                    break;
                  }
                  case 130: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.GroupColor) {
                      subBuilder.MergeFrom(GroupColor);
                    }
                    input.ReadMessage(subBuilder);
                    GroupColor = subBuilder;
                    break;
                  }
                  case 138: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PresentationNotes subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PresentationNotes();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.PresentationNotes) {
                      subBuilder.MergeFrom(PresentationNotes);
                    }
                    input.ReadMessage(subBuilder);
                    PresentationNotes = subBuilder;
                    break;
                  }
                  case 146: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.PlaylistItem) {
                      subBuilder.MergeFrom(PlaylistItem);
                    }
                    input.ReadMessage(subBuilder);
                    PlaylistItem = subBuilder;
                    break;
                  }
                  case 154: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.AutoAdvanceTimeRemaining) {
                      subBuilder.MergeFrom(AutoAdvanceTimeRemaining);
                    }
                    input.ReadMessage(subBuilder);
                    AutoAdvanceTimeRemaining = subBuilder;
                    break;
                  }
                  case 162: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusText) {
                      subBuilder.MergeFrom(CaptureStatusText);
                    }
                    input.ReadMessage(subBuilder);
                    CaptureStatusText = subBuilder;
                    break;
                  }
                  case 170: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusColor subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusColor();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusColor) {
                      subBuilder.MergeFrom(CaptureStatusColor);
                    }
                    input.ReadMessage(subBuilder);
                    CaptureStatusColor = subBuilder;
                    break;
                  }
                  case 178: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideCount) {
                      subBuilder.MergeFrom(SlideCount);
                    }
                    input.ReadMessage(subBuilder);
                    SlideCount = subBuilder;
                    break;
                  }
                  case 186: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AudioCountdown subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AudioCountdown();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.AudioCountdown) {
                      subBuilder.MergeFrom(AudioCountdown);
                    }
                    input.ReadMessage(subBuilder);
                    AudioCountdown = subBuilder;
                    break;
                  }
                  case 194: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.Presentation) {
                      subBuilder.MergeFrom(Presentation);
                    }
                    input.ReadMessage(subBuilder);
                    Presentation = subBuilder;
                    break;
                  }
                  case 202: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelText) {
                      subBuilder.MergeFrom(SlideLabelText);
                    }
                    input.ReadMessage(subBuilder);
                    SlideLabelText = subBuilder;
                    break;
                  }
                  case 210: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelColor) {
                      subBuilder.MergeFrom(SlideLabelColor);
                    }
                    input.ReadMessage(subBuilder);
                    SlideLabelColor = subBuilder;
                    break;
                  }
                  case 218: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.RssFeed) {
                      subBuilder.MergeFrom(RssFeed);
                    }
                    input.ReadMessage(subBuilder);
                    RssFeed = subBuilder;
                    break;
                  }
                  case 226: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.FileFeed subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.FileFeed();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.FileFeed) {
                      subBuilder.MergeFrom(FileFeed);
                    }
                    input.ReadMessage(subBuilder);
                    FileFeed = subBuilder;
                    break;
                  }
                  case 234: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordProChart subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordProChart();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.ChordProChart) {
                      subBuilder.MergeFrom(ChordProChart);
                    }
                    input.ReadMessage(subBuilder);
                    ChordProChart = subBuilder;
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.Ticker) {
                      subBuilder.MergeFrom(Ticker);
                    }
                    input.ReadMessage(subBuilder);
                    Ticker = subBuilder;
                    break;
                  }
                  case 18: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateText) {
                      subBuilder.MergeFrom(AlternateText);
                    }
                    input.ReadMessage(subBuilder);
                    AlternateText = subBuilder;
                    break;
                  }
                  case 26: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.TimerText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.TimerText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.TimerText) {
                      subBuilder.MergeFrom(TimerText);
                    }
                    input.ReadMessage(subBuilder);
                    TimerText = subBuilder;
                    break;
                  }
                  case 34: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ClockText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ClockText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.ClockText) {
                      subBuilder.MergeFrom(ClockText);
                    }
                    input.ReadMessage(subBuilder);
                    ClockText = subBuilder;
                    break;
                  }
                  case 42: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordChart subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordChart();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.ChordChart) {
                      subBuilder.MergeFrom(ChordChart);
                    }
                    input.ReadMessage(subBuilder);
                    ChordChart = subBuilder;
                    break;
                  }
                  case 50: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.OutputScreen subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.OutputScreen();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.OutputScreen) {
                      subBuilder.MergeFrom(OutputScreen);
                    }
                    input.ReadMessage(subBuilder);
                    OutputScreen = subBuilder;
                    break;
                  }
                  case 58: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.PcoLive) {
                      subBuilder.MergeFrom(PcoLive);
                    }
                    input.ReadMessage(subBuilder);
                    PcoLive = subBuilder;
                    break;
                  }
                  case 66: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementFill subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementFill();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.AlternateFill) {
                      subBuilder.MergeFrom(AlternateFill);
                    }
                    input.ReadMessage(subBuilder);
                    AlternateFill = subBuilder;
                    break;
                  }
                  case 74: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.VisibilityLink) {
                      subBuilder.MergeFrom(VisibilityLink);
                    }
                    input.ReadMessage(subBuilder);
                    VisibilityLink = subBuilder;
                    break;
                  }
                  case 82: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideText) {
                      subBuilder.MergeFrom(SlideText);
                    }
                    input.ReadMessage(subBuilder);
                    SlideText = subBuilder;
                    break;
                  }
                  case 90: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.StageMessage subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.StageMessage();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.StageMessage) {
                      subBuilder.MergeFrom(StageMessage);
                    }
                    input.ReadMessage(subBuilder);
                    StageMessage = subBuilder;
                    break;
                  }
                  case 98: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.VideoCountdown) {
                      subBuilder.MergeFrom(VideoCountdown);
                    }
                    input.ReadMessage(subBuilder);
                    VideoCountdown = subBuilder;
                    break;
                  }
                  case 106: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideImage) {
                      subBuilder.MergeFrom(SlideImage);
                    }
                    input.ReadMessage(subBuilder);
                    SlideImage = subBuilder;
                    break;
                  }
                  case 114: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CCLIText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CCLIText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.CcliText) {
                      subBuilder.MergeFrom(CcliText);
                    }
                    input.ReadMessage(subBuilder);
                    CcliText = subBuilder;
                    break;
                  }
                  case 122: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.GroupName) {
                      subBuilder.MergeFrom(GroupName);
                    }
                    input.ReadMessage(subBuilder);
                    GroupName = subBuilder;
                    break;
                  }
                  case 130: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.GroupColor) {
                      subBuilder.MergeFrom(GroupColor);
                    }
                    input.ReadMessage(subBuilder);
                    GroupColor = subBuilder;
                    break;
                  }
                  case 138: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PresentationNotes subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PresentationNotes();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.PresentationNotes) {
                      subBuilder.MergeFrom(PresentationNotes);
                    }
                    input.ReadMessage(subBuilder);
                    PresentationNotes = subBuilder;
                    break;
                  }
                  case 146: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.PlaylistItem) {
                      subBuilder.MergeFrom(PlaylistItem);
                    }
                    input.ReadMessage(subBuilder);
                    PlaylistItem = subBuilder;
                    break;
                  }
                  case 154: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.AutoAdvanceTimeRemaining) {
                      subBuilder.MergeFrom(AutoAdvanceTimeRemaining);
                    }
                    input.ReadMessage(subBuilder);
                    AutoAdvanceTimeRemaining = subBuilder;
                    break;
                  }
                  case 162: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusText) {
                      subBuilder.MergeFrom(CaptureStatusText);
                    }
                    input.ReadMessage(subBuilder);
                    CaptureStatusText = subBuilder;
                    break;
                  }
                  case 170: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusColor subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusColor();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.CaptureStatusColor) {
                      subBuilder.MergeFrom(CaptureStatusColor);
                    }
                    input.ReadMessage(subBuilder);
                    CaptureStatusColor = subBuilder;
                    break;
                  }
                  case 178: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideCount) {
                      subBuilder.MergeFrom(SlideCount);
                    }
                    input.ReadMessage(subBuilder);
                    SlideCount = subBuilder;
                    break;
                  }
                  case 186: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AudioCountdown subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AudioCountdown();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.AudioCountdown) {
                      subBuilder.MergeFrom(AudioCountdown);
                    }
                    input.ReadMessage(subBuilder);
                    AudioCountdown = subBuilder;
                    break;
                  }
                  case 194: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.Presentation) {
                      subBuilder.MergeFrom(Presentation);
                    }
                    input.ReadMessage(subBuilder);
                    Presentation = subBuilder;
                    break;
                  }
                  case 202: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelText) {
                      subBuilder.MergeFrom(SlideLabelText);
                    }
                    input.ReadMessage(subBuilder);
                    SlideLabelText = subBuilder;
                    break;
                  }
                  case 210: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.SlideLabelColor) {
                      subBuilder.MergeFrom(SlideLabelColor);
                    }
                    input.ReadMessage(subBuilder);
                    SlideLabelColor = subBuilder;
                    break;
                  }
                  case 218: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.RssFeed) {
                      subBuilder.MergeFrom(RssFeed);
                    }
                    input.ReadMessage(subBuilder);
                    RssFeed = subBuilder;
                    break;
                  }
                  case 226: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.FileFeed subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.FileFeed();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.FileFeed) {
                      subBuilder.MergeFrom(FileFeed);
                    }
                    input.ReadMessage(subBuilder);
                    FileFeed = subBuilder;
                    break;
                  }
                  case 234: {
                    global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordProChart subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ChordProChart();
                    if (propertyTypeCase_ == PropertyTypeOneofCase.ChordProChart) {
                      subBuilder.MergeFrom(ChordProChart);
                    }
                    input.ReadMessage(subBuilder);
                    ChordProChart = subBuilder;
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the DataLink message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              public sealed partial class RSSFeed : pb::IMessage<RSSFeed>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<RSSFeed> _parser = new pb::MessageParser<RSSFeed>(() => new RSSFeed());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<RSSFeed> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public RSSFeed() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public RSSFeed(RSSFeed other) : this() {
                  url_ = other.url_ != null ? other.url_.Clone() : null;
                  content_ = other.content_;
                  textDelimiter_ = other.textDelimiter_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public RSSFeed Clone() {
                  return new RSSFeed(this);
                }

                /// <summary>Field number for the "url" field.</summary>
                public const int UrlFieldNumber = 1;
                private global::Rv.Data.URL url_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.URL Url {
                  get { return url_; }
                  set {
                    url_ = value;
                  }
                }

                /// <summary>Field number for the "content" field.</summary>
                public const int ContentFieldNumber = 2;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType content_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType.TitleOnly;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType Content {
                  get { return content_; }
                  set {
                    content_ = value;
                  }
                }

                /// <summary>Field number for the "text_delimiter" field.</summary>
                public const int TextDelimiterFieldNumber = 3;
                private string textDelimiter_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string TextDelimiter {
                  get { return textDelimiter_; }
                  set {
                    textDelimiter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as RSSFeed);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(RSSFeed other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(Url, other.Url)) return false;
                  if (Content != other.Content) return false;
                  if (TextDelimiter != other.TextDelimiter) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (url_ != null) hash ^= Url.GetHashCode();
                  if (Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType.TitleOnly) hash ^= Content.GetHashCode();
                  if (TextDelimiter.Length != 0) hash ^= TextDelimiter.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (url_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Url);
                  }
                  if (Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType.TitleOnly) {
                    output.WriteRawTag(16);
                    output.WriteEnum((int) Content);
                  }
                  if (TextDelimiter.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(TextDelimiter);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (url_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Url);
                  }
                  if (Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType.TitleOnly) {
                    output.WriteRawTag(16);
                    output.WriteEnum((int) Content);
                  }
                  if (TextDelimiter.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(TextDelimiter);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (url_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Url);
                  }
                  if (Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType.TitleOnly) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Content);
                  }
                  if (TextDelimiter.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TextDelimiter);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(RSSFeed other) {
                  if (other == null) {
                    return;
                  }
                  if (other.url_ != null) {
                    if (url_ == null) {
                      Url = new global::Rv.Data.URL();
                    }
                    Url.MergeFrom(other.Url);
                  }
                  if (other.Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType.TitleOnly) {
                    Content = other.Content;
                  }
                  if (other.TextDelimiter.Length != 0) {
                    TextDelimiter = other.TextDelimiter;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (url_ == null) {
                          Url = new global::Rv.Data.URL();
                        }
                        input.ReadMessage(Url);
                        break;
                      }
                      case 16: {
                        Content = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType) input.ReadEnum();
                        break;
                      }
                      case 26: {
                        TextDelimiter = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (url_ == null) {
                          Url = new global::Rv.Data.URL();
                        }
                        input.ReadMessage(Url);
                        break;
                      }
                      case 16: {
                        Content = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.RSSFeed.Types.ContentType) input.ReadEnum();
                        break;
                      }
                      case 26: {
                        TextDelimiter = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the RSSFeed message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum ContentType {
                    [pbr::OriginalName("CONTENT_TYPE_TITLE_ONLY")] TitleOnly = 0,
                    [pbr::OriginalName("CONTENT_TYPE_TITLE_AND_DESCRIPTION")] TitleAndDescription = 1,
                  }

                }
                #endregion

              }

              public sealed partial class FileFeed : pb::IMessage<FileFeed>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<FileFeed> _parser = new pb::MessageParser<FileFeed>(() => new FileFeed());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<FileFeed> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public FileFeed() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public FileFeed(FileFeed other) : this() {
                  url_ = other.url_ != null ? other.url_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public FileFeed Clone() {
                  return new FileFeed(this);
                }

                /// <summary>Field number for the "url" field.</summary>
                public const int UrlFieldNumber = 1;
                private global::Rv.Data.URL url_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.URL Url {
                  get { return url_; }
                  set {
                    url_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as FileFeed);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(FileFeed other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(Url, other.Url)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (url_ != null) hash ^= Url.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (url_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Url);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (url_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(Url);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (url_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Url);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(FileFeed other) {
                  if (other == null) {
                    return;
                  }
                  if (other.url_ != null) {
                    if (url_ == null) {
                      Url = new global::Rv.Data.URL();
                    }
                    Url.MergeFrom(other.Url);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (url_ == null) {
                          Url = new global::Rv.Data.URL();
                        }
                        input.ReadMessage(Url);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (url_ == null) {
                          Url = new global::Rv.Data.URL();
                        }
                        input.ReadMessage(Url);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class Ticker : pb::IMessage<Ticker>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<Ticker> _parser = new pb::MessageParser<Ticker>(() => new Ticker());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<Ticker> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Ticker() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Ticker(Ticker other) : this() {
                  playRate_ = other.playRate_;
                  shouldLoop_ = other.shouldLoop_;
                  loopDelay_ = other.loopDelay_;
                  textDelimiter_ = other.textDelimiter_;
                  switch (other.SourceTypeCase) {
                    case SourceTypeOneofCase.TextType:
                      TextType = other.TextType.Clone();
                      break;
                    case SourceTypeOneofCase.RssType:
                      RssType = other.RssType.Clone();
                      break;
                    case SourceTypeOneofCase.FileType:
                      FileType = other.FileType.Clone();
                      break;
                  }

                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Ticker Clone() {
                  return new Ticker(this);
                }

                /// <summary>Field number for the "play_rate" field.</summary>
                public const int PlayRateFieldNumber = 4;
                private double playRate_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public double PlayRate {
                  get { return playRate_; }
                  set {
                    playRate_ = value;
                  }
                }

                /// <summary>Field number for the "should_loop" field.</summary>
                public const int ShouldLoopFieldNumber = 5;
                private bool shouldLoop_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool ShouldLoop {
                  get { return shouldLoop_; }
                  set {
                    shouldLoop_ = value;
                  }
                }

                /// <summary>Field number for the "loop_delay" field.</summary>
                public const int LoopDelayFieldNumber = 6;
                private double loopDelay_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public double LoopDelay {
                  get { return loopDelay_; }
                  set {
                    loopDelay_ = value;
                  }
                }

                /// <summary>Field number for the "text_delimiter" field.</summary>
                public const int TextDelimiterFieldNumber = 7;
                private string textDelimiter_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string TextDelimiter {
                  get { return textDelimiter_; }
                  set {
                    textDelimiter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "text_type" field.</summary>
                public const int TextTypeFieldNumber = 1;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.TextType TextType {
                  get { return sourceTypeCase_ == SourceTypeOneofCase.TextType ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.TextType) sourceType_ : null; }
                  set {
                    sourceType_ = value;
                    sourceTypeCase_ = value == null ? SourceTypeOneofCase.None : SourceTypeOneofCase.TextType;
                  }
                }

                /// <summary>Field number for the "rss_type" field.</summary>
                public const int RssTypeFieldNumber = 2;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType RssType {
                  get { return sourceTypeCase_ == SourceTypeOneofCase.RssType ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType) sourceType_ : null; }
                  set {
                    sourceType_ = value;
                    sourceTypeCase_ = value == null ? SourceTypeOneofCase.None : SourceTypeOneofCase.RssType;
                  }
                }

                /// <summary>Field number for the "file_type" field.</summary>
                public const int FileTypeFieldNumber = 3;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.FileType FileType {
                  get { return sourceTypeCase_ == SourceTypeOneofCase.FileType ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.FileType) sourceType_ : null; }
                  set {
                    sourceType_ = value;
                    sourceTypeCase_ = value == null ? SourceTypeOneofCase.None : SourceTypeOneofCase.FileType;
                  }
                }

                private object sourceType_;
                /// <summary>Enum of possible cases for the "SourceType" oneof.</summary>
                public enum SourceTypeOneofCase {
                  None = 0,
                  TextType = 1,
                  RssType = 2,
                  FileType = 3,
                }
                private SourceTypeOneofCase sourceTypeCase_ = SourceTypeOneofCase.None;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SourceTypeOneofCase SourceTypeCase {
                  get { return sourceTypeCase_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void ClearSourceType() {
                  sourceTypeCase_ = SourceTypeOneofCase.None;
                  sourceType_ = null;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as Ticker);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(Ticker other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PlayRate, other.PlayRate)) return false;
                  if (ShouldLoop != other.ShouldLoop) return false;
                  if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LoopDelay, other.LoopDelay)) return false;
                  if (TextDelimiter != other.TextDelimiter) return false;
                  if (!object.Equals(TextType, other.TextType)) return false;
                  if (!object.Equals(RssType, other.RssType)) return false;
                  if (!object.Equals(FileType, other.FileType)) return false;
                  if (SourceTypeCase != other.SourceTypeCase) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (PlayRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PlayRate);
                  if (ShouldLoop != false) hash ^= ShouldLoop.GetHashCode();
                  if (LoopDelay != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LoopDelay);
                  if (TextDelimiter.Length != 0) hash ^= TextDelimiter.GetHashCode();
                  if (sourceTypeCase_ == SourceTypeOneofCase.TextType) hash ^= TextType.GetHashCode();
                  if (sourceTypeCase_ == SourceTypeOneofCase.RssType) hash ^= RssType.GetHashCode();
                  if (sourceTypeCase_ == SourceTypeOneofCase.FileType) hash ^= FileType.GetHashCode();
                  hash ^= (int) sourceTypeCase_;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (sourceTypeCase_ == SourceTypeOneofCase.TextType) {
                    output.WriteRawTag(10);
                    output.WriteMessage(TextType);
                  }
                  if (sourceTypeCase_ == SourceTypeOneofCase.RssType) {
                    output.WriteRawTag(18);
                    output.WriteMessage(RssType);
                  }
                  if (sourceTypeCase_ == SourceTypeOneofCase.FileType) {
                    output.WriteRawTag(26);
                    output.WriteMessage(FileType);
                  }
                  if (PlayRate != 0D) {
                    output.WriteRawTag(33);
                    output.WriteDouble(PlayRate);
                  }
                  if (ShouldLoop != false) {
                    output.WriteRawTag(40);
                    output.WriteBool(ShouldLoop);
                  }
                  if (LoopDelay != 0D) {
                    output.WriteRawTag(49);
                    output.WriteDouble(LoopDelay);
                  }
                  if (TextDelimiter.Length != 0) {
                    output.WriteRawTag(58);
                    output.WriteString(TextDelimiter);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (sourceTypeCase_ == SourceTypeOneofCase.TextType) {
                    output.WriteRawTag(10);
                    output.WriteMessage(TextType);
                  }
                  if (sourceTypeCase_ == SourceTypeOneofCase.RssType) {
                    output.WriteRawTag(18);
                    output.WriteMessage(RssType);
                  }
                  if (sourceTypeCase_ == SourceTypeOneofCase.FileType) {
                    output.WriteRawTag(26);
                    output.WriteMessage(FileType);
                  }
                  if (PlayRate != 0D) {
                    output.WriteRawTag(33);
                    output.WriteDouble(PlayRate);
                  }
                  if (ShouldLoop != false) {
                    output.WriteRawTag(40);
                    output.WriteBool(ShouldLoop);
                  }
                  if (LoopDelay != 0D) {
                    output.WriteRawTag(49);
                    output.WriteDouble(LoopDelay);
                  }
                  if (TextDelimiter.Length != 0) {
                    output.WriteRawTag(58);
                    output.WriteString(TextDelimiter);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (PlayRate != 0D) {
                    size += 1 + 8;
                  }
                  if (ShouldLoop != false) {
                    size += 1 + 1;
                  }
                  if (LoopDelay != 0D) {
                    size += 1 + 8;
                  }
                  if (TextDelimiter.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TextDelimiter);
                  }
                  if (sourceTypeCase_ == SourceTypeOneofCase.TextType) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextType);
                  }
                  if (sourceTypeCase_ == SourceTypeOneofCase.RssType) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(RssType);
                  }
                  if (sourceTypeCase_ == SourceTypeOneofCase.FileType) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(FileType);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(Ticker other) {
                  if (other == null) {
                    return;
                  }
                  if (other.PlayRate != 0D) {
                    PlayRate = other.PlayRate;
                  }
                  if (other.ShouldLoop != false) {
                    ShouldLoop = other.ShouldLoop;
                  }
                  if (other.LoopDelay != 0D) {
                    LoopDelay = other.LoopDelay;
                  }
                  if (other.TextDelimiter.Length != 0) {
                    TextDelimiter = other.TextDelimiter;
                  }
                  switch (other.SourceTypeCase) {
                    case SourceTypeOneofCase.TextType:
                      if (TextType == null) {
                        TextType = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.TextType();
                      }
                      TextType.MergeFrom(other.TextType);
                      break;
                    case SourceTypeOneofCase.RssType:
                      if (RssType == null) {
                        RssType = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType();
                      }
                      RssType.MergeFrom(other.RssType);
                      break;
                    case SourceTypeOneofCase.FileType:
                      if (FileType == null) {
                        FileType = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.FileType();
                      }
                      FileType.MergeFrom(other.FileType);
                      break;
                  }

                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.TextType subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.TextType();
                        if (sourceTypeCase_ == SourceTypeOneofCase.TextType) {
                          subBuilder.MergeFrom(TextType);
                        }
                        input.ReadMessage(subBuilder);
                        TextType = subBuilder;
                        break;
                      }
                      case 18: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType();
                        if (sourceTypeCase_ == SourceTypeOneofCase.RssType) {
                          subBuilder.MergeFrom(RssType);
                        }
                        input.ReadMessage(subBuilder);
                        RssType = subBuilder;
                        break;
                      }
                      case 26: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.FileType subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.FileType();
                        if (sourceTypeCase_ == SourceTypeOneofCase.FileType) {
                          subBuilder.MergeFrom(FileType);
                        }
                        input.ReadMessage(subBuilder);
                        FileType = subBuilder;
                        break;
                      }
                      case 33: {
                        PlayRate = input.ReadDouble();
                        break;
                      }
                      case 40: {
                        ShouldLoop = input.ReadBool();
                        break;
                      }
                      case 49: {
                        LoopDelay = input.ReadDouble();
                        break;
                      }
                      case 58: {
                        TextDelimiter = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.TextType subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.TextType();
                        if (sourceTypeCase_ == SourceTypeOneofCase.TextType) {
                          subBuilder.MergeFrom(TextType);
                        }
                        input.ReadMessage(subBuilder);
                        TextType = subBuilder;
                        break;
                      }
                      case 18: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType();
                        if (sourceTypeCase_ == SourceTypeOneofCase.RssType) {
                          subBuilder.MergeFrom(RssType);
                        }
                        input.ReadMessage(subBuilder);
                        RssType = subBuilder;
                        break;
                      }
                      case 26: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.FileType subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.FileType();
                        if (sourceTypeCase_ == SourceTypeOneofCase.FileType) {
                          subBuilder.MergeFrom(FileType);
                        }
                        input.ReadMessage(subBuilder);
                        FileType = subBuilder;
                        break;
                      }
                      case 33: {
                        PlayRate = input.ReadDouble();
                        break;
                      }
                      case 40: {
                        ShouldLoop = input.ReadBool();
                        break;
                      }
                      case 49: {
                        LoopDelay = input.ReadDouble();
                        break;
                      }
                      case 58: {
                        TextDelimiter = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the Ticker message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public sealed partial class TextType : pb::IMessage<TextType>
                  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      , pb::IBufferMessage
                  #endif
                  {
                    private static readonly pb::MessageParser<TextType> _parser = new pb::MessageParser<TextType>(() => new TextType());
                    private pb::UnknownFieldSet _unknownFields;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pb::MessageParser<TextType> Parser { get { return _parser; } }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pbr::MessageDescriptor Descriptor {
                      get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Descriptor.NestedTypes[0]; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    pbr::MessageDescriptor pb::IMessage.Descriptor {
                      get { return Descriptor; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public TextType() {
                      OnConstruction();
                    }

                    partial void OnConstruction();

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public TextType(TextType other) : this() {
                      text_ = other.text_;
                      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public TextType Clone() {
                      return new TextType(this);
                    }

                    /// <summary>Field number for the "text" field.</summary>
                    public const int TextFieldNumber = 1;
                    private string text_ = "";
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public string Text {
                      get { return text_; }
                      set {
                        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                      }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override bool Equals(object other) {
                      return Equals(other as TextType);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public bool Equals(TextType other) {
                      if (ReferenceEquals(other, null)) {
                        return false;
                      }
                      if (ReferenceEquals(other, this)) {
                        return true;
                      }
                      if (Text != other.Text) return false;
                      return Equals(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override int GetHashCode() {
                      int hash = 1;
                      if (Text.Length != 0) hash ^= Text.GetHashCode();
                      if (_unknownFields != null) {
                        hash ^= _unknownFields.GetHashCode();
                      }
                      return hash;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override string ToString() {
                      return pb::JsonFormatter.ToDiagnosticString(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void WriteTo(pb::CodedOutputStream output) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      output.WriteRawMessage(this);
                    #else
                      if (Text.Length != 0) {
                        output.WriteRawTag(10);
                        output.WriteString(Text);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(output);
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                      if (Text.Length != 0) {
                        output.WriteRawTag(10);
                        output.WriteString(Text);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(ref output);
                      }
                    }
                    #endif

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public int CalculateSize() {
                      int size = 0;
                      if (Text.Length != 0) {
                        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
                      }
                      if (_unknownFields != null) {
                        size += _unknownFields.CalculateSize();
                      }
                      return size;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(TextType other) {
                      if (other == null) {
                        return;
                      }
                      if (other.Text.Length != 0) {
                        Text = other.Text;
                      }
                      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(pb::CodedInputStream input) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      input.ReadRawMessage(this);
                    #else
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                            break;
                          case 10: {
                            Text = input.ReadString();
                            break;
                          }
                        }
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                            break;
                          case 10: {
                            Text = input.ReadString();
                            break;
                          }
                        }
                      }
                    }
                    #endif

                  }

                  public sealed partial class RSSType : pb::IMessage<RSSType>
                  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      , pb::IBufferMessage
                  #endif
                  {
                    private static readonly pb::MessageParser<RSSType> _parser = new pb::MessageParser<RSSType>(() => new RSSType());
                    private pb::UnknownFieldSet _unknownFields;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pb::MessageParser<RSSType> Parser { get { return _parser; } }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pbr::MessageDescriptor Descriptor {
                      get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Descriptor.NestedTypes[1]; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    pbr::MessageDescriptor pb::IMessage.Descriptor {
                      get { return Descriptor; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public RSSType() {
                      OnConstruction();
                    }

                    partial void OnConstruction();

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public RSSType(RSSType other) : this() {
                      url_ = other.url_ != null ? other.url_.Clone() : null;
                      content_ = other.content_;
                      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public RSSType Clone() {
                      return new RSSType(this);
                    }

                    /// <summary>Field number for the "url" field.</summary>
                    public const int UrlFieldNumber = 1;
                    private global::Rv.Data.URL url_;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.URL Url {
                      get { return url_; }
                      set {
                        url_ = value;
                      }
                    }

                    /// <summary>Field number for the "content" field.</summary>
                    public const int ContentFieldNumber = 2;
                    private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType content_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType.TitleOnly;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType Content {
                      get { return content_; }
                      set {
                        content_ = value;
                      }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override bool Equals(object other) {
                      return Equals(other as RSSType);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public bool Equals(RSSType other) {
                      if (ReferenceEquals(other, null)) {
                        return false;
                      }
                      if (ReferenceEquals(other, this)) {
                        return true;
                      }
                      if (!object.Equals(Url, other.Url)) return false;
                      if (Content != other.Content) return false;
                      return Equals(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override int GetHashCode() {
                      int hash = 1;
                      if (url_ != null) hash ^= Url.GetHashCode();
                      if (Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType.TitleOnly) hash ^= Content.GetHashCode();
                      if (_unknownFields != null) {
                        hash ^= _unknownFields.GetHashCode();
                      }
                      return hash;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override string ToString() {
                      return pb::JsonFormatter.ToDiagnosticString(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void WriteTo(pb::CodedOutputStream output) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      output.WriteRawMessage(this);
                    #else
                      if (url_ != null) {
                        output.WriteRawTag(10);
                        output.WriteMessage(Url);
                      }
                      if (Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType.TitleOnly) {
                        output.WriteRawTag(16);
                        output.WriteEnum((int) Content);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(output);
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                      if (url_ != null) {
                        output.WriteRawTag(10);
                        output.WriteMessage(Url);
                      }
                      if (Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType.TitleOnly) {
                        output.WriteRawTag(16);
                        output.WriteEnum((int) Content);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(ref output);
                      }
                    }
                    #endif

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public int CalculateSize() {
                      int size = 0;
                      if (url_ != null) {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Url);
                      }
                      if (Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType.TitleOnly) {
                        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Content);
                      }
                      if (_unknownFields != null) {
                        size += _unknownFields.CalculateSize();
                      }
                      return size;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(RSSType other) {
                      if (other == null) {
                        return;
                      }
                      if (other.url_ != null) {
                        if (url_ == null) {
                          Url = new global::Rv.Data.URL();
                        }
                        Url.MergeFrom(other.Url);
                      }
                      if (other.Content != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType.TitleOnly) {
                        Content = other.Content;
                      }
                      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(pb::CodedInputStream input) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      input.ReadRawMessage(this);
                    #else
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                            break;
                          case 10: {
                            if (url_ == null) {
                              Url = new global::Rv.Data.URL();
                            }
                            input.ReadMessage(Url);
                            break;
                          }
                          case 16: {
                            Content = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType) input.ReadEnum();
                            break;
                          }
                        }
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                            break;
                          case 10: {
                            if (url_ == null) {
                              Url = new global::Rv.Data.URL();
                            }
                            input.ReadMessage(Url);
                            break;
                          }
                          case 16: {
                            Content = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Types.RSSType.Types.ContentType) input.ReadEnum();
                            break;
                          }
                        }
                      }
                    }
                    #endif

                    #region Nested types
                    /// <summary>Container for nested types declared in the RSSType message type.</summary>
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static partial class Types {
                      public enum ContentType {
                        [pbr::OriginalName("CONTENT_TYPE_TITLE_ONLY")] TitleOnly = 0,
                        [pbr::OriginalName("CONTENT_TYPE_TITLE_AND_DESCRIPTION")] TitleAndDescription = 1,
                      }

                    }
                    #endregion

                  }

                  public sealed partial class FileType : pb::IMessage<FileType>
                  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      , pb::IBufferMessage
                  #endif
                  {
                    private static readonly pb::MessageParser<FileType> _parser = new pb::MessageParser<FileType>(() => new FileType());
                    private pb::UnknownFieldSet _unknownFields;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pb::MessageParser<FileType> Parser { get { return _parser; } }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pbr::MessageDescriptor Descriptor {
                      get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Ticker.Descriptor.NestedTypes[2]; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    pbr::MessageDescriptor pb::IMessage.Descriptor {
                      get { return Descriptor; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public FileType() {
                      OnConstruction();
                    }

                    partial void OnConstruction();

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public FileType(FileType other) : this() {
                      url_ = other.url_ != null ? other.url_.Clone() : null;
                      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public FileType Clone() {
                      return new FileType(this);
                    }

                    /// <summary>Field number for the "url" field.</summary>
                    public const int UrlFieldNumber = 1;
                    private global::Rv.Data.URL url_;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.URL Url {
                      get { return url_; }
                      set {
                        url_ = value;
                      }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override bool Equals(object other) {
                      return Equals(other as FileType);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public bool Equals(FileType other) {
                      if (ReferenceEquals(other, null)) {
                        return false;
                      }
                      if (ReferenceEquals(other, this)) {
                        return true;
                      }
                      if (!object.Equals(Url, other.Url)) return false;
                      return Equals(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override int GetHashCode() {
                      int hash = 1;
                      if (url_ != null) hash ^= Url.GetHashCode();
                      if (_unknownFields != null) {
                        hash ^= _unknownFields.GetHashCode();
                      }
                      return hash;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override string ToString() {
                      return pb::JsonFormatter.ToDiagnosticString(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void WriteTo(pb::CodedOutputStream output) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      output.WriteRawMessage(this);
                    #else
                      if (url_ != null) {
                        output.WriteRawTag(10);
                        output.WriteMessage(Url);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(output);
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                      if (url_ != null) {
                        output.WriteRawTag(10);
                        output.WriteMessage(Url);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(ref output);
                      }
                    }
                    #endif

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public int CalculateSize() {
                      int size = 0;
                      if (url_ != null) {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Url);
                      }
                      if (_unknownFields != null) {
                        size += _unknownFields.CalculateSize();
                      }
                      return size;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(FileType other) {
                      if (other == null) {
                        return;
                      }
                      if (other.url_ != null) {
                        if (url_ == null) {
                          Url = new global::Rv.Data.URL();
                        }
                        Url.MergeFrom(other.Url);
                      }
                      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(pb::CodedInputStream input) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      input.ReadRawMessage(this);
                    #else
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                            break;
                          case 10: {
                            if (url_ == null) {
                              Url = new global::Rv.Data.URL();
                            }
                            input.ReadMessage(Url);
                            break;
                          }
                        }
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                            break;
                          case 10: {
                            if (url_ == null) {
                              Url = new global::Rv.Data.URL();
                            }
                            input.ReadMessage(Url);
                            break;
                          }
                        }
                      }
                    }
                    #endif

                  }

                }
                #endregion

              }

              public sealed partial class AlternateElementText : pb::IMessage<AlternateElementText>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<AlternateElementText> _parser = new pb::MessageParser<AlternateElementText>(() => new AlternateElementText());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<AlternateElementText> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[3]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AlternateElementText() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AlternateElementText(AlternateElementText other) : this() {
                  otherElementUuid_ = other.otherElementUuid_ != null ? other.otherElementUuid_.Clone() : null;
                  otherElementName_ = other.otherElementName_;
                  textTransformOptions_ = other.textTransformOptions_;
                  textTransform_ = other.textTransform_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AlternateElementText Clone() {
                  return new AlternateElementText(this);
                }

                /// <summary>Field number for the "other_element_uuid" field.</summary>
                public const int OtherElementUuidFieldNumber = 1;
                private global::Rv.Data.UUID otherElementUuid_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.UUID OtherElementUuid {
                  get { return otherElementUuid_; }
                  set {
                    otherElementUuid_ = value;
                  }
                }

                /// <summary>Field number for the "other_element_name" field.</summary>
                public const int OtherElementNameFieldNumber = 2;
                private string otherElementName_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string OtherElementName {
                  get { return otherElementName_; }
                  set {
                    otherElementName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "text_transform_options" field.</summary>
                public const int TextTransformOptionsFieldNumber = 3;
                private uint textTransformOptions_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public uint TextTransformOptions {
                  get { return textTransformOptions_; }
                  set {
                    textTransformOptions_ = value;
                  }
                }

                /// <summary>Field number for the "text_transform" field.</summary>
                public const int TextTransformFieldNumber = 4;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption textTransform_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption.None;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption TextTransform {
                  get { return textTransform_; }
                  set {
                    textTransform_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as AlternateElementText);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(AlternateElementText other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(OtherElementUuid, other.OtherElementUuid)) return false;
                  if (OtherElementName != other.OtherElementName) return false;
                  if (TextTransformOptions != other.TextTransformOptions) return false;
                  if (TextTransform != other.TextTransform) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (otherElementUuid_ != null) hash ^= OtherElementUuid.GetHashCode();
                  if (OtherElementName.Length != 0) hash ^= OtherElementName.GetHashCode();
                  if (TextTransformOptions != 0) hash ^= TextTransformOptions.GetHashCode();
                  if (TextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption.None) hash ^= TextTransform.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (otherElementUuid_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(OtherElementUuid);
                  }
                  if (OtherElementName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(OtherElementName);
                  }
                  if (TextTransformOptions != 0) {
                    output.WriteRawTag(24);
                    output.WriteUInt32(TextTransformOptions);
                  }
                  if (TextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption.None) {
                    output.WriteRawTag(32);
                    output.WriteEnum((int) TextTransform);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (otherElementUuid_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(OtherElementUuid);
                  }
                  if (OtherElementName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(OtherElementName);
                  }
                  if (TextTransformOptions != 0) {
                    output.WriteRawTag(24);
                    output.WriteUInt32(TextTransformOptions);
                  }
                  if (TextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption.None) {
                    output.WriteRawTag(32);
                    output.WriteEnum((int) TextTransform);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (otherElementUuid_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherElementUuid);
                  }
                  if (OtherElementName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherElementName);
                  }
                  if (TextTransformOptions != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TextTransformOptions);
                  }
                  if (TextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption.None) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TextTransform);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(AlternateElementText other) {
                  if (other == null) {
                    return;
                  }
                  if (other.otherElementUuid_ != null) {
                    if (otherElementUuid_ == null) {
                      OtherElementUuid = new global::Rv.Data.UUID();
                    }
                    OtherElementUuid.MergeFrom(other.OtherElementUuid);
                  }
                  if (other.OtherElementName.Length != 0) {
                    OtherElementName = other.OtherElementName;
                  }
                  if (other.TextTransformOptions != 0) {
                    TextTransformOptions = other.TextTransformOptions;
                  }
                  if (other.TextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption.None) {
                    TextTransform = other.TextTransform;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (otherElementUuid_ == null) {
                          OtherElementUuid = new global::Rv.Data.UUID();
                        }
                        input.ReadMessage(OtherElementUuid);
                        break;
                      }
                      case 18: {
                        OtherElementName = input.ReadString();
                        break;
                      }
                      case 24: {
                        TextTransformOptions = input.ReadUInt32();
                        break;
                      }
                      case 32: {
                        TextTransform = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (otherElementUuid_ == null) {
                          OtherElementUuid = new global::Rv.Data.UUID();
                        }
                        input.ReadMessage(OtherElementUuid);
                        break;
                      }
                      case 18: {
                        OtherElementName = input.ReadString();
                        break;
                      }
                      case 24: {
                        TextTransformOptions = input.ReadUInt32();
                        break;
                      }
                      case 32: {
                        TextTransform = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AlternateElementText.Types.TextTransformOption) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the AlternateElementText message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum TextTransformOption {
                    [pbr::OriginalName("TEXT_TRANSFORM_OPTION_NONE")] None = 0,
                    [pbr::OriginalName("TEXT_TRANSFORM_OPTION_REMOVE_LINE_RETURNS")] RemoveLineReturns = 1,
                    [pbr::OriginalName("TEXT_TRANSFORM_OPTION_ONE_WORD_PER_LINE")] OneWordPerLine = 2,
                    [pbr::OriginalName("TEXT_TRANSFORM_OPTION_ONE_CHARACTER_PER_LINE")] OneCharacterPerLine = 3,
                  }

                }
                #endregion

              }

              public sealed partial class CCLIText : pb::IMessage<CCLIText>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<CCLIText> _parser = new pb::MessageParser<CCLIText>(() => new CCLIText());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<CCLIText> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[4]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public CCLIText() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public CCLIText(CCLIText other) : this() {
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public CCLIText Clone() {
                  return new CCLIText(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as CCLIText);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(CCLIText other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(CCLIText other) {
                  if (other == null) {
                    return;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    }
                  }
                }
                #endif

              }

              public sealed partial class ColorTrigger : pb::IMessage<ColorTrigger>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<ColorTrigger> _parser = new pb::MessageParser<ColorTrigger>(() => new ColorTrigger());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<ColorTrigger> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[5]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ColorTrigger() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ColorTrigger(ColorTrigger other) : this() {
                  time_ = other.time_;
                  color_ = other.color_ != null ? other.color_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ColorTrigger Clone() {
                  return new ColorTrigger(this);
                }

                /// <summary>Field number for the "time" field.</summary>
                public const int TimeFieldNumber = 1;
                private double time_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public double Time {
                  get { return time_; }
                  set {
                    time_ = value;
                  }
                }

                /// <summary>Field number for the "color" field.</summary>
                public const int ColorFieldNumber = 2;
                private global::Rv.Data.Color color_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Color Color {
                  get { return color_; }
                  set {
                    color_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as ColorTrigger);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(ColorTrigger other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Time, other.Time)) return false;
                  if (!object.Equals(Color, other.Color)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Time != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Time);
                  if (color_ != null) hash ^= Color.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Time != 0D) {
                    output.WriteRawTag(9);
                    output.WriteDouble(Time);
                  }
                  if (color_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(Color);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Time != 0D) {
                    output.WriteRawTag(9);
                    output.WriteDouble(Time);
                  }
                  if (color_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(Color);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (Time != 0D) {
                    size += 1 + 8;
                  }
                  if (color_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(ColorTrigger other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Time != 0D) {
                    Time = other.Time;
                  }
                  if (other.color_ != null) {
                    if (color_ == null) {
                      Color = new global::Rv.Data.Color();
                    }
                    Color.MergeFrom(other.Color);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 9: {
                        Time = input.ReadDouble();
                        break;
                      }
                      case 18: {
                        if (color_ == null) {
                          Color = new global::Rv.Data.Color();
                        }
                        input.ReadMessage(Color);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 9: {
                        Time = input.ReadDouble();
                        break;
                      }
                      case 18: {
                        if (color_ == null) {
                          Color = new global::Rv.Data.Color();
                        }
                        input.ReadMessage(Color);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class TimerText : pb::IMessage<TimerText>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<TimerText> _parser = new pb::MessageParser<TimerText>(() => new TimerText());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<TimerText> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[6]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public TimerText() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public TimerText(TimerText other) : this() {
                  timerUuid_ = other.timerUuid_ != null ? other.timerUuid_.Clone() : null;
                  timerName_ = other.timerName_;
                  timerFormat_ = other.timerFormat_ != null ? other.timerFormat_.Clone() : null;
                  timerFormatString_ = other.timerFormatString_;
                  colorTriggers_ = other.colorTriggers_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public TimerText Clone() {
                  return new TimerText(this);
                }

                /// <summary>Field number for the "timer_uuid" field.</summary>
                public const int TimerUuidFieldNumber = 1;
                private global::Rv.Data.UUID timerUuid_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.UUID TimerUuid {
                  get { return timerUuid_; }
                  set {
                    timerUuid_ = value;
                  }
                }

                /// <summary>Field number for the "timer_name" field.</summary>
                public const int TimerNameFieldNumber = 2;
                private string timerName_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string TimerName {
                  get { return timerName_; }
                  set {
                    timerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "timer_format" field.</summary>
                public const int TimerFormatFieldNumber = 3;
                private global::Rv.Data.Timer.Types.Format timerFormat_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Timer.Types.Format TimerFormat {
                  get { return timerFormat_; }
                  set {
                    timerFormat_ = value;
                  }
                }

                /// <summary>Field number for the "timer_format_string" field.</summary>
                public const int TimerFormatStringFieldNumber = 4;
                private string timerFormatString_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string TimerFormatString {
                  get { return timerFormatString_; }
                  set {
                    timerFormatString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "color_triggers" field.</summary>
                public const int ColorTriggersFieldNumber = 5;
                private static readonly pb::FieldCodec<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger> _repeated_colorTriggers_codec
                    = pb::FieldCodec.ForMessage(42, global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger.Parser);
                private readonly pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger> colorTriggers_ = new pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger> ColorTriggers {
                  get { return colorTriggers_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as TimerText);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(TimerText other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(TimerUuid, other.TimerUuid)) return false;
                  if (TimerName != other.TimerName) return false;
                  if (!object.Equals(TimerFormat, other.TimerFormat)) return false;
                  if (TimerFormatString != other.TimerFormatString) return false;
                  if(!colorTriggers_.Equals(other.colorTriggers_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (timerUuid_ != null) hash ^= TimerUuid.GetHashCode();
                  if (TimerName.Length != 0) hash ^= TimerName.GetHashCode();
                  if (timerFormat_ != null) hash ^= TimerFormat.GetHashCode();
                  if (TimerFormatString.Length != 0) hash ^= TimerFormatString.GetHashCode();
                  hash ^= colorTriggers_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (timerUuid_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(TimerUuid);
                  }
                  if (TimerName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TimerName);
                  }
                  if (timerFormat_ != null) {
                    output.WriteRawTag(26);
                    output.WriteMessage(TimerFormat);
                  }
                  if (TimerFormatString.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(TimerFormatString);
                  }
                  colorTriggers_.WriteTo(output, _repeated_colorTriggers_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (timerUuid_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(TimerUuid);
                  }
                  if (TimerName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TimerName);
                  }
                  if (timerFormat_ != null) {
                    output.WriteRawTag(26);
                    output.WriteMessage(TimerFormat);
                  }
                  if (TimerFormatString.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(TimerFormatString);
                  }
                  colorTriggers_.WriteTo(ref output, _repeated_colorTriggers_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (timerUuid_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimerUuid);
                  }
                  if (TimerName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TimerName);
                  }
                  if (timerFormat_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimerFormat);
                  }
                  if (TimerFormatString.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TimerFormatString);
                  }
                  size += colorTriggers_.CalculateSize(_repeated_colorTriggers_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(TimerText other) {
                  if (other == null) {
                    return;
                  }
                  if (other.timerUuid_ != null) {
                    if (timerUuid_ == null) {
                      TimerUuid = new global::Rv.Data.UUID();
                    }
                    TimerUuid.MergeFrom(other.TimerUuid);
                  }
                  if (other.TimerName.Length != 0) {
                    TimerName = other.TimerName;
                  }
                  if (other.timerFormat_ != null) {
                    if (timerFormat_ == null) {
                      TimerFormat = new global::Rv.Data.Timer.Types.Format();
                    }
                    TimerFormat.MergeFrom(other.TimerFormat);
                  }
                  if (other.TimerFormatString.Length != 0) {
                    TimerFormatString = other.TimerFormatString;
                  }
                  colorTriggers_.Add(other.colorTriggers_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (timerUuid_ == null) {
                          TimerUuid = new global::Rv.Data.UUID();
                        }
                        input.ReadMessage(TimerUuid);
                        break;
                      }
                      case 18: {
                        TimerName = input.ReadString();
                        break;
                      }
                      case 26: {
                        if (timerFormat_ == null) {
                          TimerFormat = new global::Rv.Data.Timer.Types.Format();
                        }
                        input.ReadMessage(TimerFormat);
                        break;
                      }
                      case 34: {
                        TimerFormatString = input.ReadString();
                        break;
                      }
                      case 42: {
                        colorTriggers_.AddEntriesFrom(input, _repeated_colorTriggers_codec);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (timerUuid_ == null) {
                          TimerUuid = new global::Rv.Data.UUID();
                        }
                        input.ReadMessage(TimerUuid);
                        break;
                      }
                      case 18: {
                        TimerName = input.ReadString();
                        break;
                      }
                      case 26: {
                        if (timerFormat_ == null) {
                          TimerFormat = new global::Rv.Data.Timer.Types.Format();
                        }
                        input.ReadMessage(TimerFormat);
                        break;
                      }
                      case 34: {
                        TimerFormatString = input.ReadString();
                        break;
                      }
                      case 42: {
                        colorTriggers_.AddEntriesFrom(ref input, _repeated_colorTriggers_codec);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class ClockText : pb::IMessage<ClockText>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<ClockText> _parser = new pb::MessageParser<ClockText>(() => new ClockText());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<ClockText> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[7]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ClockText() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ClockText(ClockText other) : this() {
                  clockFormatString_ = other.clockFormatString_;
                  format_ = other.format_ != null ? other.format_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ClockText Clone() {
                  return new ClockText(this);
                }

                /// <summary>Field number for the "clock_format_string" field.</summary>
                public const int ClockFormatStringFieldNumber = 1;
                private string clockFormatString_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string ClockFormatString {
                  get { return clockFormatString_; }
                  set {
                    clockFormatString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "format" field.</summary>
                public const int FormatFieldNumber = 5;
                private global::Rv.Data.Clock.Types.Format format_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Clock.Types.Format Format {
                  get { return format_; }
                  set {
                    format_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as ClockText);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(ClockText other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (ClockFormatString != other.ClockFormatString) return false;
                  if (!object.Equals(Format, other.Format)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (ClockFormatString.Length != 0) hash ^= ClockFormatString.GetHashCode();
                  if (format_ != null) hash ^= Format.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (ClockFormatString.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(ClockFormatString);
                  }
                  if (format_ != null) {
                    output.WriteRawTag(42);
                    output.WriteMessage(Format);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (ClockFormatString.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(ClockFormatString);
                  }
                  if (format_ != null) {
                    output.WriteRawTag(42);
                    output.WriteMessage(Format);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (ClockFormatString.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ClockFormatString);
                  }
                  if (format_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Format);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(ClockText other) {
                  if (other == null) {
                    return;
                  }
                  if (other.ClockFormatString.Length != 0) {
                    ClockFormatString = other.ClockFormatString;
                  }
                  if (other.format_ != null) {
                    if (format_ == null) {
                      Format = new global::Rv.Data.Clock.Types.Format();
                    }
                    Format.MergeFrom(other.Format);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        ClockFormatString = input.ReadString();
                        break;
                      }
                      case 42: {
                        if (format_ == null) {
                          Format = new global::Rv.Data.Clock.Types.Format();
                        }
                        input.ReadMessage(Format);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        ClockFormatString = input.ReadString();
                        break;
                      }
                      case 42: {
                        if (format_ == null) {
                          Format = new global::Rv.Data.Clock.Types.Format();
                        }
                        input.ReadMessage(Format);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class ChordChart : pb::IMessage<ChordChart>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<ChordChart> _parser = new pb::MessageParser<ChordChart>(() => new ChordChart());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<ChordChart> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[8]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ChordChart() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ChordChart(ChordChart other) : this() {
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ChordChart Clone() {
                  return new ChordChart(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as ChordChart);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(ChordChart other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(ChordChart other) {
                  if (other == null) {
                    return;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    }
                  }
                }
                #endif

              }

              public sealed partial class OutputScreen : pb::IMessage<OutputScreen>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<OutputScreen> _parser = new pb::MessageParser<OutputScreen>(() => new OutputScreen());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<OutputScreen> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[9]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public OutputScreen() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public OutputScreen(OutputScreen other) : this() {
                  screenId_ = other.screenId_ != null ? other.screenId_.Clone() : null;
                  screenName_ = other.screenName_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public OutputScreen Clone() {
                  return new OutputScreen(this);
                }

                /// <summary>Field number for the "screen_id" field.</summary>
                public const int ScreenIdFieldNumber = 1;
                private global::Rv.Data.UUID screenId_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.UUID ScreenId {
                  get { return screenId_; }
                  set {
                    screenId_ = value;
                  }
                }

                /// <summary>Field number for the "screen_name" field.</summary>
                public const int ScreenNameFieldNumber = 2;
                private string screenName_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string ScreenName {
                  get { return screenName_; }
                  set {
                    screenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as OutputScreen);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(OutputScreen other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(ScreenId, other.ScreenId)) return false;
                  if (ScreenName != other.ScreenName) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (screenId_ != null) hash ^= ScreenId.GetHashCode();
                  if (ScreenName.Length != 0) hash ^= ScreenName.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (screenId_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(ScreenId);
                  }
                  if (ScreenName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(ScreenName);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (screenId_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(ScreenId);
                  }
                  if (ScreenName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(ScreenName);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (screenId_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScreenId);
                  }
                  if (ScreenName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ScreenName);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(OutputScreen other) {
                  if (other == null) {
                    return;
                  }
                  if (other.screenId_ != null) {
                    if (screenId_ == null) {
                      ScreenId = new global::Rv.Data.UUID();
                    }
                    ScreenId.MergeFrom(other.ScreenId);
                  }
                  if (other.ScreenName.Length != 0) {
                    ScreenName = other.ScreenName;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (screenId_ == null) {
                          ScreenId = new global::Rv.Data.UUID();
                        }
                        input.ReadMessage(ScreenId);
                        break;
                      }
                      case 18: {
                        ScreenName = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (screenId_ == null) {
                          ScreenId = new global::Rv.Data.UUID();
                        }
                        input.ReadMessage(ScreenId);
                        break;
                      }
                      case 18: {
                        ScreenName = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class PCOLive : pb::IMessage<PCOLive>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<PCOLive> _parser = new pb::MessageParser<PCOLive>(() => new PCOLive());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<PCOLive> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[10]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public PCOLive() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public PCOLive(PCOLive other) : this() {
                  theme_ = other.theme_;
                  countdownType_ = other.countdownType_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public PCOLive Clone() {
                  return new PCOLive(this);
                }

                /// <summary>Field number for the "theme" field.</summary>
                public const int ThemeFieldNumber = 2;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme theme_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme.PcoliveThemeLight;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme Theme {
                  get { return theme_; }
                  set {
                    theme_ = value;
                  }
                }

                /// <summary>Field number for the "countdown_type" field.</summary>
                public const int CountdownTypeFieldNumber = 3;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType countdownType_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType.FullItemLength;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType CountdownType {
                  get { return countdownType_; }
                  set {
                    countdownType_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as PCOLive);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(PCOLive other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Theme != other.Theme) return false;
                  if (CountdownType != other.CountdownType) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Theme != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme.PcoliveThemeLight) hash ^= Theme.GetHashCode();
                  if (CountdownType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType.FullItemLength) hash ^= CountdownType.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Theme != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme.PcoliveThemeLight) {
                    output.WriteRawTag(16);
                    output.WriteEnum((int) Theme);
                  }
                  if (CountdownType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType.FullItemLength) {
                    output.WriteRawTag(24);
                    output.WriteEnum((int) CountdownType);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Theme != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme.PcoliveThemeLight) {
                    output.WriteRawTag(16);
                    output.WriteEnum((int) Theme);
                  }
                  if (CountdownType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType.FullItemLength) {
                    output.WriteRawTag(24);
                    output.WriteEnum((int) CountdownType);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (Theme != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme.PcoliveThemeLight) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Theme);
                  }
                  if (CountdownType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType.FullItemLength) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CountdownType);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(PCOLive other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Theme != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme.PcoliveThemeLight) {
                    Theme = other.Theme;
                  }
                  if (other.CountdownType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType.FullItemLength) {
                    CountdownType = other.CountdownType;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 16: {
                        Theme = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme) input.ReadEnum();
                        break;
                      }
                      case 24: {
                        CountdownType = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 16: {
                        Theme = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.Theme) input.ReadEnum();
                        break;
                      }
                      case 24: {
                        CountdownType = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PCOLive.Types.CountdownType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the PCOLive message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum Theme {
                    [pbr::OriginalName("PCOLIVE_THEME_LIGHT")] PcoliveThemeLight = 0,
                    [pbr::OriginalName("PCOLIVE_THEME_DARK")] PcoliveThemeDark = 1,
                  }

                  public enum CountdownType {
                    [pbr::OriginalName("COUNTDOWN_TYPE_FULL_ITEM_LENGTH")] FullItemLength = 0,
                    [pbr::OriginalName("COUNTDOWN_TYPE_END_ITEM_ON_TIME")] EndItemOnTime = 1,
                    [pbr::OriginalName("COUNTDOWN_TYPE_END_SERVICE_ON_TIME")] EndServiceOnTime = 2,
                  }

                }
                #endregion

              }

              public sealed partial class AlternateElementFill : pb::IMessage<AlternateElementFill>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<AlternateElementFill> _parser = new pb::MessageParser<AlternateElementFill>(() => new AlternateElementFill());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<AlternateElementFill> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[11]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AlternateElementFill() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AlternateElementFill(AlternateElementFill other) : this() {
                  otherElementUuid_ = other.otherElementUuid_ != null ? other.otherElementUuid_.Clone() : null;
                  otherElementName_ = other.otherElementName_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AlternateElementFill Clone() {
                  return new AlternateElementFill(this);
                }

                /// <summary>Field number for the "other_element_uuid" field.</summary>
                public const int OtherElementUuidFieldNumber = 1;
                private global::Rv.Data.UUID otherElementUuid_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.UUID OtherElementUuid {
                  get { return otherElementUuid_; }
                  set {
                    otherElementUuid_ = value;
                  }
                }

                /// <summary>Field number for the "other_element_name" field.</summary>
                public const int OtherElementNameFieldNumber = 2;
                private string otherElementName_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string OtherElementName {
                  get { return otherElementName_; }
                  set {
                    otherElementName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as AlternateElementFill);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(AlternateElementFill other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(OtherElementUuid, other.OtherElementUuid)) return false;
                  if (OtherElementName != other.OtherElementName) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (otherElementUuid_ != null) hash ^= OtherElementUuid.GetHashCode();
                  if (OtherElementName.Length != 0) hash ^= OtherElementName.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (otherElementUuid_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(OtherElementUuid);
                  }
                  if (OtherElementName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(OtherElementName);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (otherElementUuid_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(OtherElementUuid);
                  }
                  if (OtherElementName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(OtherElementName);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (otherElementUuid_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherElementUuid);
                  }
                  if (OtherElementName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherElementName);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(AlternateElementFill other) {
                  if (other == null) {
                    return;
                  }
                  if (other.otherElementUuid_ != null) {
                    if (otherElementUuid_ == null) {
                      OtherElementUuid = new global::Rv.Data.UUID();
                    }
                    OtherElementUuid.MergeFrom(other.OtherElementUuid);
                  }
                  if (other.OtherElementName.Length != 0) {
                    OtherElementName = other.OtherElementName;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (otherElementUuid_ == null) {
                          OtherElementUuid = new global::Rv.Data.UUID();
                        }
                        input.ReadMessage(OtherElementUuid);
                        break;
                      }
                      case 18: {
                        OtherElementName = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (otherElementUuid_ == null) {
                          OtherElementUuid = new global::Rv.Data.UUID();
                        }
                        input.ReadMessage(OtherElementUuid);
                        break;
                      }
                      case 18: {
                        OtherElementName = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class VisibilityLink : pb::IMessage<VisibilityLink>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<VisibilityLink> _parser = new pb::MessageParser<VisibilityLink>(() => new VisibilityLink());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<VisibilityLink> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[12]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public VisibilityLink() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public VisibilityLink(VisibilityLink other) : this() {
                  visibilityCriterion_ = other.visibilityCriterion_;
                  conditions_ = other.conditions_.Clone();
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public VisibilityLink Clone() {
                  return new VisibilityLink(this);
                }

                /// <summary>Field number for the "visibility_criterion" field.</summary>
                public const int VisibilityCriterionFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion visibilityCriterion_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion.All;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion VisibilityCriterion {
                  get { return visibilityCriterion_; }
                  set {
                    visibilityCriterion_ = value;
                  }
                }

                /// <summary>Field number for the "conditions" field.</summary>
                public const int ConditionsFieldNumber = 2;
                private static readonly pb::FieldCodec<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition> _repeated_conditions_codec
                    = pb::FieldCodec.ForMessage(18, global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Parser);
                private readonly pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition> conditions_ = new pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition> Conditions {
                  get { return conditions_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as VisibilityLink);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(VisibilityLink other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (VisibilityCriterion != other.VisibilityCriterion) return false;
                  if(!conditions_.Equals(other.conditions_)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion.All) hash ^= VisibilityCriterion.GetHashCode();
                  hash ^= conditions_.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion.All) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) VisibilityCriterion);
                  }
                  conditions_.WriteTo(output, _repeated_conditions_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion.All) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) VisibilityCriterion);
                  }
                  conditions_.WriteTo(ref output, _repeated_conditions_codec);
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion.All) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VisibilityCriterion);
                  }
                  size += conditions_.CalculateSize(_repeated_conditions_codec);
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(VisibilityLink other) {
                  if (other == null) {
                    return;
                  }
                  if (other.VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion.All) {
                    VisibilityCriterion = other.VisibilityCriterion;
                  }
                  conditions_.Add(other.conditions_);
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion) input.ReadEnum();
                        break;
                      }
                      case 18: {
                        conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.VisibilityCriterion) input.ReadEnum();
                        break;
                      }
                      case 18: {
                        conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the VisibilityLink message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum VisibilityCriterion {
                    [pbr::OriginalName("VISIBILITY_CRITERION_ALL")] All = 0,
                    [pbr::OriginalName("VISIBILITY_CRITERION_ANY")] Any = 1,
                    [pbr::OriginalName("VISIBILITY_CRITERION_NONE")] None = 2,
                  }

                  public sealed partial class Condition : pb::IMessage<Condition>
                  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      , pb::IBufferMessage
                  #endif
                  {
                    private static readonly pb::MessageParser<Condition> _parser = new pb::MessageParser<Condition>(() => new Condition());
                    private pb::UnknownFieldSet _unknownFields;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pb::MessageParser<Condition> Parser { get { return _parser; } }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pbr::MessageDescriptor Descriptor {
                      get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Descriptor.NestedTypes[0]; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    pbr::MessageDescriptor pb::IMessage.Descriptor {
                      get { return Descriptor; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public Condition() {
                      OnConstruction();
                    }

                    partial void OnConstruction();

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public Condition(Condition other) : this() {
                      switch (other.ConditionTypeCase) {
                        case ConditionTypeOneofCase.ElementVisibility:
                          ElementVisibility = other.ElementVisibility.Clone();
                          break;
                        case ConditionTypeOneofCase.TimerVisibility:
                          TimerVisibility = other.TimerVisibility.Clone();
                          break;
                        case ConditionTypeOneofCase.VideoCountdownVisibility:
                          VideoCountdownVisibility = other.VideoCountdownVisibility.Clone();
                          break;
                        case ConditionTypeOneofCase.CaptureSessionVisibility:
                          CaptureSessionVisibility = other.CaptureSessionVisibility.Clone();
                          break;
                        case ConditionTypeOneofCase.VideoInputVisibility:
                          VideoInputVisibility = other.VideoInputVisibility.Clone();
                          break;
                        case ConditionTypeOneofCase.AudioCountdownVisibility:
                          AudioCountdownVisibility = other.AudioCountdownVisibility.Clone();
                          break;
                      }

                      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public Condition Clone() {
                      return new Condition(this);
                    }

                    /// <summary>Field number for the "element_visibility" field.</summary>
                    public const int ElementVisibilityFieldNumber = 1;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility ElementVisibility {
                      get { return conditionTypeCase_ == ConditionTypeOneofCase.ElementVisibility ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility) conditionType_ : null; }
                      set {
                        conditionType_ = value;
                        conditionTypeCase_ = value == null ? ConditionTypeOneofCase.None : ConditionTypeOneofCase.ElementVisibility;
                      }
                    }

                    /// <summary>Field number for the "timer_visibility" field.</summary>
                    public const int TimerVisibilityFieldNumber = 2;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility TimerVisibility {
                      get { return conditionTypeCase_ == ConditionTypeOneofCase.TimerVisibility ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility) conditionType_ : null; }
                      set {
                        conditionType_ = value;
                        conditionTypeCase_ = value == null ? ConditionTypeOneofCase.None : ConditionTypeOneofCase.TimerVisibility;
                      }
                    }

                    /// <summary>Field number for the "video_countdown_visibility" field.</summary>
                    public const int VideoCountdownVisibilityFieldNumber = 3;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility VideoCountdownVisibility {
                      get { return conditionTypeCase_ == ConditionTypeOneofCase.VideoCountdownVisibility ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility) conditionType_ : null; }
                      set {
                        conditionType_ = value;
                        conditionTypeCase_ = value == null ? ConditionTypeOneofCase.None : ConditionTypeOneofCase.VideoCountdownVisibility;
                      }
                    }

                    /// <summary>Field number for the "capture_session_visibility" field.</summary>
                    public const int CaptureSessionVisibilityFieldNumber = 4;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility CaptureSessionVisibility {
                      get { return conditionTypeCase_ == ConditionTypeOneofCase.CaptureSessionVisibility ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility) conditionType_ : null; }
                      set {
                        conditionType_ = value;
                        conditionTypeCase_ = value == null ? ConditionTypeOneofCase.None : ConditionTypeOneofCase.CaptureSessionVisibility;
                      }
                    }

                    /// <summary>Field number for the "video_input_visibility" field.</summary>
                    public const int VideoInputVisibilityFieldNumber = 5;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility VideoInputVisibility {
                      get { return conditionTypeCase_ == ConditionTypeOneofCase.VideoInputVisibility ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility) conditionType_ : null; }
                      set {
                        conditionType_ = value;
                        conditionTypeCase_ = value == null ? ConditionTypeOneofCase.None : ConditionTypeOneofCase.VideoInputVisibility;
                      }
                    }

                    /// <summary>Field number for the "audio_countdown_visibility" field.</summary>
                    public const int AudioCountdownVisibilityFieldNumber = 6;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility AudioCountdownVisibility {
                      get { return conditionTypeCase_ == ConditionTypeOneofCase.AudioCountdownVisibility ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility) conditionType_ : null; }
                      set {
                        conditionType_ = value;
                        conditionTypeCase_ = value == null ? ConditionTypeOneofCase.None : ConditionTypeOneofCase.AudioCountdownVisibility;
                      }
                    }

                    private object conditionType_;
                    /// <summary>Enum of possible cases for the "ConditionType" oneof.</summary>
                    public enum ConditionTypeOneofCase {
                      None = 0,
                      ElementVisibility = 1,
                      TimerVisibility = 2,
                      VideoCountdownVisibility = 3,
                      CaptureSessionVisibility = 4,
                      VideoInputVisibility = 5,
                      AudioCountdownVisibility = 6,
                    }
                    private ConditionTypeOneofCase conditionTypeCase_ = ConditionTypeOneofCase.None;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public ConditionTypeOneofCase ConditionTypeCase {
                      get { return conditionTypeCase_; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void ClearConditionType() {
                      conditionTypeCase_ = ConditionTypeOneofCase.None;
                      conditionType_ = null;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override bool Equals(object other) {
                      return Equals(other as Condition);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public bool Equals(Condition other) {
                      if (ReferenceEquals(other, null)) {
                        return false;
                      }
                      if (ReferenceEquals(other, this)) {
                        return true;
                      }
                      if (!object.Equals(ElementVisibility, other.ElementVisibility)) return false;
                      if (!object.Equals(TimerVisibility, other.TimerVisibility)) return false;
                      if (!object.Equals(VideoCountdownVisibility, other.VideoCountdownVisibility)) return false;
                      if (!object.Equals(CaptureSessionVisibility, other.CaptureSessionVisibility)) return false;
                      if (!object.Equals(VideoInputVisibility, other.VideoInputVisibility)) return false;
                      if (!object.Equals(AudioCountdownVisibility, other.AudioCountdownVisibility)) return false;
                      if (ConditionTypeCase != other.ConditionTypeCase) return false;
                      return Equals(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override int GetHashCode() {
                      int hash = 1;
                      if (conditionTypeCase_ == ConditionTypeOneofCase.ElementVisibility) hash ^= ElementVisibility.GetHashCode();
                      if (conditionTypeCase_ == ConditionTypeOneofCase.TimerVisibility) hash ^= TimerVisibility.GetHashCode();
                      if (conditionTypeCase_ == ConditionTypeOneofCase.VideoCountdownVisibility) hash ^= VideoCountdownVisibility.GetHashCode();
                      if (conditionTypeCase_ == ConditionTypeOneofCase.CaptureSessionVisibility) hash ^= CaptureSessionVisibility.GetHashCode();
                      if (conditionTypeCase_ == ConditionTypeOneofCase.VideoInputVisibility) hash ^= VideoInputVisibility.GetHashCode();
                      if (conditionTypeCase_ == ConditionTypeOneofCase.AudioCountdownVisibility) hash ^= AudioCountdownVisibility.GetHashCode();
                      hash ^= (int) conditionTypeCase_;
                      if (_unknownFields != null) {
                        hash ^= _unknownFields.GetHashCode();
                      }
                      return hash;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override string ToString() {
                      return pb::JsonFormatter.ToDiagnosticString(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void WriteTo(pb::CodedOutputStream output) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      output.WriteRawMessage(this);
                    #else
                      if (conditionTypeCase_ == ConditionTypeOneofCase.ElementVisibility) {
                        output.WriteRawTag(10);
                        output.WriteMessage(ElementVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.TimerVisibility) {
                        output.WriteRawTag(18);
                        output.WriteMessage(TimerVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.VideoCountdownVisibility) {
                        output.WriteRawTag(26);
                        output.WriteMessage(VideoCountdownVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.CaptureSessionVisibility) {
                        output.WriteRawTag(34);
                        output.WriteMessage(CaptureSessionVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.VideoInputVisibility) {
                        output.WriteRawTag(42);
                        output.WriteMessage(VideoInputVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.AudioCountdownVisibility) {
                        output.WriteRawTag(50);
                        output.WriteMessage(AudioCountdownVisibility);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(output);
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                      if (conditionTypeCase_ == ConditionTypeOneofCase.ElementVisibility) {
                        output.WriteRawTag(10);
                        output.WriteMessage(ElementVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.TimerVisibility) {
                        output.WriteRawTag(18);
                        output.WriteMessage(TimerVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.VideoCountdownVisibility) {
                        output.WriteRawTag(26);
                        output.WriteMessage(VideoCountdownVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.CaptureSessionVisibility) {
                        output.WriteRawTag(34);
                        output.WriteMessage(CaptureSessionVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.VideoInputVisibility) {
                        output.WriteRawTag(42);
                        output.WriteMessage(VideoInputVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.AudioCountdownVisibility) {
                        output.WriteRawTag(50);
                        output.WriteMessage(AudioCountdownVisibility);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(ref output);
                      }
                    }
                    #endif

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public int CalculateSize() {
                      int size = 0;
                      if (conditionTypeCase_ == ConditionTypeOneofCase.ElementVisibility) {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ElementVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.TimerVisibility) {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimerVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.VideoCountdownVisibility) {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoCountdownVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.CaptureSessionVisibility) {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureSessionVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.VideoInputVisibility) {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VideoInputVisibility);
                      }
                      if (conditionTypeCase_ == ConditionTypeOneofCase.AudioCountdownVisibility) {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioCountdownVisibility);
                      }
                      if (_unknownFields != null) {
                        size += _unknownFields.CalculateSize();
                      }
                      return size;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(Condition other) {
                      if (other == null) {
                        return;
                      }
                      switch (other.ConditionTypeCase) {
                        case ConditionTypeOneofCase.ElementVisibility:
                          if (ElementVisibility == null) {
                            ElementVisibility = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility();
                          }
                          ElementVisibility.MergeFrom(other.ElementVisibility);
                          break;
                        case ConditionTypeOneofCase.TimerVisibility:
                          if (TimerVisibility == null) {
                            TimerVisibility = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility();
                          }
                          TimerVisibility.MergeFrom(other.TimerVisibility);
                          break;
                        case ConditionTypeOneofCase.VideoCountdownVisibility:
                          if (VideoCountdownVisibility == null) {
                            VideoCountdownVisibility = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility();
                          }
                          VideoCountdownVisibility.MergeFrom(other.VideoCountdownVisibility);
                          break;
                        case ConditionTypeOneofCase.CaptureSessionVisibility:
                          if (CaptureSessionVisibility == null) {
                            CaptureSessionVisibility = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility();
                          }
                          CaptureSessionVisibility.MergeFrom(other.CaptureSessionVisibility);
                          break;
                        case ConditionTypeOneofCase.VideoInputVisibility:
                          if (VideoInputVisibility == null) {
                            VideoInputVisibility = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility();
                          }
                          VideoInputVisibility.MergeFrom(other.VideoInputVisibility);
                          break;
                        case ConditionTypeOneofCase.AudioCountdownVisibility:
                          if (AudioCountdownVisibility == null) {
                            AudioCountdownVisibility = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility();
                          }
                          AudioCountdownVisibility.MergeFrom(other.AudioCountdownVisibility);
                          break;
                      }

                      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(pb::CodedInputStream input) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      input.ReadRawMessage(this);
                    #else
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                            break;
                          case 10: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.ElementVisibility) {
                              subBuilder.MergeFrom(ElementVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            ElementVisibility = subBuilder;
                            break;
                          }
                          case 18: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.TimerVisibility) {
                              subBuilder.MergeFrom(TimerVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            TimerVisibility = subBuilder;
                            break;
                          }
                          case 26: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.VideoCountdownVisibility) {
                              subBuilder.MergeFrom(VideoCountdownVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            VideoCountdownVisibility = subBuilder;
                            break;
                          }
                          case 34: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.CaptureSessionVisibility) {
                              subBuilder.MergeFrom(CaptureSessionVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            CaptureSessionVisibility = subBuilder;
                            break;
                          }
                          case 42: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.VideoInputVisibility) {
                              subBuilder.MergeFrom(VideoInputVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            VideoInputVisibility = subBuilder;
                            break;
                          }
                          case 50: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.AudioCountdownVisibility) {
                              subBuilder.MergeFrom(AudioCountdownVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            AudioCountdownVisibility = subBuilder;
                            break;
                          }
                        }
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                            break;
                          case 10: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.ElementVisibility) {
                              subBuilder.MergeFrom(ElementVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            ElementVisibility = subBuilder;
                            break;
                          }
                          case 18: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.TimerVisibility) {
                              subBuilder.MergeFrom(TimerVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            TimerVisibility = subBuilder;
                            break;
                          }
                          case 26: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.VideoCountdownVisibility) {
                              subBuilder.MergeFrom(VideoCountdownVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            VideoCountdownVisibility = subBuilder;
                            break;
                          }
                          case 34: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.CaptureSessionVisibility) {
                              subBuilder.MergeFrom(CaptureSessionVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            CaptureSessionVisibility = subBuilder;
                            break;
                          }
                          case 42: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.VideoInputVisibility) {
                              subBuilder.MergeFrom(VideoInputVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            VideoInputVisibility = subBuilder;
                            break;
                          }
                          case 50: {
                            global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility();
                            if (conditionTypeCase_ == ConditionTypeOneofCase.AudioCountdownVisibility) {
                              subBuilder.MergeFrom(AudioCountdownVisibility);
                            }
                            input.ReadMessage(subBuilder);
                            AudioCountdownVisibility = subBuilder;
                            break;
                          }
                        }
                      }
                    }
                    #endif

                    #region Nested types
                    /// <summary>Container for nested types declared in the Condition message type.</summary>
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static partial class Types {
                      public sealed partial class ElementVisibility : pb::IMessage<ElementVisibility>
                      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          , pb::IBufferMessage
                      #endif
                      {
                        private static readonly pb::MessageParser<ElementVisibility> _parser = new pb::MessageParser<ElementVisibility>(() => new ElementVisibility());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pb::MessageParser<ElementVisibility> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pbr::MessageDescriptor Descriptor {
                          get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Descriptor.NestedTypes[0]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        pbr::MessageDescriptor pb::IMessage.Descriptor {
                          get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public ElementVisibility() {
                          OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public ElementVisibility(ElementVisibility other) : this() {
                          otherElementUuid_ = other.otherElementUuid_ != null ? other.otherElementUuid_.Clone() : null;
                          otherElementName_ = other.otherElementName_;
                          visibilityCriterion_ = other.visibilityCriterion_;
                          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public ElementVisibility Clone() {
                          return new ElementVisibility(this);
                        }

                        /// <summary>Field number for the "other_element_uuid" field.</summary>
                        public const int OtherElementUuidFieldNumber = 1;
                        private global::Rv.Data.UUID otherElementUuid_;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public global::Rv.Data.UUID OtherElementUuid {
                          get { return otherElementUuid_; }
                          set {
                            otherElementUuid_ = value;
                          }
                        }

                        /// <summary>Field number for the "other_element_name" field.</summary>
                        public const int OtherElementNameFieldNumber = 2;
                        private string otherElementName_ = "";
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public string OtherElementName {
                          get { return otherElementName_; }
                          set {
                            otherElementName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                          }
                        }

                        /// <summary>Field number for the "visibility_criterion" field.</summary>
                        public const int VisibilityCriterionFieldNumber = 3;
                        private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion visibilityCriterion_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion.HasText;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion VisibilityCriterion {
                          get { return visibilityCriterion_; }
                          set {
                            visibilityCriterion_ = value;
                          }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override bool Equals(object other) {
                          return Equals(other as ElementVisibility);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public bool Equals(ElementVisibility other) {
                          if (ReferenceEquals(other, null)) {
                            return false;
                          }
                          if (ReferenceEquals(other, this)) {
                            return true;
                          }
                          if (!object.Equals(OtherElementUuid, other.OtherElementUuid)) return false;
                          if (OtherElementName != other.OtherElementName) return false;
                          if (VisibilityCriterion != other.VisibilityCriterion) return false;
                          return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override int GetHashCode() {
                          int hash = 1;
                          if (otherElementUuid_ != null) hash ^= OtherElementUuid.GetHashCode();
                          if (OtherElementName.Length != 0) hash ^= OtherElementName.GetHashCode();
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion.HasText) hash ^= VisibilityCriterion.GetHashCode();
                          if (_unknownFields != null) {
                            hash ^= _unknownFields.GetHashCode();
                          }
                          return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override string ToString() {
                          return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void WriteTo(pb::CodedOutputStream output) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          output.WriteRawMessage(this);
                        #else
                          if (otherElementUuid_ != null) {
                            output.WriteRawTag(10);
                            output.WriteMessage(OtherElementUuid);
                          }
                          if (OtherElementName.Length != 0) {
                            output.WriteRawTag(18);
                            output.WriteString(OtherElementName);
                          }
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion.HasText) {
                            output.WriteRawTag(24);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(output);
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                          if (otherElementUuid_ != null) {
                            output.WriteRawTag(10);
                            output.WriteMessage(OtherElementUuid);
                          }
                          if (OtherElementName.Length != 0) {
                            output.WriteRawTag(18);
                            output.WriteString(OtherElementName);
                          }
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion.HasText) {
                            output.WriteRawTag(24);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(ref output);
                          }
                        }
                        #endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public int CalculateSize() {
                          int size = 0;
                          if (otherElementUuid_ != null) {
                            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherElementUuid);
                          }
                          if (OtherElementName.Length != 0) {
                            size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherElementName);
                          }
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion.HasText) {
                            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            size += _unknownFields.CalculateSize();
                          }
                          return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(ElementVisibility other) {
                          if (other == null) {
                            return;
                          }
                          if (other.otherElementUuid_ != null) {
                            if (otherElementUuid_ == null) {
                              OtherElementUuid = new global::Rv.Data.UUID();
                            }
                            OtherElementUuid.MergeFrom(other.OtherElementUuid);
                          }
                          if (other.OtherElementName.Length != 0) {
                            OtherElementName = other.OtherElementName;
                          }
                          if (other.VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion.HasText) {
                            VisibilityCriterion = other.VisibilityCriterion;
                          }
                          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(pb::CodedInputStream input) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          input.ReadRawMessage(this);
                        #else
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                break;
                              case 10: {
                                if (otherElementUuid_ == null) {
                                  OtherElementUuid = new global::Rv.Data.UUID();
                                }
                                input.ReadMessage(OtherElementUuid);
                                break;
                              }
                              case 18: {
                                OtherElementName = input.ReadString();
                                break;
                              }
                              case 24: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                              case 10: {
                                if (otherElementUuid_ == null) {
                                  OtherElementUuid = new global::Rv.Data.UUID();
                                }
                                input.ReadMessage(OtherElementUuid);
                                break;
                              }
                              case 18: {
                                OtherElementName = input.ReadString();
                                break;
                              }
                              case 24: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.ElementVisibility.Types.ElementVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        }
                        #endif

                        #region Nested types
                        /// <summary>Container for nested types declared in the ElementVisibility message type.</summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static partial class Types {
                          public enum ElementVisibilityCriterion {
                            [pbr::OriginalName("ELEMENT_VISIBILITY_CRITERION_HAS_TEXT")] HasText = 0,
                            [pbr::OriginalName("ELEMENT_VISIBILITY_CRITERION_HAS_NO_TEXT")] HasNoText = 1,
                          }

                        }
                        #endregion

                      }

                      public sealed partial class TimerVisibility : pb::IMessage<TimerVisibility>
                      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          , pb::IBufferMessage
                      #endif
                      {
                        private static readonly pb::MessageParser<TimerVisibility> _parser = new pb::MessageParser<TimerVisibility>(() => new TimerVisibility());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pb::MessageParser<TimerVisibility> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pbr::MessageDescriptor Descriptor {
                          get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Descriptor.NestedTypes[1]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        pbr::MessageDescriptor pb::IMessage.Descriptor {
                          get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public TimerVisibility() {
                          OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public TimerVisibility(TimerVisibility other) : this() {
                          timerUuid_ = other.timerUuid_ != null ? other.timerUuid_.Clone() : null;
                          timerName_ = other.timerName_;
                          visibilityCriterion_ = other.visibilityCriterion_;
                          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public TimerVisibility Clone() {
                          return new TimerVisibility(this);
                        }

                        /// <summary>Field number for the "timer_uuid" field.</summary>
                        public const int TimerUuidFieldNumber = 1;
                        private global::Rv.Data.UUID timerUuid_;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public global::Rv.Data.UUID TimerUuid {
                          get { return timerUuid_; }
                          set {
                            timerUuid_ = value;
                          }
                        }

                        /// <summary>Field number for the "timer_name" field.</summary>
                        public const int TimerNameFieldNumber = 2;
                        private string timerName_ = "";
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public string TimerName {
                          get { return timerName_; }
                          set {
                            timerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                          }
                        }

                        /// <summary>Field number for the "visibility_criterion" field.</summary>
                        public const int VisibilityCriterionFieldNumber = 3;
                        private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion visibilityCriterion_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion.HasTimeRemaining;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion VisibilityCriterion {
                          get { return visibilityCriterion_; }
                          set {
                            visibilityCriterion_ = value;
                          }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override bool Equals(object other) {
                          return Equals(other as TimerVisibility);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public bool Equals(TimerVisibility other) {
                          if (ReferenceEquals(other, null)) {
                            return false;
                          }
                          if (ReferenceEquals(other, this)) {
                            return true;
                          }
                          if (!object.Equals(TimerUuid, other.TimerUuid)) return false;
                          if (TimerName != other.TimerName) return false;
                          if (VisibilityCriterion != other.VisibilityCriterion) return false;
                          return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override int GetHashCode() {
                          int hash = 1;
                          if (timerUuid_ != null) hash ^= TimerUuid.GetHashCode();
                          if (TimerName.Length != 0) hash ^= TimerName.GetHashCode();
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion.HasTimeRemaining) hash ^= VisibilityCriterion.GetHashCode();
                          if (_unknownFields != null) {
                            hash ^= _unknownFields.GetHashCode();
                          }
                          return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override string ToString() {
                          return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void WriteTo(pb::CodedOutputStream output) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          output.WriteRawMessage(this);
                        #else
                          if (timerUuid_ != null) {
                            output.WriteRawTag(10);
                            output.WriteMessage(TimerUuid);
                          }
                          if (TimerName.Length != 0) {
                            output.WriteRawTag(18);
                            output.WriteString(TimerName);
                          }
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion.HasTimeRemaining) {
                            output.WriteRawTag(24);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(output);
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                          if (timerUuid_ != null) {
                            output.WriteRawTag(10);
                            output.WriteMessage(TimerUuid);
                          }
                          if (TimerName.Length != 0) {
                            output.WriteRawTag(18);
                            output.WriteString(TimerName);
                          }
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion.HasTimeRemaining) {
                            output.WriteRawTag(24);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(ref output);
                          }
                        }
                        #endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public int CalculateSize() {
                          int size = 0;
                          if (timerUuid_ != null) {
                            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimerUuid);
                          }
                          if (TimerName.Length != 0) {
                            size += 1 + pb::CodedOutputStream.ComputeStringSize(TimerName);
                          }
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion.HasTimeRemaining) {
                            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            size += _unknownFields.CalculateSize();
                          }
                          return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(TimerVisibility other) {
                          if (other == null) {
                            return;
                          }
                          if (other.timerUuid_ != null) {
                            if (timerUuid_ == null) {
                              TimerUuid = new global::Rv.Data.UUID();
                            }
                            TimerUuid.MergeFrom(other.TimerUuid);
                          }
                          if (other.TimerName.Length != 0) {
                            TimerName = other.TimerName;
                          }
                          if (other.VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion.HasTimeRemaining) {
                            VisibilityCriterion = other.VisibilityCriterion;
                          }
                          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(pb::CodedInputStream input) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          input.ReadRawMessage(this);
                        #else
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                break;
                              case 10: {
                                if (timerUuid_ == null) {
                                  TimerUuid = new global::Rv.Data.UUID();
                                }
                                input.ReadMessage(TimerUuid);
                                break;
                              }
                              case 18: {
                                TimerName = input.ReadString();
                                break;
                              }
                              case 24: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                              case 10: {
                                if (timerUuid_ == null) {
                                  TimerUuid = new global::Rv.Data.UUID();
                                }
                                input.ReadMessage(TimerUuid);
                                break;
                              }
                              case 18: {
                                TimerName = input.ReadString();
                                break;
                              }
                              case 24: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.TimerVisibility.Types.TimerVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        }
                        #endif

                        #region Nested types
                        /// <summary>Container for nested types declared in the TimerVisibility message type.</summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static partial class Types {
                          public enum TimerVisibilityCriterion {
                            [pbr::OriginalName("TIMER_VISIBILITY_CRITERION_HAS_TIME_REMAINING")] HasTimeRemaining = 0,
                            [pbr::OriginalName("TIMER_VISIBILITY_CRITERION_HAS_EXPIRED")] HasExpired = 1,
                            [pbr::OriginalName("TIMER_VISIBILITY_CRITERION_IS_RUNNING")] IsRunning = 2,
                            [pbr::OriginalName("TIMER_VISIBILITY_CRITERION_NOT_RUNNING")] NotRunning = 3,
                          }

                        }
                        #endregion

                      }

                      public sealed partial class VideoCountdownVisibility : pb::IMessage<VideoCountdownVisibility>
                      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          , pb::IBufferMessage
                      #endif
                      {
                        private static readonly pb::MessageParser<VideoCountdownVisibility> _parser = new pb::MessageParser<VideoCountdownVisibility>(() => new VideoCountdownVisibility());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pb::MessageParser<VideoCountdownVisibility> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pbr::MessageDescriptor Descriptor {
                          get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Descriptor.NestedTypes[2]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        pbr::MessageDescriptor pb::IMessage.Descriptor {
                          get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public VideoCountdownVisibility() {
                          OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public VideoCountdownVisibility(VideoCountdownVisibility other) : this() {
                          visibilityCriterion_ = other.visibilityCriterion_;
                          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public VideoCountdownVisibility Clone() {
                          return new VideoCountdownVisibility(this);
                        }

                        /// <summary>Field number for the "visibility_criterion" field.</summary>
                        public const int VisibilityCriterionFieldNumber = 1;
                        private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion visibilityCriterion_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion.HasTimeRemaining;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion VisibilityCriterion {
                          get { return visibilityCriterion_; }
                          set {
                            visibilityCriterion_ = value;
                          }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override bool Equals(object other) {
                          return Equals(other as VideoCountdownVisibility);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public bool Equals(VideoCountdownVisibility other) {
                          if (ReferenceEquals(other, null)) {
                            return false;
                          }
                          if (ReferenceEquals(other, this)) {
                            return true;
                          }
                          if (VisibilityCriterion != other.VisibilityCriterion) return false;
                          return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override int GetHashCode() {
                          int hash = 1;
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion.HasTimeRemaining) hash ^= VisibilityCriterion.GetHashCode();
                          if (_unknownFields != null) {
                            hash ^= _unknownFields.GetHashCode();
                          }
                          return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override string ToString() {
                          return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void WriteTo(pb::CodedOutputStream output) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          output.WriteRawMessage(this);
                        #else
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion.HasTimeRemaining) {
                            output.WriteRawTag(8);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(output);
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion.HasTimeRemaining) {
                            output.WriteRawTag(8);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(ref output);
                          }
                        }
                        #endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public int CalculateSize() {
                          int size = 0;
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion.HasTimeRemaining) {
                            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            size += _unknownFields.CalculateSize();
                          }
                          return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(VideoCountdownVisibility other) {
                          if (other == null) {
                            return;
                          }
                          if (other.VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion.HasTimeRemaining) {
                            VisibilityCriterion = other.VisibilityCriterion;
                          }
                          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(pb::CodedInputStream input) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          input.ReadRawMessage(this);
                        #else
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                break;
                              case 8: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                              case 8: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoCountdownVisibility.Types.VideoCountdownVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        }
                        #endif

                        #region Nested types
                        /// <summary>Container for nested types declared in the VideoCountdownVisibility message type.</summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static partial class Types {
                          public enum VideoCountdownVisibilityCriterion {
                            [pbr::OriginalName("VIDEO_COUNTDOWN_VISIBILITY_CRITERION_HAS_TIME_REMAINING")] HasTimeRemaining = 0,
                            [pbr::OriginalName("VIDEO_COUNTDOWN_VISIBILITY_CRITERION_HAS_EXPIRED")] HasExpired = 1,
                            [pbr::OriginalName("VIDEO_COUNTDOWN_VISIBILITY_CRITERION_IS_RUNNING")] IsRunning = 2,
                            [pbr::OriginalName("VIDEO_COUNTDOWN_VISIBILITY_CRITERION_NOT_RUNNING")] NotRunning = 3,
                            [pbr::OriginalName("VIDEO_COUNTDOWN_VISIBILITY_CRITERION_LOOPING")] Looping = 4,
                            [pbr::OriginalName("VIDEO_COUNTDOWN_VISIBILITY_CRITERION_NOT_LOOPING")] NotLooping = 5,
                          }

                        }
                        #endregion

                      }

                      public sealed partial class AudioCountdownVisibility : pb::IMessage<AudioCountdownVisibility>
                      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          , pb::IBufferMessage
                      #endif
                      {
                        private static readonly pb::MessageParser<AudioCountdownVisibility> _parser = new pb::MessageParser<AudioCountdownVisibility>(() => new AudioCountdownVisibility());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pb::MessageParser<AudioCountdownVisibility> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pbr::MessageDescriptor Descriptor {
                          get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Descriptor.NestedTypes[3]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        pbr::MessageDescriptor pb::IMessage.Descriptor {
                          get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public AudioCountdownVisibility() {
                          OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public AudioCountdownVisibility(AudioCountdownVisibility other) : this() {
                          visibilityCriterion_ = other.visibilityCriterion_;
                          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public AudioCountdownVisibility Clone() {
                          return new AudioCountdownVisibility(this);
                        }

                        /// <summary>Field number for the "visibility_criterion" field.</summary>
                        public const int VisibilityCriterionFieldNumber = 1;
                        private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion visibilityCriterion_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion.HasTimeRemaining;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion VisibilityCriterion {
                          get { return visibilityCriterion_; }
                          set {
                            visibilityCriterion_ = value;
                          }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override bool Equals(object other) {
                          return Equals(other as AudioCountdownVisibility);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public bool Equals(AudioCountdownVisibility other) {
                          if (ReferenceEquals(other, null)) {
                            return false;
                          }
                          if (ReferenceEquals(other, this)) {
                            return true;
                          }
                          if (VisibilityCriterion != other.VisibilityCriterion) return false;
                          return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override int GetHashCode() {
                          int hash = 1;
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion.HasTimeRemaining) hash ^= VisibilityCriterion.GetHashCode();
                          if (_unknownFields != null) {
                            hash ^= _unknownFields.GetHashCode();
                          }
                          return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override string ToString() {
                          return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void WriteTo(pb::CodedOutputStream output) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          output.WriteRawMessage(this);
                        #else
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion.HasTimeRemaining) {
                            output.WriteRawTag(8);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(output);
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion.HasTimeRemaining) {
                            output.WriteRawTag(8);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(ref output);
                          }
                        }
                        #endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public int CalculateSize() {
                          int size = 0;
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion.HasTimeRemaining) {
                            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            size += _unknownFields.CalculateSize();
                          }
                          return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(AudioCountdownVisibility other) {
                          if (other == null) {
                            return;
                          }
                          if (other.VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion.HasTimeRemaining) {
                            VisibilityCriterion = other.VisibilityCriterion;
                          }
                          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(pb::CodedInputStream input) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          input.ReadRawMessage(this);
                        #else
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                break;
                              case 8: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                              case 8: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.AudioCountdownVisibility.Types.AudioCountdownVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        }
                        #endif

                        #region Nested types
                        /// <summary>Container for nested types declared in the AudioCountdownVisibility message type.</summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static partial class Types {
                          public enum AudioCountdownVisibilityCriterion {
                            [pbr::OriginalName("AUDIO_COUNTDOWN_VISIBILITY_CRITERION_HAS_TIME_REMAINING")] HasTimeRemaining = 0,
                            [pbr::OriginalName("AUDIO_COUNTDOWN_VISIBILITY_CRITERION_HAS_EXPIRED")] HasExpired = 1,
                            [pbr::OriginalName("AUDIO_COUNTDOWN_VISIBILITY_CRITERION_IS_RUNNING")] IsRunning = 2,
                            [pbr::OriginalName("AUDIO_COUNTDOWN_VISIBILITY_CRITERION_NOT_RUNNING")] NotRunning = 3,
                            [pbr::OriginalName("AUDIO_COUNTDOWN_VISIBILITY_CRITERION_LOOPING")] Looping = 4,
                            [pbr::OriginalName("AUDIO_COUNTDOWN_VISIBILITY_CRITERION_NOT_LOOPING")] NotLooping = 5,
                          }

                        }
                        #endregion

                      }

                      public sealed partial class CaptureSessionVisibility : pb::IMessage<CaptureSessionVisibility>
                      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          , pb::IBufferMessage
                      #endif
                      {
                        private static readonly pb::MessageParser<CaptureSessionVisibility> _parser = new pb::MessageParser<CaptureSessionVisibility>(() => new CaptureSessionVisibility());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pb::MessageParser<CaptureSessionVisibility> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pbr::MessageDescriptor Descriptor {
                          get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Descriptor.NestedTypes[4]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        pbr::MessageDescriptor pb::IMessage.Descriptor {
                          get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public CaptureSessionVisibility() {
                          OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public CaptureSessionVisibility(CaptureSessionVisibility other) : this() {
                          visibilityCriterion_ = other.visibilityCriterion_;
                          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public CaptureSessionVisibility Clone() {
                          return new CaptureSessionVisibility(this);
                        }

                        /// <summary>Field number for the "visibility_criterion" field.</summary>
                        public const int VisibilityCriterionFieldNumber = 1;
                        private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion visibilityCriterion_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion.Active;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion VisibilityCriterion {
                          get { return visibilityCriterion_; }
                          set {
                            visibilityCriterion_ = value;
                          }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override bool Equals(object other) {
                          return Equals(other as CaptureSessionVisibility);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public bool Equals(CaptureSessionVisibility other) {
                          if (ReferenceEquals(other, null)) {
                            return false;
                          }
                          if (ReferenceEquals(other, this)) {
                            return true;
                          }
                          if (VisibilityCriterion != other.VisibilityCriterion) return false;
                          return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override int GetHashCode() {
                          int hash = 1;
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion.Active) hash ^= VisibilityCriterion.GetHashCode();
                          if (_unknownFields != null) {
                            hash ^= _unknownFields.GetHashCode();
                          }
                          return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override string ToString() {
                          return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void WriteTo(pb::CodedOutputStream output) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          output.WriteRawMessage(this);
                        #else
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion.Active) {
                            output.WriteRawTag(8);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(output);
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion.Active) {
                            output.WriteRawTag(8);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(ref output);
                          }
                        }
                        #endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public int CalculateSize() {
                          int size = 0;
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion.Active) {
                            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            size += _unknownFields.CalculateSize();
                          }
                          return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(CaptureSessionVisibility other) {
                          if (other == null) {
                            return;
                          }
                          if (other.VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion.Active) {
                            VisibilityCriterion = other.VisibilityCriterion;
                          }
                          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(pb::CodedInputStream input) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          input.ReadRawMessage(this);
                        #else
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                break;
                              case 8: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                              case 8: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.CaptureSessionVisibility.Types.CaptureSessionVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        }
                        #endif

                        #region Nested types
                        /// <summary>Container for nested types declared in the CaptureSessionVisibility message type.</summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static partial class Types {
                          public enum CaptureSessionVisibilityCriterion {
                            [pbr::OriginalName("CAPTURE_SESSION_VISIBILITY_CRITERION_ACTIVE")] Active = 0,
                            [pbr::OriginalName("CAPTURE_SESSION_VISIBILITY_CRITERION_INACTIVE")] Inactive = 1,
                          }

                        }
                        #endregion

                      }

                      public sealed partial class VideoInputVisibility : pb::IMessage<VideoInputVisibility>
                      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          , pb::IBufferMessage
                      #endif
                      {
                        private static readonly pb::MessageParser<VideoInputVisibility> _parser = new pb::MessageParser<VideoInputVisibility>(() => new VideoInputVisibility());
                        private pb::UnknownFieldSet _unknownFields;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pb::MessageParser<VideoInputVisibility> Parser { get { return _parser; } }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static pbr::MessageDescriptor Descriptor {
                          get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Descriptor.NestedTypes[5]; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        pbr::MessageDescriptor pb::IMessage.Descriptor {
                          get { return Descriptor; }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public VideoInputVisibility() {
                          OnConstruction();
                        }

                        partial void OnConstruction();

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public VideoInputVisibility(VideoInputVisibility other) : this() {
                          videoInputIndex_ = other.videoInputIndex_;
                          visibilityCriterion_ = other.visibilityCriterion_;
                          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public VideoInputVisibility Clone() {
                          return new VideoInputVisibility(this);
                        }

                        /// <summary>Field number for the "video_input_index" field.</summary>
                        public const int VideoInputIndexFieldNumber = 1;
                        private int videoInputIndex_;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public int VideoInputIndex {
                          get { return videoInputIndex_; }
                          set {
                            videoInputIndex_ = value;
                          }
                        }

                        /// <summary>Field number for the "visibility_criterion" field.</summary>
                        public const int VisibilityCriterionFieldNumber = 2;
                        private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion visibilityCriterion_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion.Active;
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion VisibilityCriterion {
                          get { return visibilityCriterion_; }
                          set {
                            visibilityCriterion_ = value;
                          }
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override bool Equals(object other) {
                          return Equals(other as VideoInputVisibility);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public bool Equals(VideoInputVisibility other) {
                          if (ReferenceEquals(other, null)) {
                            return false;
                          }
                          if (ReferenceEquals(other, this)) {
                            return true;
                          }
                          if (VideoInputIndex != other.VideoInputIndex) return false;
                          if (VisibilityCriterion != other.VisibilityCriterion) return false;
                          return Equals(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override int GetHashCode() {
                          int hash = 1;
                          if (VideoInputIndex != 0) hash ^= VideoInputIndex.GetHashCode();
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion.Active) hash ^= VisibilityCriterion.GetHashCode();
                          if (_unknownFields != null) {
                            hash ^= _unknownFields.GetHashCode();
                          }
                          return hash;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public override string ToString() {
                          return pb::JsonFormatter.ToDiagnosticString(this);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void WriteTo(pb::CodedOutputStream output) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          output.WriteRawMessage(this);
                        #else
                          if (VideoInputIndex != 0) {
                            output.WriteRawTag(8);
                            output.WriteInt32(VideoInputIndex);
                          }
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion.Active) {
                            output.WriteRawTag(16);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(output);
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                          if (VideoInputIndex != 0) {
                            output.WriteRawTag(8);
                            output.WriteInt32(VideoInputIndex);
                          }
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion.Active) {
                            output.WriteRawTag(16);
                            output.WriteEnum((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            _unknownFields.WriteTo(ref output);
                          }
                        }
                        #endif

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public int CalculateSize() {
                          int size = 0;
                          if (VideoInputIndex != 0) {
                            size += 1 + pb::CodedOutputStream.ComputeInt32Size(VideoInputIndex);
                          }
                          if (VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion.Active) {
                            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VisibilityCriterion);
                          }
                          if (_unknownFields != null) {
                            size += _unknownFields.CalculateSize();
                          }
                          return size;
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(VideoInputVisibility other) {
                          if (other == null) {
                            return;
                          }
                          if (other.VideoInputIndex != 0) {
                            VideoInputIndex = other.VideoInputIndex;
                          }
                          if (other.VisibilityCriterion != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion.Active) {
                            VisibilityCriterion = other.VisibilityCriterion;
                          }
                          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                        }

                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public void MergeFrom(pb::CodedInputStream input) {
                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                          input.ReadRawMessage(this);
                        #else
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                                break;
                              case 8: {
                                VideoInputIndex = input.ReadInt32();
                                break;
                              }
                              case 16: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        #endif
                        }

                        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                          uint tag;
                          while ((tag = input.ReadTag()) != 0) {
                            switch(tag) {
                              default:
                                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                                break;
                              case 8: {
                                VideoInputIndex = input.ReadInt32();
                                break;
                              }
                              case 16: {
                                VisibilityCriterion = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VisibilityLink.Types.Condition.Types.VideoInputVisibility.Types.VideoInputVisibilityCriterion) input.ReadEnum();
                                break;
                              }
                            }
                          }
                        }
                        #endif

                        #region Nested types
                        /// <summary>Container for nested types declared in the VideoInputVisibility message type.</summary>
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                        public static partial class Types {
                          public enum VideoInputVisibilityCriterion {
                            [pbr::OriginalName("VIDEO_INPUT_VISIBILITY_CRITERION_ACTIVE")] Active = 0,
                            [pbr::OriginalName("VIDEO_INPUT_VISIBILITY_CRITERION_INACTIVE")] Inactive = 1,
                          }

                        }
                        #endregion

                      }

                    }
                    #endregion

                  }

                }
                #endregion

              }

              public sealed partial class SlideText : pb::IMessage<SlideText>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<SlideText> _parser = new pb::MessageParser<SlideText>(() => new SlideText());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<SlideText> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[13]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideText() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideText(SlideText other) : this() {
                  sourceSlide_ = other.sourceSlide_;
                  sourceOption_ = other.sourceOption_;
                  preserveNotesFormat_ = other.preserveNotesFormat_;
                  nameToMatch_ = other.nameToMatch_;
                  elementTextTransform_ = other.elementTextTransform_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideText Clone() {
                  return new SlideText(this);
                }

                /// <summary>Field number for the "source_slide" field.</summary>
                public const int SourceSlideFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType sourceSlide_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType.CurrentSlide;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType SourceSlide {
                  get { return sourceSlide_; }
                  set {
                    sourceSlide_ = value;
                  }
                }

                /// <summary>Field number for the "source_option" field.</summary>
                public const int SourceOptionFieldNumber = 2;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption sourceOption_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption.Text;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption SourceOption {
                  get { return sourceOption_; }
                  set {
                    sourceOption_ = value;
                  }
                }

                /// <summary>Field number for the "preserve_notes_format" field.</summary>
                public const int PreserveNotesFormatFieldNumber = 3;
                private bool preserveNotesFormat_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool PreserveNotesFormat {
                  get { return preserveNotesFormat_; }
                  set {
                    preserveNotesFormat_ = value;
                  }
                }

                /// <summary>Field number for the "name_to_match" field.</summary>
                public const int NameToMatchFieldNumber = 4;
                private string nameToMatch_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string NameToMatch {
                  get { return nameToMatch_; }
                  set {
                    nameToMatch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "element_text_transform" field.</summary>
                public const int ElementTextTransformFieldNumber = 5;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption elementTextTransform_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption.None;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption ElementTextTransform {
                  get { return elementTextTransform_; }
                  set {
                    elementTextTransform_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as SlideText);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(SlideText other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (SourceSlide != other.SourceSlide) return false;
                  if (SourceOption != other.SourceOption) return false;
                  if (PreserveNotesFormat != other.PreserveNotesFormat) return false;
                  if (NameToMatch != other.NameToMatch) return false;
                  if (ElementTextTransform != other.ElementTextTransform) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType.CurrentSlide) hash ^= SourceSlide.GetHashCode();
                  if (SourceOption != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption.Text) hash ^= SourceOption.GetHashCode();
                  if (PreserveNotesFormat != false) hash ^= PreserveNotesFormat.GetHashCode();
                  if (NameToMatch.Length != 0) hash ^= NameToMatch.GetHashCode();
                  if (ElementTextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption.None) hash ^= ElementTextTransform.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SourceSlide);
                  }
                  if (SourceOption != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption.Text) {
                    output.WriteRawTag(16);
                    output.WriteEnum((int) SourceOption);
                  }
                  if (PreserveNotesFormat != false) {
                    output.WriteRawTag(24);
                    output.WriteBool(PreserveNotesFormat);
                  }
                  if (NameToMatch.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(NameToMatch);
                  }
                  if (ElementTextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption.None) {
                    output.WriteRawTag(40);
                    output.WriteEnum((int) ElementTextTransform);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SourceSlide);
                  }
                  if (SourceOption != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption.Text) {
                    output.WriteRawTag(16);
                    output.WriteEnum((int) SourceOption);
                  }
                  if (PreserveNotesFormat != false) {
                    output.WriteRawTag(24);
                    output.WriteBool(PreserveNotesFormat);
                  }
                  if (NameToMatch.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(NameToMatch);
                  }
                  if (ElementTextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption.None) {
                    output.WriteRawTag(40);
                    output.WriteEnum((int) ElementTextTransform);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType.CurrentSlide) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceSlide);
                  }
                  if (SourceOption != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption.Text) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceOption);
                  }
                  if (PreserveNotesFormat != false) {
                    size += 1 + 1;
                  }
                  if (NameToMatch.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(NameToMatch);
                  }
                  if (ElementTextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption.None) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ElementTextTransform);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(SlideText other) {
                  if (other == null) {
                    return;
                  }
                  if (other.SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType.CurrentSlide) {
                    SourceSlide = other.SourceSlide;
                  }
                  if (other.SourceOption != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption.Text) {
                    SourceOption = other.SourceOption;
                  }
                  if (other.PreserveNotesFormat != false) {
                    PreserveNotesFormat = other.PreserveNotesFormat;
                  }
                  if (other.NameToMatch.Length != 0) {
                    NameToMatch = other.NameToMatch;
                  }
                  if (other.ElementTextTransform != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption.None) {
                    ElementTextTransform = other.ElementTextTransform;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        SourceSlide = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType) input.ReadEnum();
                        break;
                      }
                      case 16: {
                        SourceOption = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption) input.ReadEnum();
                        break;
                      }
                      case 24: {
                        PreserveNotesFormat = input.ReadBool();
                        break;
                      }
                      case 34: {
                        NameToMatch = input.ReadString();
                        break;
                      }
                      case 40: {
                        ElementTextTransform = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        SourceSlide = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.SlideSourceType) input.ReadEnum();
                        break;
                      }
                      case 16: {
                        SourceOption = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextSourceOption) input.ReadEnum();
                        break;
                      }
                      case 24: {
                        PreserveNotesFormat = input.ReadBool();
                        break;
                      }
                      case 34: {
                        NameToMatch = input.ReadString();
                        break;
                      }
                      case 40: {
                        ElementTextTransform = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideText.Types.TextTransformOption) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the SlideText message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum SlideSourceType {
                    [pbr::OriginalName("SLIDE_SOURCE_TYPE_CURRENT_SLIDE")] CurrentSlide = 0,
                    [pbr::OriginalName("SLIDE_SOURCE_TYPE_NEXT_SLIDE")] NextSlide = 1,
                  }

                  public enum TextSourceOption {
                    [pbr::OriginalName("TEXT_SOURCE_OPTION_TEXT")] Text = 0,
                    [pbr::OriginalName("TEXT_SOURCE_OPTION_NOTES")] Notes = 1,
                    [pbr::OriginalName("TEXT_SOURCE_OPTION_ELEMENT_MATCHING_NAME")] ElementMatchingName = 2,
                  }

                  public enum TextTransformOption {
                    [pbr::OriginalName("TEXT_TRANSFORM_OPTION_NONE")] None = 0,
                    [pbr::OriginalName("TEXT_TRANSFORM_OPTION_REMOVE_LINE_RETURNS")] RemoveLineReturns = 1,
                    [pbr::OriginalName("TEXT_TRANSFORM_OPTION_ONE_WORD_PER_LINE")] OneWordPerLine = 2,
                    [pbr::OriginalName("TEXT_TRANSFORM_OPTION_ONE_CHARACTER_PER_LINE")] OneCharacterPerLine = 3,
                  }

                }
                #endregion

              }

              public sealed partial class SlideImage : pb::IMessage<SlideImage>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<SlideImage> _parser = new pb::MessageParser<SlideImage>(() => new SlideImage());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<SlideImage> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[14]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideImage() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideImage(SlideImage other) : this() {
                  sourceSlide_ = other.sourceSlide_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideImage Clone() {
                  return new SlideImage(this);
                }

                /// <summary>Field number for the "source_slide" field.</summary>
                public const int SourceSlideFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType sourceSlide_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType.CurrentSlide;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType SourceSlide {
                  get { return sourceSlide_; }
                  set {
                    sourceSlide_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as SlideImage);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(SlideImage other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (SourceSlide != other.SourceSlide) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType.CurrentSlide) hash ^= SourceSlide.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SourceSlide);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SourceSlide);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType.CurrentSlide) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceSlide);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(SlideImage other) {
                  if (other == null) {
                    return;
                  }
                  if (other.SourceSlide != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType.CurrentSlide) {
                    SourceSlide = other.SourceSlide;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        SourceSlide = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        SourceSlide = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideImage.Types.SlideSourceType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the SlideImage message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum SlideSourceType {
                    [pbr::OriginalName("SLIDE_SOURCE_TYPE_CURRENT_SLIDE")] CurrentSlide = 0,
                    [pbr::OriginalName("SLIDE_SOURCE_TYPE_NEXT_SLIDE")] NextSlide = 1,
                  }

                }
                #endregion

              }

              public sealed partial class StageMessage : pb::IMessage<StageMessage>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<StageMessage> _parser = new pb::MessageParser<StageMessage>(() => new StageMessage());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<StageMessage> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[15]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public StageMessage() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public StageMessage(StageMessage other) : this() {
                  shouldFlash_ = other.shouldFlash_;
                  flashColor_ = other.flashColor_ != null ? other.flashColor_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public StageMessage Clone() {
                  return new StageMessage(this);
                }

                /// <summary>Field number for the "should_flash" field.</summary>
                public const int ShouldFlashFieldNumber = 1;
                private bool shouldFlash_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool ShouldFlash {
                  get { return shouldFlash_; }
                  set {
                    shouldFlash_ = value;
                  }
                }

                /// <summary>Field number for the "flash_color" field.</summary>
                public const int FlashColorFieldNumber = 2;
                private global::Rv.Data.Color flashColor_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Color FlashColor {
                  get { return flashColor_; }
                  set {
                    flashColor_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as StageMessage);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(StageMessage other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (ShouldFlash != other.ShouldFlash) return false;
                  if (!object.Equals(FlashColor, other.FlashColor)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (ShouldFlash != false) hash ^= ShouldFlash.GetHashCode();
                  if (flashColor_ != null) hash ^= FlashColor.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (ShouldFlash != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(ShouldFlash);
                  }
                  if (flashColor_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(FlashColor);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (ShouldFlash != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(ShouldFlash);
                  }
                  if (flashColor_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(FlashColor);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (ShouldFlash != false) {
                    size += 1 + 1;
                  }
                  if (flashColor_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(FlashColor);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(StageMessage other) {
                  if (other == null) {
                    return;
                  }
                  if (other.ShouldFlash != false) {
                    ShouldFlash = other.ShouldFlash;
                  }
                  if (other.flashColor_ != null) {
                    if (flashColor_ == null) {
                      FlashColor = new global::Rv.Data.Color();
                    }
                    FlashColor.MergeFrom(other.FlashColor);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        ShouldFlash = input.ReadBool();
                        break;
                      }
                      case 18: {
                        if (flashColor_ == null) {
                          FlashColor = new global::Rv.Data.Color();
                        }
                        input.ReadMessage(FlashColor);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        ShouldFlash = input.ReadBool();
                        break;
                      }
                      case 18: {
                        if (flashColor_ == null) {
                          FlashColor = new global::Rv.Data.Color();
                        }
                        input.ReadMessage(FlashColor);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class VideoCountdown : pb::IMessage<VideoCountdown>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<VideoCountdown> _parser = new pb::MessageParser<VideoCountdown>(() => new VideoCountdown());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<VideoCountdown> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[16]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public VideoCountdown() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public VideoCountdown(VideoCountdown other) : this() {
                  timerFormat_ = other.timerFormat_ != null ? other.timerFormat_.Clone() : null;
                  timerFormatString_ = other.timerFormatString_;
                  colorTriggers_ = other.colorTriggers_.Clone();
                  ignoreLoopingVideos_ = other.ignoreLoopingVideos_;
                  videoCountdownSource_ = other.videoCountdownSource_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public VideoCountdown Clone() {
                  return new VideoCountdown(this);
                }

                /// <summary>Field number for the "timer_format" field.</summary>
                public const int TimerFormatFieldNumber = 1;
                private global::Rv.Data.Timer.Types.Format timerFormat_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Timer.Types.Format TimerFormat {
                  get { return timerFormat_; }
                  set {
                    timerFormat_ = value;
                  }
                }

                /// <summary>Field number for the "timer_format_string" field.</summary>
                public const int TimerFormatStringFieldNumber = 2;
                private string timerFormatString_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string TimerFormatString {
                  get { return timerFormatString_; }
                  set {
                    timerFormatString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "color_triggers" field.</summary>
                public const int ColorTriggersFieldNumber = 3;
                private static readonly pb::FieldCodec<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger> _repeated_colorTriggers_codec
                    = pb::FieldCodec.ForMessage(26, global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger.Parser);
                private readonly pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger> colorTriggers_ = new pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger> ColorTriggers {
                  get { return colorTriggers_; }
                }

                /// <summary>Field number for the "ignore_looping_videos" field.</summary>
                public const int IgnoreLoopingVideosFieldNumber = 4;
                private bool ignoreLoopingVideos_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool IgnoreLoopingVideos {
                  get { return ignoreLoopingVideos_; }
                  set {
                    ignoreLoopingVideos_ = value;
                  }
                }

                /// <summary>Field number for the "video_countdown_source" field.</summary>
                public const int VideoCountdownSourceFieldNumber = 5;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource videoCountdownSource_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource.Presentation;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource VideoCountdownSource {
                  get { return videoCountdownSource_; }
                  set {
                    videoCountdownSource_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as VideoCountdown);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(VideoCountdown other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(TimerFormat, other.TimerFormat)) return false;
                  if (TimerFormatString != other.TimerFormatString) return false;
                  if(!colorTriggers_.Equals(other.colorTriggers_)) return false;
                  if (IgnoreLoopingVideos != other.IgnoreLoopingVideos) return false;
                  if (VideoCountdownSource != other.VideoCountdownSource) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (timerFormat_ != null) hash ^= TimerFormat.GetHashCode();
                  if (TimerFormatString.Length != 0) hash ^= TimerFormatString.GetHashCode();
                  hash ^= colorTriggers_.GetHashCode();
                  if (IgnoreLoopingVideos != false) hash ^= IgnoreLoopingVideos.GetHashCode();
                  if (VideoCountdownSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource.Presentation) hash ^= VideoCountdownSource.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (timerFormat_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(TimerFormat);
                  }
                  if (TimerFormatString.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TimerFormatString);
                  }
                  colorTriggers_.WriteTo(output, _repeated_colorTriggers_codec);
                  if (IgnoreLoopingVideos != false) {
                    output.WriteRawTag(32);
                    output.WriteBool(IgnoreLoopingVideos);
                  }
                  if (VideoCountdownSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource.Presentation) {
                    output.WriteRawTag(40);
                    output.WriteEnum((int) VideoCountdownSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (timerFormat_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(TimerFormat);
                  }
                  if (TimerFormatString.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TimerFormatString);
                  }
                  colorTriggers_.WriteTo(ref output, _repeated_colorTriggers_codec);
                  if (IgnoreLoopingVideos != false) {
                    output.WriteRawTag(32);
                    output.WriteBool(IgnoreLoopingVideos);
                  }
                  if (VideoCountdownSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource.Presentation) {
                    output.WriteRawTag(40);
                    output.WriteEnum((int) VideoCountdownSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (timerFormat_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimerFormat);
                  }
                  if (TimerFormatString.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TimerFormatString);
                  }
                  size += colorTriggers_.CalculateSize(_repeated_colorTriggers_codec);
                  if (IgnoreLoopingVideos != false) {
                    size += 1 + 1;
                  }
                  if (VideoCountdownSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource.Presentation) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VideoCountdownSource);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(VideoCountdown other) {
                  if (other == null) {
                    return;
                  }
                  if (other.timerFormat_ != null) {
                    if (timerFormat_ == null) {
                      TimerFormat = new global::Rv.Data.Timer.Types.Format();
                    }
                    TimerFormat.MergeFrom(other.TimerFormat);
                  }
                  if (other.TimerFormatString.Length != 0) {
                    TimerFormatString = other.TimerFormatString;
                  }
                  colorTriggers_.Add(other.colorTriggers_);
                  if (other.IgnoreLoopingVideos != false) {
                    IgnoreLoopingVideos = other.IgnoreLoopingVideos;
                  }
                  if (other.VideoCountdownSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource.Presentation) {
                    VideoCountdownSource = other.VideoCountdownSource;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (timerFormat_ == null) {
                          TimerFormat = new global::Rv.Data.Timer.Types.Format();
                        }
                        input.ReadMessage(TimerFormat);
                        break;
                      }
                      case 18: {
                        TimerFormatString = input.ReadString();
                        break;
                      }
                      case 26: {
                        colorTriggers_.AddEntriesFrom(input, _repeated_colorTriggers_codec);
                        break;
                      }
                      case 32: {
                        IgnoreLoopingVideos = input.ReadBool();
                        break;
                      }
                      case 40: {
                        VideoCountdownSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (timerFormat_ == null) {
                          TimerFormat = new global::Rv.Data.Timer.Types.Format();
                        }
                        input.ReadMessage(TimerFormat);
                        break;
                      }
                      case 18: {
                        TimerFormatString = input.ReadString();
                        break;
                      }
                      case 26: {
                        colorTriggers_.AddEntriesFrom(ref input, _repeated_colorTriggers_codec);
                        break;
                      }
                      case 32: {
                        IgnoreLoopingVideos = input.ReadBool();
                        break;
                      }
                      case 40: {
                        VideoCountdownSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.VideoCountdown.Types.VideoCountdownSource) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the VideoCountdown message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum VideoCountdownSource {
                    [pbr::OriginalName("VIDEO_COUNTDOWN_SOURCE_PRESENTATION")] Presentation = 0,
                    [pbr::OriginalName("VIDEO_COUNTDOWN_SOURCE_ANNOUNCEMENT")] Announcement = 1,
                  }

                }
                #endregion

              }

              public sealed partial class AudioCountdown : pb::IMessage<AudioCountdown>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<AudioCountdown> _parser = new pb::MessageParser<AudioCountdown>(() => new AudioCountdown());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<AudioCountdown> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[17]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AudioCountdown() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AudioCountdown(AudioCountdown other) : this() {
                  timerFormat_ = other.timerFormat_ != null ? other.timerFormat_.Clone() : null;
                  timerFormatString_ = other.timerFormatString_;
                  colorTriggers_ = other.colorTriggers_.Clone();
                  ignoreLoopingAudio_ = other.ignoreLoopingAudio_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AudioCountdown Clone() {
                  return new AudioCountdown(this);
                }

                /// <summary>Field number for the "timer_format" field.</summary>
                public const int TimerFormatFieldNumber = 1;
                private global::Rv.Data.Timer.Types.Format timerFormat_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Timer.Types.Format TimerFormat {
                  get { return timerFormat_; }
                  set {
                    timerFormat_ = value;
                  }
                }

                /// <summary>Field number for the "timer_format_string" field.</summary>
                public const int TimerFormatStringFieldNumber = 2;
                private string timerFormatString_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string TimerFormatString {
                  get { return timerFormatString_; }
                  set {
                    timerFormatString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "color_triggers" field.</summary>
                public const int ColorTriggersFieldNumber = 3;
                private static readonly pb::FieldCodec<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger> _repeated_colorTriggers_codec
                    = pb::FieldCodec.ForMessage(26, global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger.Parser);
                private readonly pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger> colorTriggers_ = new pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger>();
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public pbc::RepeatedField<global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.ColorTrigger> ColorTriggers {
                  get { return colorTriggers_; }
                }

                /// <summary>Field number for the "ignore_looping_audio" field.</summary>
                public const int IgnoreLoopingAudioFieldNumber = 4;
                private bool ignoreLoopingAudio_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool IgnoreLoopingAudio {
                  get { return ignoreLoopingAudio_; }
                  set {
                    ignoreLoopingAudio_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as AudioCountdown);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(AudioCountdown other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(TimerFormat, other.TimerFormat)) return false;
                  if (TimerFormatString != other.TimerFormatString) return false;
                  if(!colorTriggers_.Equals(other.colorTriggers_)) return false;
                  if (IgnoreLoopingAudio != other.IgnoreLoopingAudio) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (timerFormat_ != null) hash ^= TimerFormat.GetHashCode();
                  if (TimerFormatString.Length != 0) hash ^= TimerFormatString.GetHashCode();
                  hash ^= colorTriggers_.GetHashCode();
                  if (IgnoreLoopingAudio != false) hash ^= IgnoreLoopingAudio.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (timerFormat_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(TimerFormat);
                  }
                  if (TimerFormatString.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TimerFormatString);
                  }
                  colorTriggers_.WriteTo(output, _repeated_colorTriggers_codec);
                  if (IgnoreLoopingAudio != false) {
                    output.WriteRawTag(32);
                    output.WriteBool(IgnoreLoopingAudio);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (timerFormat_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(TimerFormat);
                  }
                  if (TimerFormatString.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TimerFormatString);
                  }
                  colorTriggers_.WriteTo(ref output, _repeated_colorTriggers_codec);
                  if (IgnoreLoopingAudio != false) {
                    output.WriteRawTag(32);
                    output.WriteBool(IgnoreLoopingAudio);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (timerFormat_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimerFormat);
                  }
                  if (TimerFormatString.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TimerFormatString);
                  }
                  size += colorTriggers_.CalculateSize(_repeated_colorTriggers_codec);
                  if (IgnoreLoopingAudio != false) {
                    size += 1 + 1;
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(AudioCountdown other) {
                  if (other == null) {
                    return;
                  }
                  if (other.timerFormat_ != null) {
                    if (timerFormat_ == null) {
                      TimerFormat = new global::Rv.Data.Timer.Types.Format();
                    }
                    TimerFormat.MergeFrom(other.TimerFormat);
                  }
                  if (other.TimerFormatString.Length != 0) {
                    TimerFormatString = other.TimerFormatString;
                  }
                  colorTriggers_.Add(other.colorTriggers_);
                  if (other.IgnoreLoopingAudio != false) {
                    IgnoreLoopingAudio = other.IgnoreLoopingAudio;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (timerFormat_ == null) {
                          TimerFormat = new global::Rv.Data.Timer.Types.Format();
                        }
                        input.ReadMessage(TimerFormat);
                        break;
                      }
                      case 18: {
                        TimerFormatString = input.ReadString();
                        break;
                      }
                      case 26: {
                        colorTriggers_.AddEntriesFrom(input, _repeated_colorTriggers_codec);
                        break;
                      }
                      case 32: {
                        IgnoreLoopingAudio = input.ReadBool();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (timerFormat_ == null) {
                          TimerFormat = new global::Rv.Data.Timer.Types.Format();
                        }
                        input.ReadMessage(TimerFormat);
                        break;
                      }
                      case 18: {
                        TimerFormatString = input.ReadString();
                        break;
                      }
                      case 26: {
                        colorTriggers_.AddEntriesFrom(ref input, _repeated_colorTriggers_codec);
                        break;
                      }
                      case 32: {
                        IgnoreLoopingAudio = input.ReadBool();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class GroupName : pb::IMessage<GroupName>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<GroupName> _parser = new pb::MessageParser<GroupName>(() => new GroupName());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<GroupName> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[18]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public GroupName() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public GroupName(GroupName other) : this() {
                  groupSource_ = other.groupSource_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public GroupName Clone() {
                  return new GroupName(this);
                }

                /// <summary>Field number for the "groupSource" field.</summary>
                public const int GroupSourceFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType groupSource_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType.CurrentSlide;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType GroupSource {
                  get { return groupSource_; }
                  set {
                    groupSource_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as GroupName);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(GroupName other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (GroupSource != other.GroupSource) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType.CurrentSlide) hash ^= GroupSource.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) GroupSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) GroupSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType.CurrentSlide) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupSource);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(GroupName other) {
                  if (other == null) {
                    return;
                  }
                  if (other.GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType.CurrentSlide) {
                    GroupSource = other.GroupSource;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        GroupSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        GroupSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupName.Types.GroupSourceType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the GroupName message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum GroupSourceType {
                    [pbr::OriginalName("GROUP_SOURCE_TYPE_CURRENT_SLIDE")] CurrentSlide = 0,
                    [pbr::OriginalName("GROUP_SOURCE_TYPE_NEXT_SLIDE")] NextSlide = 1,
                    [pbr::OriginalName("GROUP_SOURCE_TYPE_NEXT_GROUP")] NextGroup = 2,
                  }

                }
                #endregion

              }

              public sealed partial class GroupColor : pb::IMessage<GroupColor>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<GroupColor> _parser = new pb::MessageParser<GroupColor>(() => new GroupColor());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<GroupColor> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[19]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public GroupColor() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public GroupColor(GroupColor other) : this() {
                  groupSource_ = other.groupSource_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public GroupColor Clone() {
                  return new GroupColor(this);
                }

                /// <summary>Field number for the "groupSource" field.</summary>
                public const int GroupSourceFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType groupSource_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType.CurrentSlide;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType GroupSource {
                  get { return groupSource_; }
                  set {
                    groupSource_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as GroupColor);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(GroupColor other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (GroupSource != other.GroupSource) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType.CurrentSlide) hash ^= GroupSource.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) GroupSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) GroupSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType.CurrentSlide) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GroupSource);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(GroupColor other) {
                  if (other == null) {
                    return;
                  }
                  if (other.GroupSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType.CurrentSlide) {
                    GroupSource = other.GroupSource;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        GroupSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        GroupSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.GroupColor.Types.GroupSourceType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the GroupColor message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum GroupSourceType {
                    [pbr::OriginalName("GROUP_SOURCE_TYPE_CURRENT_SLIDE")] CurrentSlide = 0,
                    [pbr::OriginalName("GROUP_SOURCE_TYPE_NEXT_SLIDE")] NextSlide = 1,
                    [pbr::OriginalName("GROUP_SOURCE_TYPE_NEXT_GROUP")] NextGroup = 2,
                  }

                }
                #endregion

              }

              public sealed partial class SlideLabelText : pb::IMessage<SlideLabelText>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<SlideLabelText> _parser = new pb::MessageParser<SlideLabelText>(() => new SlideLabelText());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<SlideLabelText> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[20]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideLabelText() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideLabelText(SlideLabelText other) : this() {
                  slideLabelSource_ = other.slideLabelSource_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideLabelText Clone() {
                  return new SlideLabelText(this);
                }

                /// <summary>Field number for the "slide_label_source" field.</summary>
                public const int SlideLabelSourceFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource slideLabelSource_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource.CurrentSlide;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource SlideLabelSource {
                  get { return slideLabelSource_; }
                  set {
                    slideLabelSource_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as SlideLabelText);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(SlideLabelText other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (SlideLabelSource != other.SlideLabelSource) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource.CurrentSlide) hash ^= SlideLabelSource.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SlideLabelSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SlideLabelSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource.CurrentSlide) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SlideLabelSource);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(SlideLabelText other) {
                  if (other == null) {
                    return;
                  }
                  if (other.SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource.CurrentSlide) {
                    SlideLabelSource = other.SlideLabelSource;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        SlideLabelSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        SlideLabelSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelText.Types.SlideLabelSource) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the SlideLabelText message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum SlideLabelSource {
                    [pbr::OriginalName("SLIDE_LABEL_SOURCE_CURRENT_SLIDE")] CurrentSlide = 0,
                    [pbr::OriginalName("SLIDE_LABEL_SOURCE_NEXT_SLIDE")] NextSlide = 1,
                  }

                }
                #endregion

              }

              public sealed partial class SlideLabelColor : pb::IMessage<SlideLabelColor>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<SlideLabelColor> _parser = new pb::MessageParser<SlideLabelColor>(() => new SlideLabelColor());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<SlideLabelColor> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[21]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideLabelColor() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideLabelColor(SlideLabelColor other) : this() {
                  slideLabelSource_ = other.slideLabelSource_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideLabelColor Clone() {
                  return new SlideLabelColor(this);
                }

                /// <summary>Field number for the "slide_label_source" field.</summary>
                public const int SlideLabelSourceFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource slideLabelSource_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource.CurrentSlide;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource SlideLabelSource {
                  get { return slideLabelSource_; }
                  set {
                    slideLabelSource_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as SlideLabelColor);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(SlideLabelColor other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (SlideLabelSource != other.SlideLabelSource) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource.CurrentSlide) hash ^= SlideLabelSource.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SlideLabelSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource.CurrentSlide) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SlideLabelSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource.CurrentSlide) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SlideLabelSource);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(SlideLabelColor other) {
                  if (other == null) {
                    return;
                  }
                  if (other.SlideLabelSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource.CurrentSlide) {
                    SlideLabelSource = other.SlideLabelSource;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        SlideLabelSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        SlideLabelSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideLabelColor.Types.SlideLabelSource) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the SlideLabelColor message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum SlideLabelSource {
                    [pbr::OriginalName("SLIDE_LABEL_SOURCE_CURRENT_SLIDE")] CurrentSlide = 0,
                    [pbr::OriginalName("SLIDE_LABEL_SOURCE_NEXT_SLIDE")] NextSlide = 1,
                  }

                }
                #endregion

              }

              public sealed partial class PresentationNotes : pb::IMessage<PresentationNotes>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<PresentationNotes> _parser = new pb::MessageParser<PresentationNotes>(() => new PresentationNotes());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<PresentationNotes> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[22]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public PresentationNotes() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public PresentationNotes(PresentationNotes other) : this() {
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public PresentationNotes Clone() {
                  return new PresentationNotes(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as PresentationNotes);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(PresentationNotes other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(PresentationNotes other) {
                  if (other == null) {
                    return;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    }
                  }
                }
                #endif

              }

              public sealed partial class Presentation : pb::IMessage<Presentation>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<Presentation> _parser = new pb::MessageParser<Presentation>(() => new Presentation());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<Presentation> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[23]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Presentation() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Presentation(Presentation other) : this() {
                  presentationSource_ = other.presentationSource_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Presentation Clone() {
                  return new Presentation(this);
                }

                /// <summary>Field number for the "presentation_source" field.</summary>
                public const int PresentationSourceFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource presentationSource_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource.Presentation;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource PresentationSource {
                  get { return presentationSource_; }
                  set {
                    presentationSource_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as Presentation);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(Presentation other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (PresentationSource != other.PresentationSource) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (PresentationSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource.Presentation) hash ^= PresentationSource.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (PresentationSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource.Presentation) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) PresentationSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (PresentationSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource.Presentation) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) PresentationSource);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (PresentationSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource.Presentation) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PresentationSource);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(Presentation other) {
                  if (other == null) {
                    return;
                  }
                  if (other.PresentationSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource.Presentation) {
                    PresentationSource = other.PresentationSource;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        PresentationSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        PresentationSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.Presentation.Types.PresentationSource) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the Presentation message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum PresentationSource {
                    [pbr::OriginalName("PRESENTATION_SOURCE_PRESENTATION")] Presentation = 0,
                    [pbr::OriginalName("PRESENTATION_SOURCE_ANNOUNCEMENT")] Announcement = 1,
                  }

                }
                #endregion

              }

              public sealed partial class PlaylistItem : pb::IMessage<PlaylistItem>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<PlaylistItem> _parser = new pb::MessageParser<PlaylistItem>(() => new PlaylistItem());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<PlaylistItem> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[24]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public PlaylistItem() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public PlaylistItem(PlaylistItem other) : this() {
                  playlistItemSource_ = other.playlistItemSource_;
                  showArrangement_ = other.showArrangement_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public PlaylistItem Clone() {
                  return new PlaylistItem(this);
                }

                /// <summary>Field number for the "playlistItemSource" field.</summary>
                public const int PlaylistItemSourceFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType playlistItemSource_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType.Current;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType PlaylistItemSource {
                  get { return playlistItemSource_; }
                  set {
                    playlistItemSource_ = value;
                  }
                }

                /// <summary>Field number for the "showArrangement" field.</summary>
                public const int ShowArrangementFieldNumber = 2;
                private bool showArrangement_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool ShowArrangement {
                  get { return showArrangement_; }
                  set {
                    showArrangement_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as PlaylistItem);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(PlaylistItem other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (PlaylistItemSource != other.PlaylistItemSource) return false;
                  if (ShowArrangement != other.ShowArrangement) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (PlaylistItemSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType.Current) hash ^= PlaylistItemSource.GetHashCode();
                  if (ShowArrangement != false) hash ^= ShowArrangement.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (PlaylistItemSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType.Current) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) PlaylistItemSource);
                  }
                  if (ShowArrangement != false) {
                    output.WriteRawTag(16);
                    output.WriteBool(ShowArrangement);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (PlaylistItemSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType.Current) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) PlaylistItemSource);
                  }
                  if (ShowArrangement != false) {
                    output.WriteRawTag(16);
                    output.WriteBool(ShowArrangement);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (PlaylistItemSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType.Current) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlaylistItemSource);
                  }
                  if (ShowArrangement != false) {
                    size += 1 + 1;
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(PlaylistItem other) {
                  if (other == null) {
                    return;
                  }
                  if (other.PlaylistItemSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType.Current) {
                    PlaylistItemSource = other.PlaylistItemSource;
                  }
                  if (other.ShowArrangement != false) {
                    ShowArrangement = other.ShowArrangement;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        PlaylistItemSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType) input.ReadEnum();
                        break;
                      }
                      case 16: {
                        ShowArrangement = input.ReadBool();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        PlaylistItemSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.PlaylistItem.Types.PlaylistItemSourceType) input.ReadEnum();
                        break;
                      }
                      case 16: {
                        ShowArrangement = input.ReadBool();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the PlaylistItem message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum PlaylistItemSourceType {
                    [pbr::OriginalName("PLAYLIST_ITEM_SOURCE_TYPE_CURRENT")] Current = 0,
                    [pbr::OriginalName("PLAYLIST_ITEM_SOURCE_TYPE_NEXT")] Next = 1,
                    [pbr::OriginalName("PLAYLIST_ITEM_SOURCE_TYPE_CURRENT_HEADER")] CurrentHeader = 2,
                    [pbr::OriginalName("PLAYLIST_ITEM_SOURCE_TYPE_NEXT_HEADER")] NextHeader = 3,
                    [pbr::OriginalName("PLAYLIST_ITEM_SOURCE_TYPE_PARENT_PLAYLIST")] ParentPlaylist = 4,
                  }

                }
                #endregion

              }

              public sealed partial class AutoAdvanceTimeRemaining : pb::IMessage<AutoAdvanceTimeRemaining>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<AutoAdvanceTimeRemaining> _parser = new pb::MessageParser<AutoAdvanceTimeRemaining>(() => new AutoAdvanceTimeRemaining());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<AutoAdvanceTimeRemaining> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[25]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AutoAdvanceTimeRemaining() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AutoAdvanceTimeRemaining(AutoAdvanceTimeRemaining other) : this() {
                  autoAdvanceSource_ = other.autoAdvanceSource_;
                  timerFormat_ = other.timerFormat_ != null ? other.timerFormat_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public AutoAdvanceTimeRemaining Clone() {
                  return new AutoAdvanceTimeRemaining(this);
                }

                /// <summary>Field number for the "auto_advance_source" field.</summary>
                public const int AutoAdvanceSourceFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource autoAdvanceSource_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource.Presentation;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource AutoAdvanceSource {
                  get { return autoAdvanceSource_; }
                  set {
                    autoAdvanceSource_ = value;
                  }
                }

                /// <summary>Field number for the "timer_format" field.</summary>
                public const int TimerFormatFieldNumber = 2;
                private global::Rv.Data.Timer.Types.Format timerFormat_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Timer.Types.Format TimerFormat {
                  get { return timerFormat_; }
                  set {
                    timerFormat_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as AutoAdvanceTimeRemaining);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(AutoAdvanceTimeRemaining other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (AutoAdvanceSource != other.AutoAdvanceSource) return false;
                  if (!object.Equals(TimerFormat, other.TimerFormat)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (AutoAdvanceSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource.Presentation) hash ^= AutoAdvanceSource.GetHashCode();
                  if (timerFormat_ != null) hash ^= TimerFormat.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (AutoAdvanceSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource.Presentation) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) AutoAdvanceSource);
                  }
                  if (timerFormat_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(TimerFormat);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (AutoAdvanceSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource.Presentation) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) AutoAdvanceSource);
                  }
                  if (timerFormat_ != null) {
                    output.WriteRawTag(18);
                    output.WriteMessage(TimerFormat);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (AutoAdvanceSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource.Presentation) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AutoAdvanceSource);
                  }
                  if (timerFormat_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimerFormat);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(AutoAdvanceTimeRemaining other) {
                  if (other == null) {
                    return;
                  }
                  if (other.AutoAdvanceSource != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource.Presentation) {
                    AutoAdvanceSource = other.AutoAdvanceSource;
                  }
                  if (other.timerFormat_ != null) {
                    if (timerFormat_ == null) {
                      TimerFormat = new global::Rv.Data.Timer.Types.Format();
                    }
                    TimerFormat.MergeFrom(other.TimerFormat);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        AutoAdvanceSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource) input.ReadEnum();
                        break;
                      }
                      case 18: {
                        if (timerFormat_ == null) {
                          TimerFormat = new global::Rv.Data.Timer.Types.Format();
                        }
                        input.ReadMessage(TimerFormat);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        AutoAdvanceSource = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.AutoAdvanceTimeRemaining.Types.AutoAdvanceSource) input.ReadEnum();
                        break;
                      }
                      case 18: {
                        if (timerFormat_ == null) {
                          TimerFormat = new global::Rv.Data.Timer.Types.Format();
                        }
                        input.ReadMessage(TimerFormat);
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the AutoAdvanceTimeRemaining message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum AutoAdvanceSource {
                    [pbr::OriginalName("AUTO_ADVANCE_SOURCE_PRESENTATION")] Presentation = 0,
                    [pbr::OriginalName("AUTO_ADVANCE_SOURCE_ANNOUNCEMENT")] Announcement = 1,
                  }

                }
                #endregion

              }

              public sealed partial class CaptureStatusText : pb::IMessage<CaptureStatusText>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<CaptureStatusText> _parser = new pb::MessageParser<CaptureStatusText>(() => new CaptureStatusText());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<CaptureStatusText> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[26]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public CaptureStatusText() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public CaptureStatusText(CaptureStatusText other) : this() {
                  switch (other.TextTypeCase) {
                    case TextTypeOneofCase.StatusText:
                      StatusText = other.StatusText.Clone();
                      break;
                    case TextTypeOneofCase.ElapsedTime:
                      ElapsedTime = other.ElapsedTime.Clone();
                      break;
                  }

                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public CaptureStatusText Clone() {
                  return new CaptureStatusText(this);
                }

                /// <summary>Field number for the "status_text" field.</summary>
                public const int StatusTextFieldNumber = 1;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.StatusText StatusText {
                  get { return textTypeCase_ == TextTypeOneofCase.StatusText ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.StatusText) textType_ : null; }
                  set {
                    textType_ = value;
                    textTypeCase_ = value == null ? TextTypeOneofCase.None : TextTypeOneofCase.StatusText;
                  }
                }

                /// <summary>Field number for the "elapsed_time" field.</summary>
                public const int ElapsedTimeFieldNumber = 2;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.ElapsedTime ElapsedTime {
                  get { return textTypeCase_ == TextTypeOneofCase.ElapsedTime ? (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.ElapsedTime) textType_ : null; }
                  set {
                    textType_ = value;
                    textTypeCase_ = value == null ? TextTypeOneofCase.None : TextTypeOneofCase.ElapsedTime;
                  }
                }

                private object textType_;
                /// <summary>Enum of possible cases for the "TextType" oneof.</summary>
                public enum TextTypeOneofCase {
                  None = 0,
                  StatusText = 1,
                  ElapsedTime = 2,
                }
                private TextTypeOneofCase textTypeCase_ = TextTypeOneofCase.None;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public TextTypeOneofCase TextTypeCase {
                  get { return textTypeCase_; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void ClearTextType() {
                  textTypeCase_ = TextTypeOneofCase.None;
                  textType_ = null;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as CaptureStatusText);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(CaptureStatusText other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(StatusText, other.StatusText)) return false;
                  if (!object.Equals(ElapsedTime, other.ElapsedTime)) return false;
                  if (TextTypeCase != other.TextTypeCase) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (textTypeCase_ == TextTypeOneofCase.StatusText) hash ^= StatusText.GetHashCode();
                  if (textTypeCase_ == TextTypeOneofCase.ElapsedTime) hash ^= ElapsedTime.GetHashCode();
                  hash ^= (int) textTypeCase_;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (textTypeCase_ == TextTypeOneofCase.StatusText) {
                    output.WriteRawTag(10);
                    output.WriteMessage(StatusText);
                  }
                  if (textTypeCase_ == TextTypeOneofCase.ElapsedTime) {
                    output.WriteRawTag(18);
                    output.WriteMessage(ElapsedTime);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (textTypeCase_ == TextTypeOneofCase.StatusText) {
                    output.WriteRawTag(10);
                    output.WriteMessage(StatusText);
                  }
                  if (textTypeCase_ == TextTypeOneofCase.ElapsedTime) {
                    output.WriteRawTag(18);
                    output.WriteMessage(ElapsedTime);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (textTypeCase_ == TextTypeOneofCase.StatusText) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusText);
                  }
                  if (textTypeCase_ == TextTypeOneofCase.ElapsedTime) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(ElapsedTime);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(CaptureStatusText other) {
                  if (other == null) {
                    return;
                  }
                  switch (other.TextTypeCase) {
                    case TextTypeOneofCase.StatusText:
                      if (StatusText == null) {
                        StatusText = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.StatusText();
                      }
                      StatusText.MergeFrom(other.StatusText);
                      break;
                    case TextTypeOneofCase.ElapsedTime:
                      if (ElapsedTime == null) {
                        ElapsedTime = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.ElapsedTime();
                      }
                      ElapsedTime.MergeFrom(other.ElapsedTime);
                      break;
                  }

                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.StatusText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.StatusText();
                        if (textTypeCase_ == TextTypeOneofCase.StatusText) {
                          subBuilder.MergeFrom(StatusText);
                        }
                        input.ReadMessage(subBuilder);
                        StatusText = subBuilder;
                        break;
                      }
                      case 18: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.ElapsedTime subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.ElapsedTime();
                        if (textTypeCase_ == TextTypeOneofCase.ElapsedTime) {
                          subBuilder.MergeFrom(ElapsedTime);
                        }
                        input.ReadMessage(subBuilder);
                        ElapsedTime = subBuilder;
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.StatusText subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.StatusText();
                        if (textTypeCase_ == TextTypeOneofCase.StatusText) {
                          subBuilder.MergeFrom(StatusText);
                        }
                        input.ReadMessage(subBuilder);
                        StatusText = subBuilder;
                        break;
                      }
                      case 18: {
                        global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.ElapsedTime subBuilder = new global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Types.ElapsedTime();
                        if (textTypeCase_ == TextTypeOneofCase.ElapsedTime) {
                          subBuilder.MergeFrom(ElapsedTime);
                        }
                        input.ReadMessage(subBuilder);
                        ElapsedTime = subBuilder;
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the CaptureStatusText message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public sealed partial class StatusText : pb::IMessage<StatusText>
                  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      , pb::IBufferMessage
                  #endif
                  {
                    private static readonly pb::MessageParser<StatusText> _parser = new pb::MessageParser<StatusText>(() => new StatusText());
                    private pb::UnknownFieldSet _unknownFields;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pb::MessageParser<StatusText> Parser { get { return _parser; } }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pbr::MessageDescriptor Descriptor {
                      get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Descriptor.NestedTypes[0]; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    pbr::MessageDescriptor pb::IMessage.Descriptor {
                      get { return Descriptor; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public StatusText() {
                      OnConstruction();
                    }

                    partial void OnConstruction();

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public StatusText(StatusText other) : this() {
                      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public StatusText Clone() {
                      return new StatusText(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override bool Equals(object other) {
                      return Equals(other as StatusText);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public bool Equals(StatusText other) {
                      if (ReferenceEquals(other, null)) {
                        return false;
                      }
                      if (ReferenceEquals(other, this)) {
                        return true;
                      }
                      return Equals(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override int GetHashCode() {
                      int hash = 1;
                      if (_unknownFields != null) {
                        hash ^= _unknownFields.GetHashCode();
                      }
                      return hash;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override string ToString() {
                      return pb::JsonFormatter.ToDiagnosticString(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void WriteTo(pb::CodedOutputStream output) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      output.WriteRawMessage(this);
                    #else
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(output);
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(ref output);
                      }
                    }
                    #endif

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public int CalculateSize() {
                      int size = 0;
                      if (_unknownFields != null) {
                        size += _unknownFields.CalculateSize();
                      }
                      return size;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(StatusText other) {
                      if (other == null) {
                        return;
                      }
                      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(pb::CodedInputStream input) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      input.ReadRawMessage(this);
                    #else
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                            break;
                        }
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                            break;
                        }
                      }
                    }
                    #endif

                  }

                  public sealed partial class ElapsedTime : pb::IMessage<ElapsedTime>
                  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      , pb::IBufferMessage
                  #endif
                  {
                    private static readonly pb::MessageParser<ElapsedTime> _parser = new pb::MessageParser<ElapsedTime>(() => new ElapsedTime());
                    private pb::UnknownFieldSet _unknownFields;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pb::MessageParser<ElapsedTime> Parser { get { return _parser; } }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public static pbr::MessageDescriptor Descriptor {
                      get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.CaptureStatusText.Descriptor.NestedTypes[1]; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    pbr::MessageDescriptor pb::IMessage.Descriptor {
                      get { return Descriptor; }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public ElapsedTime() {
                      OnConstruction();
                    }

                    partial void OnConstruction();

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public ElapsedTime(ElapsedTime other) : this() {
                      timerFormat_ = other.timerFormat_ != null ? other.timerFormat_.Clone() : null;
                      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public ElapsedTime Clone() {
                      return new ElapsedTime(this);
                    }

                    /// <summary>Field number for the "timer_format" field.</summary>
                    public const int TimerFormatFieldNumber = 1;
                    private global::Rv.Data.Timer.Types.Format timerFormat_;
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public global::Rv.Data.Timer.Types.Format TimerFormat {
                      get { return timerFormat_; }
                      set {
                        timerFormat_ = value;
                      }
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override bool Equals(object other) {
                      return Equals(other as ElapsedTime);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public bool Equals(ElapsedTime other) {
                      if (ReferenceEquals(other, null)) {
                        return false;
                      }
                      if (ReferenceEquals(other, this)) {
                        return true;
                      }
                      if (!object.Equals(TimerFormat, other.TimerFormat)) return false;
                      return Equals(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override int GetHashCode() {
                      int hash = 1;
                      if (timerFormat_ != null) hash ^= TimerFormat.GetHashCode();
                      if (_unknownFields != null) {
                        hash ^= _unknownFields.GetHashCode();
                      }
                      return hash;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public override string ToString() {
                      return pb::JsonFormatter.ToDiagnosticString(this);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void WriteTo(pb::CodedOutputStream output) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      output.WriteRawMessage(this);
                    #else
                      if (timerFormat_ != null) {
                        output.WriteRawTag(10);
                        output.WriteMessage(TimerFormat);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(output);
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                      if (timerFormat_ != null) {
                        output.WriteRawTag(10);
                        output.WriteMessage(TimerFormat);
                      }
                      if (_unknownFields != null) {
                        _unknownFields.WriteTo(ref output);
                      }
                    }
                    #endif

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public int CalculateSize() {
                      int size = 0;
                      if (timerFormat_ != null) {
                        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimerFormat);
                      }
                      if (_unknownFields != null) {
                        size += _unknownFields.CalculateSize();
                      }
                      return size;
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(ElapsedTime other) {
                      if (other == null) {
                        return;
                      }
                      if (other.timerFormat_ != null) {
                        if (timerFormat_ == null) {
                          TimerFormat = new global::Rv.Data.Timer.Types.Format();
                        }
                        TimerFormat.MergeFrom(other.TimerFormat);
                      }
                      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                    }

                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    public void MergeFrom(pb::CodedInputStream input) {
                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                      input.ReadRawMessage(this);
                    #else
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                            break;
                          case 10: {
                            if (timerFormat_ == null) {
                              TimerFormat = new global::Rv.Data.Timer.Types.Format();
                            }
                            input.ReadMessage(TimerFormat);
                            break;
                          }
                        }
                      }
                    #endif
                    }

                    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                      uint tag;
                      while ((tag = input.ReadTag()) != 0) {
                        switch(tag) {
                          default:
                            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                            break;
                          case 10: {
                            if (timerFormat_ == null) {
                              TimerFormat = new global::Rv.Data.Timer.Types.Format();
                            }
                            input.ReadMessage(TimerFormat);
                            break;
                          }
                        }
                      }
                    }
                    #endif

                  }

                }
                #endregion

              }

              public sealed partial class CaptureStatusColor : pb::IMessage<CaptureStatusColor>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<CaptureStatusColor> _parser = new pb::MessageParser<CaptureStatusColor>(() => new CaptureStatusColor());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<CaptureStatusColor> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[27]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public CaptureStatusColor() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public CaptureStatusColor(CaptureStatusColor other) : this() {
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public CaptureStatusColor Clone() {
                  return new CaptureStatusColor(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as CaptureStatusColor);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(CaptureStatusColor other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(CaptureStatusColor other) {
                  if (other == null) {
                    return;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    }
                  }
                }
                #endif

              }

              public sealed partial class SlideCount : pb::IMessage<SlideCount>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<SlideCount> _parser = new pb::MessageParser<SlideCount>(() => new SlideCount());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<SlideCount> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[28]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideCount() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideCount(SlideCount other) : this() {
                  slideCountSourceType_ = other.slideCountSourceType_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public SlideCount Clone() {
                  return new SlideCount(this);
                }

                /// <summary>Field number for the "slideCountSourceType" field.</summary>
                public const int SlideCountSourceTypeFieldNumber = 1;
                private global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType slideCountSourceType_ = global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType.Current;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType SlideCountSourceType {
                  get { return slideCountSourceType_; }
                  set {
                    slideCountSourceType_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as SlideCount);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(SlideCount other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (SlideCountSourceType != other.SlideCountSourceType) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (SlideCountSourceType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType.Current) hash ^= SlideCountSourceType.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (SlideCountSourceType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType.Current) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SlideCountSourceType);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (SlideCountSourceType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType.Current) {
                    output.WriteRawTag(8);
                    output.WriteEnum((int) SlideCountSourceType);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (SlideCountSourceType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType.Current) {
                    size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SlideCountSourceType);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(SlideCount other) {
                  if (other == null) {
                    return;
                  }
                  if (other.SlideCountSourceType != global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType.Current) {
                    SlideCountSourceType = other.SlideCountSourceType;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        SlideCountSourceType = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        SlideCountSourceType = (global::Rv.Data.Slide.Types.Element.Types.DataLink.Types.SlideCount.Types.SlideCountSourceType) input.ReadEnum();
                        break;
                      }
                    }
                  }
                }
                #endif

                #region Nested types
                /// <summary>Container for nested types declared in the SlideCount message type.</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static partial class Types {
                  public enum SlideCountSourceType {
                    [pbr::OriginalName("SLIDE_COUNT_SOURCE_TYPE_CURRENT")] Current = 0,
                    [pbr::OriginalName("SLIDE_COUNT_SOURCE_TYPE_REMAINING")] Remaining = 1,
                    [pbr::OriginalName("SLIDE_COUNT_SOURCE_TYPE_TOTAL")] Total = 2,
                  }

                }
                #endregion

              }

              public sealed partial class ChordProChart : pb::IMessage<ChordProChart>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<ChordProChart> _parser = new pb::MessageParser<ChordProChart>(() => new ChordProChart());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<ChordProChart> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Slide.Types.Element.Types.DataLink.Descriptor.NestedTypes[29]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ChordProChart() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ChordProChart(ChordProChart other) : this() {
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ChordProChart Clone() {
                  return new ChordProChart(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as ChordProChart);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(ChordProChart other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(ChordProChart other) {
                  if (other == null) {
                    return;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

          public sealed partial class TextScroller : pb::IMessage<TextScroller>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<TextScroller> _parser = new pb::MessageParser<TextScroller>(() => new TextScroller());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<TextScroller> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Rv.Data.Slide.Types.Element.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public TextScroller() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public TextScroller(TextScroller other) : this() {
              shouldScroll_ = other.shouldScroll_;
              scrollRate_ = other.scrollRate_;
              shouldRepeat_ = other.shouldRepeat_;
              repeatDistance_ = other.repeatDistance_;
              scrollingDirection_ = other.scrollingDirection_;
              startsOffScreen_ = other.startsOffScreen_;
              fadeLeft_ = other.fadeLeft_;
              fadeRight_ = other.fadeRight_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public TextScroller Clone() {
              return new TextScroller(this);
            }

            /// <summary>Field number for the "should_scroll" field.</summary>
            public const int ShouldScrollFieldNumber = 1;
            private bool shouldScroll_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool ShouldScroll {
              get { return shouldScroll_; }
              set {
                shouldScroll_ = value;
              }
            }

            /// <summary>Field number for the "scroll_rate" field.</summary>
            public const int ScrollRateFieldNumber = 2;
            private double scrollRate_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double ScrollRate {
              get { return scrollRate_; }
              set {
                scrollRate_ = value;
              }
            }

            /// <summary>Field number for the "should_repeat" field.</summary>
            public const int ShouldRepeatFieldNumber = 3;
            private bool shouldRepeat_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool ShouldRepeat {
              get { return shouldRepeat_; }
              set {
                shouldRepeat_ = value;
              }
            }

            /// <summary>Field number for the "repeat_distance" field.</summary>
            public const int RepeatDistanceFieldNumber = 4;
            private double repeatDistance_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double RepeatDistance {
              get { return repeatDistance_; }
              set {
                repeatDistance_ = value;
              }
            }

            /// <summary>Field number for the "scrolling_direction" field.</summary>
            public const int ScrollingDirectionFieldNumber = 5;
            private global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction scrollingDirection_ = global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction.Left;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction ScrollingDirection {
              get { return scrollingDirection_; }
              set {
                scrollingDirection_ = value;
              }
            }

            /// <summary>Field number for the "starts_off_screen" field.</summary>
            public const int StartsOffScreenFieldNumber = 6;
            private bool startsOffScreen_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool StartsOffScreen {
              get { return startsOffScreen_; }
              set {
                startsOffScreen_ = value;
              }
            }

            /// <summary>Field number for the "fade_left" field.</summary>
            public const int FadeLeftFieldNumber = 7;
            private double fadeLeft_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double FadeLeft {
              get { return fadeLeft_; }
              set {
                fadeLeft_ = value;
              }
            }

            /// <summary>Field number for the "fade_right" field.</summary>
            public const int FadeRightFieldNumber = 8;
            private double fadeRight_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double FadeRight {
              get { return fadeRight_; }
              set {
                fadeRight_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as TextScroller);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(TextScroller other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (ShouldScroll != other.ShouldScroll) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ScrollRate, other.ScrollRate)) return false;
              if (ShouldRepeat != other.ShouldRepeat) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RepeatDistance, other.RepeatDistance)) return false;
              if (ScrollingDirection != other.ScrollingDirection) return false;
              if (StartsOffScreen != other.StartsOffScreen) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FadeLeft, other.FadeLeft)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FadeRight, other.FadeRight)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (ShouldScroll != false) hash ^= ShouldScroll.GetHashCode();
              if (ScrollRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ScrollRate);
              if (ShouldRepeat != false) hash ^= ShouldRepeat.GetHashCode();
              if (RepeatDistance != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RepeatDistance);
              if (ScrollingDirection != global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction.Left) hash ^= ScrollingDirection.GetHashCode();
              if (StartsOffScreen != false) hash ^= StartsOffScreen.GetHashCode();
              if (FadeLeft != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FadeLeft);
              if (FadeRight != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FadeRight);
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (ShouldScroll != false) {
                output.WriteRawTag(8);
                output.WriteBool(ShouldScroll);
              }
              if (ScrollRate != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(ScrollRate);
              }
              if (ShouldRepeat != false) {
                output.WriteRawTag(24);
                output.WriteBool(ShouldRepeat);
              }
              if (RepeatDistance != 0D) {
                output.WriteRawTag(33);
                output.WriteDouble(RepeatDistance);
              }
              if (ScrollingDirection != global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction.Left) {
                output.WriteRawTag(40);
                output.WriteEnum((int) ScrollingDirection);
              }
              if (StartsOffScreen != false) {
                output.WriteRawTag(48);
                output.WriteBool(StartsOffScreen);
              }
              if (FadeLeft != 0D) {
                output.WriteRawTag(57);
                output.WriteDouble(FadeLeft);
              }
              if (FadeRight != 0D) {
                output.WriteRawTag(65);
                output.WriteDouble(FadeRight);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (ShouldScroll != false) {
                output.WriteRawTag(8);
                output.WriteBool(ShouldScroll);
              }
              if (ScrollRate != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(ScrollRate);
              }
              if (ShouldRepeat != false) {
                output.WriteRawTag(24);
                output.WriteBool(ShouldRepeat);
              }
              if (RepeatDistance != 0D) {
                output.WriteRawTag(33);
                output.WriteDouble(RepeatDistance);
              }
              if (ScrollingDirection != global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction.Left) {
                output.WriteRawTag(40);
                output.WriteEnum((int) ScrollingDirection);
              }
              if (StartsOffScreen != false) {
                output.WriteRawTag(48);
                output.WriteBool(StartsOffScreen);
              }
              if (FadeLeft != 0D) {
                output.WriteRawTag(57);
                output.WriteDouble(FadeLeft);
              }
              if (FadeRight != 0D) {
                output.WriteRawTag(65);
                output.WriteDouble(FadeRight);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (ShouldScroll != false) {
                size += 1 + 1;
              }
              if (ScrollRate != 0D) {
                size += 1 + 8;
              }
              if (ShouldRepeat != false) {
                size += 1 + 1;
              }
              if (RepeatDistance != 0D) {
                size += 1 + 8;
              }
              if (ScrollingDirection != global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction.Left) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScrollingDirection);
              }
              if (StartsOffScreen != false) {
                size += 1 + 1;
              }
              if (FadeLeft != 0D) {
                size += 1 + 8;
              }
              if (FadeRight != 0D) {
                size += 1 + 8;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(TextScroller other) {
              if (other == null) {
                return;
              }
              if (other.ShouldScroll != false) {
                ShouldScroll = other.ShouldScroll;
              }
              if (other.ScrollRate != 0D) {
                ScrollRate = other.ScrollRate;
              }
              if (other.ShouldRepeat != false) {
                ShouldRepeat = other.ShouldRepeat;
              }
              if (other.RepeatDistance != 0D) {
                RepeatDistance = other.RepeatDistance;
              }
              if (other.ScrollingDirection != global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction.Left) {
                ScrollingDirection = other.ScrollingDirection;
              }
              if (other.StartsOffScreen != false) {
                StartsOffScreen = other.StartsOffScreen;
              }
              if (other.FadeLeft != 0D) {
                FadeLeft = other.FadeLeft;
              }
              if (other.FadeRight != 0D) {
                FadeRight = other.FadeRight;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    ShouldScroll = input.ReadBool();
                    break;
                  }
                  case 17: {
                    ScrollRate = input.ReadDouble();
                    break;
                  }
                  case 24: {
                    ShouldRepeat = input.ReadBool();
                    break;
                  }
                  case 33: {
                    RepeatDistance = input.ReadDouble();
                    break;
                  }
                  case 40: {
                    ScrollingDirection = (global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction) input.ReadEnum();
                    break;
                  }
                  case 48: {
                    StartsOffScreen = input.ReadBool();
                    break;
                  }
                  case 57: {
                    FadeLeft = input.ReadDouble();
                    break;
                  }
                  case 65: {
                    FadeRight = input.ReadDouble();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    ShouldScroll = input.ReadBool();
                    break;
                  }
                  case 17: {
                    ScrollRate = input.ReadDouble();
                    break;
                  }
                  case 24: {
                    ShouldRepeat = input.ReadBool();
                    break;
                  }
                  case 33: {
                    RepeatDistance = input.ReadDouble();
                    break;
                  }
                  case 40: {
                    ScrollingDirection = (global::Rv.Data.Slide.Types.Element.Types.TextScroller.Types.Direction) input.ReadEnum();
                    break;
                  }
                  case 48: {
                    StartsOffScreen = input.ReadBool();
                    break;
                  }
                  case 57: {
                    FadeLeft = input.ReadDouble();
                    break;
                  }
                  case 65: {
                    FadeRight = input.ReadDouble();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the TextScroller message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              public enum Direction {
                [pbr::OriginalName("DIRECTION_LEFT")] Left = 0,
                [pbr::OriginalName("DIRECTION_RIGHT")] Right = 1,
                [pbr::OriginalName("DIRECTION_UP")] Up = 2,
                [pbr::OriginalName("DIRECTION_DOWN")] Down = 3,
              }

            }
            #endregion

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
