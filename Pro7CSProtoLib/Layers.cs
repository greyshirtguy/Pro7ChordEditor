// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: layers.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Rv.Data {

  /// <summary>Holder for reflection information generated from layers.proto</summary>
  public static partial class LayersReflection {

    #region Descriptor
    /// <summary>File descriptor for layers.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LayersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxsYXllcnMucHJvdG8SB3J2LmRhdGEaDGhvdEtleS5wcm90bxoNZWZmZWN0",
            "cy5wcm90bxoQYmFzaWNUeXBlcy5wcm90byKdEwoFTGF5ZXISGwoEdXVpZBgB",
            "IAEoCzINLnJ2LmRhdGEuVVVJRBIMCgRuYW1lGAIgASgJEh0KBWNvbG9yGAMg",
            "ASgLMg4ucnYuZGF0YS5Db2xvchINCgVtdXRlZBgEIAEoCBIOCgZoaWRkZW4Y",
            "BSABKAgSLAoKYmxlbmRfbW9kZRgGIAEoDjIYLnJ2LmRhdGEuTGF5ZXIuQmxl",
            "bmRNb2RlEg8KB29wYWNpdHkYByABKAESLwoYc2VsZWN0ZWRfdGFyZ2V0X3Nl",
            "dF91dWlkGAggASgLMg0ucnYuZGF0YS5VVUlEEioKE2VmZmVjdHNfcHJlc2V0",
            "X3V1aWQYCSABKAsyDS5ydi5kYXRhLlVVSUQSHgoWZWZmZWN0c19idWlsZF9k",
            "dXJhdGlvbhgKIAEoARIoChFsYXllcl9wcmVzZXRfdXVpZBgLIAEoCzINLnJ2",
            "LmRhdGEuVVVJRBIgCgdob3Rfa2V5GAwgASgLMg8ucnYuZGF0YS5Ib3RLZXkS",
            "JwoKdHJhbnNpdGlvbhgNIAEoCzITLnJ2LmRhdGEuVHJhbnNpdGlvbhIgCgdl",
            "ZmZlY3RzGA4gAygLMg8ucnYuZGF0YS5FZmZlY3QSJgoFYmxlbmQYDyABKAsy",
            "Fy5ydi5kYXRhLkxheWVyLkJsZW5kaW5nGlIKBlByZXNldBIbCgR1dWlkGAEg",
            "ASgLMg0ucnYuZGF0YS5VVUlEEgwKBG5hbWUYAiABKAkSHQoFbGF5ZXIYAyAB",
            "KAsyDi5ydi5kYXRhLkxheWVyGpQJCghCbGVuZGluZxI0CghzdGFuZGFyZBgB",
            "IAEoCzIgLnJ2LmRhdGEuTGF5ZXIuQmxlbmRpbmcuU3RhbmRhcmRIABIuCgVt",
            "YXR0ZRgCIAEoCzIdLnJ2LmRhdGEuTGF5ZXIuQmxlbmRpbmcuTWF0dGVIABqc",
            "BgoIU3RhbmRhcmQSOAoEbW9kZRgBIAEoDjIqLnJ2LmRhdGEuTGF5ZXIuQmxl",
            "bmRpbmcuU3RhbmRhcmQuQmxlbmRNb2RlEg8KB29wYWNpdHkYAiABKAEixAUK",
            "CUJsZW5kTW9kZRIVChFCTEVORF9NT0RFX05PUk1BTBAAEhcKE0JMRU5EX01P",
            "REVfRElTU09MVkUQARIVChFCTEVORF9NT0RFX0RBUktFThACEhcKE0JMRU5E",
            "X01PREVfTVVMVElQTFkQAxIZChVCTEVORF9NT0RFX0NPTE9SX0JVUk4QBBIa",
            "ChZCTEVORF9NT0RFX0xJTkVBUl9CVVJOEAUSGwoXQkxFTkRfTU9ERV9EQVJL",
            "RVJfQ09MT1IQBhIWChJCTEVORF9NT0RFX0xJR0hURU4QBxIVChFCTEVORF9N",
            "T0RFX1NDUkVFThAIEhoKFkJMRU5EX01PREVfQ09MT1JfRE9ER0UQCRIbChdC",
            "TEVORF9NT0RFX0xJTkVBUl9ET0RHRRAKEhwKGEJMRU5EX01PREVfTElHSFRF",
            "Ul9DT0xPUhALEhYKEkJMRU5EX01PREVfT1ZFUkxBWRAMEhkKFUJMRU5EX01P",
            "REVfU09GVF9MSUdIVBANEhkKFUJMRU5EX01PREVfSEFSRF9MSUdIVBAOEhoK",
            "FkJMRU5EX01PREVfVklWSURfTElHSFQQDxIbChdCTEVORF9NT0RFX0xJTkVB",
            "Ul9MSUdIVBAQEhgKFEJMRU5EX01PREVfUElOX0xJR0hUEBESFwoTQkxFTkRf",
            "TU9ERV9IQVJEX01JWBASEhkKFUJMRU5EX01PREVfRElGRkVSRU5DRRATEhgK",
            "FEJMRU5EX01PREVfRVhDTFVTSU9OEBQSFwoTQkxFTkRfTU9ERV9TVUJUUkFD",
            "VBAVEhUKEUJMRU5EX01PREVfRElWSURFEBYSEgoOQkxFTkRfTU9ERV9IVUUQ",
            "FxIZChVCTEVORF9NT0RFX1NBVFVSQVRJT04QGBIUChBCTEVORF9NT0RFX0NP",
            "TE9SEBkSGQoVQkxFTkRfTU9ERV9MVU1JTk9TSVRZEBoa8gEKBU1hdHRlEjQK",
            "BWFscGhhGAEgASgLMiMucnYuZGF0YS5MYXllci5CbGVuZGluZy5NYXR0ZS5B",
            "bHBoYUgAEjIKBGx1bWEYAiABKAsyIi5ydi5kYXRhLkxheWVyLkJsZW5kaW5n",
            "Lk1hdHRlLkx1bWFIABI0CgV3aGl0ZRgEIAEoCzIjLnJ2LmRhdGEuTGF5ZXIu",
            "QmxlbmRpbmcuTWF0dGUuV2hpdGVIABoZCgVBbHBoYRIQCghpbnZlcnRlZBgB",
            "IAEoCBoYCgRMdW1hEhAKCGludmVydGVkGAEgASgIGgcKBVdoaXRlQgsKCU1h",
            "dHRlVHlwZUIOCgxCbGVuZGluZ1R5cGUixAUKCUJsZW5kTW9kZRIVChFCTEVO",
            "RF9NT0RFX05PUk1BTBAAEhcKE0JMRU5EX01PREVfRElTU09MVkUQARIVChFC",
            "TEVORF9NT0RFX0RBUktFThACEhcKE0JMRU5EX01PREVfTVVMVElQTFkQAxIZ",
            "ChVCTEVORF9NT0RFX0NPTE9SX0JVUk4QBBIaChZCTEVORF9NT0RFX0xJTkVB",
            "Ul9CVVJOEAUSGwoXQkxFTkRfTU9ERV9EQVJLRVJfQ09MT1IQBhIWChJCTEVO",
            "RF9NT0RFX0xJR0hURU4QBxIVChFCTEVORF9NT0RFX1NDUkVFThAIEhoKFkJM",
            "RU5EX01PREVfQ09MT1JfRE9ER0UQCRIbChdCTEVORF9NT0RFX0xJTkVBUl9E",
            "T0RHRRAKEhwKGEJMRU5EX01PREVfTElHSFRFUl9DT0xPUhALEhYKEkJMRU5E",
            "X01PREVfT1ZFUkxBWRAMEhkKFUJMRU5EX01PREVfU09GVF9MSUdIVBANEhkK",
            "FUJMRU5EX01PREVfSEFSRF9MSUdIVBAOEhoKFkJMRU5EX01PREVfVklWSURf",
            "TElHSFQQDxIbChdCTEVORF9NT0RFX0xJTkVBUl9MSUdIVBAQEhgKFEJMRU5E",
            "X01PREVfUElOX0xJR0hUEBESFwoTQkxFTkRfTU9ERV9IQVJEX01JWBASEhkK",
            "FUJMRU5EX01PREVfRElGRkVSRU5DRRATEhgKFEJMRU5EX01PREVfRVhDTFVT",
            "SU9OEBQSFwoTQkxFTkRfTU9ERV9TVUJUUkFDVBAVEhUKEUJMRU5EX01PREVf",
            "RElWSURFEBYSEgoOQkxFTkRfTU9ERV9IVUUQFxIZChVCTEVORF9NT0RFX1NB",
            "VFVSQVRJT04QGBIUChBCTEVORF9NT0RFX0NPTE9SEBkSGQoVQkxFTkRfTU9E",
            "RV9MVU1JTk9TSVRZEBpiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Rv.Data.HotKeyReflection.Descriptor, global::Rv.Data.EffectsReflection.Descriptor, global::Rv.Data.BasicTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Layer), global::Rv.Data.Layer.Parser, new[]{ "Uuid", "Name", "Color", "Muted", "Hidden", "BlendMode", "Opacity", "SelectedTargetSetUuid", "EffectsPresetUuid", "EffectsBuildDuration", "LayerPresetUuid", "HotKey", "Transition", "Effects", "Blend" }, null, new[]{ typeof(global::Rv.Data.Layer.Types.BlendMode) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Layer.Types.Preset), global::Rv.Data.Layer.Types.Preset.Parser, new[]{ "Uuid", "Name", "Layer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Layer.Types.Blending), global::Rv.Data.Layer.Types.Blending.Parser, new[]{ "Standard", "Matte" }, new[]{ "BlendingType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Layer.Types.Blending.Types.Standard), global::Rv.Data.Layer.Types.Blending.Types.Standard.Parser, new[]{ "Mode", "Opacity" }, null, new[]{ typeof(global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Layer.Types.Blending.Types.Matte), global::Rv.Data.Layer.Types.Blending.Types.Matte.Parser, new[]{ "Alpha", "Luma", "White" }, new[]{ "MatteType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Alpha), global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Alpha.Parser, new[]{ "Inverted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Luma), global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Luma.Parser, new[]{ "Inverted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.White), global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.White.Parser, null, null, null, null, null)})})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Layer : pb::IMessage<Layer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Layer> _parser = new pb::MessageParser<Layer>(() => new Layer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Layer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Rv.Data.LayersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Layer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Layer(Layer other) : this() {
      uuid_ = other.uuid_ != null ? other.uuid_.Clone() : null;
      name_ = other.name_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      muted_ = other.muted_;
      hidden_ = other.hidden_;
      blendMode_ = other.blendMode_;
      opacity_ = other.opacity_;
      selectedTargetSetUuid_ = other.selectedTargetSetUuid_ != null ? other.selectedTargetSetUuid_.Clone() : null;
      effectsPresetUuid_ = other.effectsPresetUuid_ != null ? other.effectsPresetUuid_.Clone() : null;
      effectsBuildDuration_ = other.effectsBuildDuration_;
      layerPresetUuid_ = other.layerPresetUuid_ != null ? other.layerPresetUuid_.Clone() : null;
      hotKey_ = other.hotKey_ != null ? other.hotKey_.Clone() : null;
      transition_ = other.transition_ != null ? other.transition_.Clone() : null;
      effects_ = other.effects_.Clone();
      blend_ = other.blend_ != null ? other.blend_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Layer Clone() {
      return new Layer(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private global::Rv.Data.UUID uuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.UUID Uuid {
      get { return uuid_; }
      set {
        uuid_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private global::Rv.Data.Color color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "muted" field.</summary>
    public const int MutedFieldNumber = 4;
    private bool muted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Muted {
      get { return muted_; }
      set {
        muted_ = value;
      }
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 5;
    private bool hidden_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Hidden {
      get { return hidden_; }
      set {
        hidden_ = value;
      }
    }

    /// <summary>Field number for the "blend_mode" field.</summary>
    public const int BlendModeFieldNumber = 6;
    private global::Rv.Data.Layer.Types.BlendMode blendMode_ = global::Rv.Data.Layer.Types.BlendMode.Normal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.Layer.Types.BlendMode BlendMode {
      get { return blendMode_; }
      set {
        blendMode_ = value;
      }
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 7;
    private double opacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Opacity {
      get { return opacity_; }
      set {
        opacity_ = value;
      }
    }

    /// <summary>Field number for the "selected_target_set_uuid" field.</summary>
    public const int SelectedTargetSetUuidFieldNumber = 8;
    private global::Rv.Data.UUID selectedTargetSetUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.UUID SelectedTargetSetUuid {
      get { return selectedTargetSetUuid_; }
      set {
        selectedTargetSetUuid_ = value;
      }
    }

    /// <summary>Field number for the "effects_preset_uuid" field.</summary>
    public const int EffectsPresetUuidFieldNumber = 9;
    private global::Rv.Data.UUID effectsPresetUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.UUID EffectsPresetUuid {
      get { return effectsPresetUuid_; }
      set {
        effectsPresetUuid_ = value;
      }
    }

    /// <summary>Field number for the "effects_build_duration" field.</summary>
    public const int EffectsBuildDurationFieldNumber = 10;
    private double effectsBuildDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double EffectsBuildDuration {
      get { return effectsBuildDuration_; }
      set {
        effectsBuildDuration_ = value;
      }
    }

    /// <summary>Field number for the "layer_preset_uuid" field.</summary>
    public const int LayerPresetUuidFieldNumber = 11;
    private global::Rv.Data.UUID layerPresetUuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.UUID LayerPresetUuid {
      get { return layerPresetUuid_; }
      set {
        layerPresetUuid_ = value;
      }
    }

    /// <summary>Field number for the "hot_key" field.</summary>
    public const int HotKeyFieldNumber = 12;
    private global::Rv.Data.HotKey hotKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.HotKey HotKey {
      get { return hotKey_; }
      set {
        hotKey_ = value;
      }
    }

    /// <summary>Field number for the "transition" field.</summary>
    public const int TransitionFieldNumber = 13;
    private global::Rv.Data.Transition transition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.Transition Transition {
      get { return transition_; }
      set {
        transition_ = value;
      }
    }

    /// <summary>Field number for the "effects" field.</summary>
    public const int EffectsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Rv.Data.Effect> _repeated_effects_codec
        = pb::FieldCodec.ForMessage(114, global::Rv.Data.Effect.Parser);
    private readonly pbc::RepeatedField<global::Rv.Data.Effect> effects_ = new pbc::RepeatedField<global::Rv.Data.Effect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Rv.Data.Effect> Effects {
      get { return effects_; }
    }

    /// <summary>Field number for the "blend" field.</summary>
    public const int BlendFieldNumber = 15;
    private global::Rv.Data.Layer.Types.Blending blend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Rv.Data.Layer.Types.Blending Blend {
      get { return blend_; }
      set {
        blend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Layer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Layer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Uuid, other.Uuid)) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (Muted != other.Muted) return false;
      if (Hidden != other.Hidden) return false;
      if (BlendMode != other.BlendMode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (!object.Equals(SelectedTargetSetUuid, other.SelectedTargetSetUuid)) return false;
      if (!object.Equals(EffectsPresetUuid, other.EffectsPresetUuid)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EffectsBuildDuration, other.EffectsBuildDuration)) return false;
      if (!object.Equals(LayerPresetUuid, other.LayerPresetUuid)) return false;
      if (!object.Equals(HotKey, other.HotKey)) return false;
      if (!object.Equals(Transition, other.Transition)) return false;
      if(!effects_.Equals(other.effects_)) return false;
      if (!object.Equals(Blend, other.Blend)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (uuid_ != null) hash ^= Uuid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (Muted != false) hash ^= Muted.GetHashCode();
      if (Hidden != false) hash ^= Hidden.GetHashCode();
      if (BlendMode != global::Rv.Data.Layer.Types.BlendMode.Normal) hash ^= BlendMode.GetHashCode();
      if (Opacity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Opacity);
      if (selectedTargetSetUuid_ != null) hash ^= SelectedTargetSetUuid.GetHashCode();
      if (effectsPresetUuid_ != null) hash ^= EffectsPresetUuid.GetHashCode();
      if (EffectsBuildDuration != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EffectsBuildDuration);
      if (layerPresetUuid_ != null) hash ^= LayerPresetUuid.GetHashCode();
      if (hotKey_ != null) hash ^= HotKey.GetHashCode();
      if (transition_ != null) hash ^= Transition.GetHashCode();
      hash ^= effects_.GetHashCode();
      if (blend_ != null) hash ^= Blend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (uuid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Uuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (color_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Color);
      }
      if (Muted != false) {
        output.WriteRawTag(32);
        output.WriteBool(Muted);
      }
      if (Hidden != false) {
        output.WriteRawTag(40);
        output.WriteBool(Hidden);
      }
      if (BlendMode != global::Rv.Data.Layer.Types.BlendMode.Normal) {
        output.WriteRawTag(48);
        output.WriteEnum((int) BlendMode);
      }
      if (Opacity != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Opacity);
      }
      if (selectedTargetSetUuid_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SelectedTargetSetUuid);
      }
      if (effectsPresetUuid_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EffectsPresetUuid);
      }
      if (EffectsBuildDuration != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(EffectsBuildDuration);
      }
      if (layerPresetUuid_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LayerPresetUuid);
      }
      if (hotKey_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(HotKey);
      }
      if (transition_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Transition);
      }
      effects_.WriteTo(output, _repeated_effects_codec);
      if (blend_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Blend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (uuid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Uuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (color_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Color);
      }
      if (Muted != false) {
        output.WriteRawTag(32);
        output.WriteBool(Muted);
      }
      if (Hidden != false) {
        output.WriteRawTag(40);
        output.WriteBool(Hidden);
      }
      if (BlendMode != global::Rv.Data.Layer.Types.BlendMode.Normal) {
        output.WriteRawTag(48);
        output.WriteEnum((int) BlendMode);
      }
      if (Opacity != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Opacity);
      }
      if (selectedTargetSetUuid_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SelectedTargetSetUuid);
      }
      if (effectsPresetUuid_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EffectsPresetUuid);
      }
      if (EffectsBuildDuration != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(EffectsBuildDuration);
      }
      if (layerPresetUuid_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LayerPresetUuid);
      }
      if (hotKey_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(HotKey);
      }
      if (transition_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Transition);
      }
      effects_.WriteTo(ref output, _repeated_effects_codec);
      if (blend_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Blend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (uuid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (Muted != false) {
        size += 1 + 1;
      }
      if (Hidden != false) {
        size += 1 + 1;
      }
      if (BlendMode != global::Rv.Data.Layer.Types.BlendMode.Normal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BlendMode);
      }
      if (Opacity != 0D) {
        size += 1 + 8;
      }
      if (selectedTargetSetUuid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectedTargetSetUuid);
      }
      if (effectsPresetUuid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EffectsPresetUuid);
      }
      if (EffectsBuildDuration != 0D) {
        size += 1 + 8;
      }
      if (layerPresetUuid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LayerPresetUuid);
      }
      if (hotKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HotKey);
      }
      if (transition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transition);
      }
      size += effects_.CalculateSize(_repeated_effects_codec);
      if (blend_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blend);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Layer other) {
      if (other == null) {
        return;
      }
      if (other.uuid_ != null) {
        if (uuid_ == null) {
          Uuid = new global::Rv.Data.UUID();
        }
        Uuid.MergeFrom(other.Uuid);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Rv.Data.Color();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.Muted != false) {
        Muted = other.Muted;
      }
      if (other.Hidden != false) {
        Hidden = other.Hidden;
      }
      if (other.BlendMode != global::Rv.Data.Layer.Types.BlendMode.Normal) {
        BlendMode = other.BlendMode;
      }
      if (other.Opacity != 0D) {
        Opacity = other.Opacity;
      }
      if (other.selectedTargetSetUuid_ != null) {
        if (selectedTargetSetUuid_ == null) {
          SelectedTargetSetUuid = new global::Rv.Data.UUID();
        }
        SelectedTargetSetUuid.MergeFrom(other.SelectedTargetSetUuid);
      }
      if (other.effectsPresetUuid_ != null) {
        if (effectsPresetUuid_ == null) {
          EffectsPresetUuid = new global::Rv.Data.UUID();
        }
        EffectsPresetUuid.MergeFrom(other.EffectsPresetUuid);
      }
      if (other.EffectsBuildDuration != 0D) {
        EffectsBuildDuration = other.EffectsBuildDuration;
      }
      if (other.layerPresetUuid_ != null) {
        if (layerPresetUuid_ == null) {
          LayerPresetUuid = new global::Rv.Data.UUID();
        }
        LayerPresetUuid.MergeFrom(other.LayerPresetUuid);
      }
      if (other.hotKey_ != null) {
        if (hotKey_ == null) {
          HotKey = new global::Rv.Data.HotKey();
        }
        HotKey.MergeFrom(other.HotKey);
      }
      if (other.transition_ != null) {
        if (transition_ == null) {
          Transition = new global::Rv.Data.Transition();
        }
        Transition.MergeFrom(other.Transition);
      }
      effects_.Add(other.effects_);
      if (other.blend_ != null) {
        if (blend_ == null) {
          Blend = new global::Rv.Data.Layer.Types.Blending();
        }
        Blend.MergeFrom(other.Blend);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (uuid_ == null) {
              Uuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(Uuid);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (color_ == null) {
              Color = new global::Rv.Data.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 32: {
            Muted = input.ReadBool();
            break;
          }
          case 40: {
            Hidden = input.ReadBool();
            break;
          }
          case 48: {
            BlendMode = (global::Rv.Data.Layer.Types.BlendMode) input.ReadEnum();
            break;
          }
          case 57: {
            Opacity = input.ReadDouble();
            break;
          }
          case 66: {
            if (selectedTargetSetUuid_ == null) {
              SelectedTargetSetUuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(SelectedTargetSetUuid);
            break;
          }
          case 74: {
            if (effectsPresetUuid_ == null) {
              EffectsPresetUuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(EffectsPresetUuid);
            break;
          }
          case 81: {
            EffectsBuildDuration = input.ReadDouble();
            break;
          }
          case 90: {
            if (layerPresetUuid_ == null) {
              LayerPresetUuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(LayerPresetUuid);
            break;
          }
          case 98: {
            if (hotKey_ == null) {
              HotKey = new global::Rv.Data.HotKey();
            }
            input.ReadMessage(HotKey);
            break;
          }
          case 106: {
            if (transition_ == null) {
              Transition = new global::Rv.Data.Transition();
            }
            input.ReadMessage(Transition);
            break;
          }
          case 114: {
            effects_.AddEntriesFrom(input, _repeated_effects_codec);
            break;
          }
          case 122: {
            if (blend_ == null) {
              Blend = new global::Rv.Data.Layer.Types.Blending();
            }
            input.ReadMessage(Blend);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (uuid_ == null) {
              Uuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(Uuid);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (color_ == null) {
              Color = new global::Rv.Data.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 32: {
            Muted = input.ReadBool();
            break;
          }
          case 40: {
            Hidden = input.ReadBool();
            break;
          }
          case 48: {
            BlendMode = (global::Rv.Data.Layer.Types.BlendMode) input.ReadEnum();
            break;
          }
          case 57: {
            Opacity = input.ReadDouble();
            break;
          }
          case 66: {
            if (selectedTargetSetUuid_ == null) {
              SelectedTargetSetUuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(SelectedTargetSetUuid);
            break;
          }
          case 74: {
            if (effectsPresetUuid_ == null) {
              EffectsPresetUuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(EffectsPresetUuid);
            break;
          }
          case 81: {
            EffectsBuildDuration = input.ReadDouble();
            break;
          }
          case 90: {
            if (layerPresetUuid_ == null) {
              LayerPresetUuid = new global::Rv.Data.UUID();
            }
            input.ReadMessage(LayerPresetUuid);
            break;
          }
          case 98: {
            if (hotKey_ == null) {
              HotKey = new global::Rv.Data.HotKey();
            }
            input.ReadMessage(HotKey);
            break;
          }
          case 106: {
            if (transition_ == null) {
              Transition = new global::Rv.Data.Transition();
            }
            input.ReadMessage(Transition);
            break;
          }
          case 114: {
            effects_.AddEntriesFrom(ref input, _repeated_effects_codec);
            break;
          }
          case 122: {
            if (blend_ == null) {
              Blend = new global::Rv.Data.Layer.Types.Blending();
            }
            input.ReadMessage(Blend);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Layer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum BlendMode {
        [pbr::OriginalName("BLEND_MODE_NORMAL")] Normal = 0,
        [pbr::OriginalName("BLEND_MODE_DISSOLVE")] Dissolve = 1,
        [pbr::OriginalName("BLEND_MODE_DARKEN")] Darken = 2,
        [pbr::OriginalName("BLEND_MODE_MULTIPLY")] Multiply = 3,
        [pbr::OriginalName("BLEND_MODE_COLOR_BURN")] ColorBurn = 4,
        [pbr::OriginalName("BLEND_MODE_LINEAR_BURN")] LinearBurn = 5,
        [pbr::OriginalName("BLEND_MODE_DARKER_COLOR")] DarkerColor = 6,
        [pbr::OriginalName("BLEND_MODE_LIGHTEN")] Lighten = 7,
        [pbr::OriginalName("BLEND_MODE_SCREEN")] Screen = 8,
        [pbr::OriginalName("BLEND_MODE_COLOR_DODGE")] ColorDodge = 9,
        [pbr::OriginalName("BLEND_MODE_LINEAR_DODGE")] LinearDodge = 10,
        [pbr::OriginalName("BLEND_MODE_LIGHTER_COLOR")] LighterColor = 11,
        [pbr::OriginalName("BLEND_MODE_OVERLAY")] Overlay = 12,
        [pbr::OriginalName("BLEND_MODE_SOFT_LIGHT")] SoftLight = 13,
        [pbr::OriginalName("BLEND_MODE_HARD_LIGHT")] HardLight = 14,
        [pbr::OriginalName("BLEND_MODE_VIVID_LIGHT")] VividLight = 15,
        [pbr::OriginalName("BLEND_MODE_LINEAR_LIGHT")] LinearLight = 16,
        [pbr::OriginalName("BLEND_MODE_PIN_LIGHT")] PinLight = 17,
        [pbr::OriginalName("BLEND_MODE_HARD_MIX")] HardMix = 18,
        [pbr::OriginalName("BLEND_MODE_DIFFERENCE")] Difference = 19,
        [pbr::OriginalName("BLEND_MODE_EXCLUSION")] Exclusion = 20,
        [pbr::OriginalName("BLEND_MODE_SUBTRACT")] Subtract = 21,
        [pbr::OriginalName("BLEND_MODE_DIVIDE")] Divide = 22,
        [pbr::OriginalName("BLEND_MODE_HUE")] Hue = 23,
        [pbr::OriginalName("BLEND_MODE_SATURATION")] Saturation = 24,
        [pbr::OriginalName("BLEND_MODE_COLOR")] Color = 25,
        [pbr::OriginalName("BLEND_MODE_LUMINOSITY")] Luminosity = 26,
      }

      public sealed partial class Preset : pb::IMessage<Preset>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Preset> _parser = new pb::MessageParser<Preset>(() => new Preset());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Preset> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.Layer.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Preset() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Preset(Preset other) : this() {
          uuid_ = other.uuid_ != null ? other.uuid_.Clone() : null;
          name_ = other.name_;
          layer_ = other.layer_ != null ? other.layer_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Preset Clone() {
          return new Preset(this);
        }

        /// <summary>Field number for the "uuid" field.</summary>
        public const int UuidFieldNumber = 1;
        private global::Rv.Data.UUID uuid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.UUID Uuid {
          get { return uuid_; }
          set {
            uuid_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "layer" field.</summary>
        public const int LayerFieldNumber = 3;
        private global::Rv.Data.Layer layer_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Layer Layer {
          get { return layer_; }
          set {
            layer_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Preset);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Preset other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Uuid, other.Uuid)) return false;
          if (Name != other.Name) return false;
          if (!object.Equals(Layer, other.Layer)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (uuid_ != null) hash ^= Uuid.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (layer_ != null) hash ^= Layer.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (uuid_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Uuid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (layer_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Layer);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (uuid_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Uuid);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (layer_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Layer);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (uuid_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (layer_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layer);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Preset other) {
          if (other == null) {
            return;
          }
          if (other.uuid_ != null) {
            if (uuid_ == null) {
              Uuid = new global::Rv.Data.UUID();
            }
            Uuid.MergeFrom(other.Uuid);
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.layer_ != null) {
            if (layer_ == null) {
              Layer = new global::Rv.Data.Layer();
            }
            Layer.MergeFrom(other.Layer);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (uuid_ == null) {
                  Uuid = new global::Rv.Data.UUID();
                }
                input.ReadMessage(Uuid);
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                if (layer_ == null) {
                  Layer = new global::Rv.Data.Layer();
                }
                input.ReadMessage(Layer);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (uuid_ == null) {
                  Uuid = new global::Rv.Data.UUID();
                }
                input.ReadMessage(Uuid);
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                if (layer_ == null) {
                  Layer = new global::Rv.Data.Layer();
                }
                input.ReadMessage(Layer);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Blending : pb::IMessage<Blending>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Blending> _parser = new pb::MessageParser<Blending>(() => new Blending());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Blending> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Rv.Data.Layer.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Blending() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Blending(Blending other) : this() {
          switch (other.BlendingTypeCase) {
            case BlendingTypeOneofCase.Standard:
              Standard = other.Standard.Clone();
              break;
            case BlendingTypeOneofCase.Matte:
              Matte = other.Matte.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Blending Clone() {
          return new Blending(this);
        }

        /// <summary>Field number for the "standard" field.</summary>
        public const int StandardFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Layer.Types.Blending.Types.Standard Standard {
          get { return blendingTypeCase_ == BlendingTypeOneofCase.Standard ? (global::Rv.Data.Layer.Types.Blending.Types.Standard) blendingType_ : null; }
          set {
            blendingType_ = value;
            blendingTypeCase_ = value == null ? BlendingTypeOneofCase.None : BlendingTypeOneofCase.Standard;
          }
        }

        /// <summary>Field number for the "matte" field.</summary>
        public const int MatteFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Rv.Data.Layer.Types.Blending.Types.Matte Matte {
          get { return blendingTypeCase_ == BlendingTypeOneofCase.Matte ? (global::Rv.Data.Layer.Types.Blending.Types.Matte) blendingType_ : null; }
          set {
            blendingType_ = value;
            blendingTypeCase_ = value == null ? BlendingTypeOneofCase.None : BlendingTypeOneofCase.Matte;
          }
        }

        private object blendingType_;
        /// <summary>Enum of possible cases for the "BlendingType" oneof.</summary>
        public enum BlendingTypeOneofCase {
          None = 0,
          Standard = 1,
          Matte = 2,
        }
        private BlendingTypeOneofCase blendingTypeCase_ = BlendingTypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BlendingTypeOneofCase BlendingTypeCase {
          get { return blendingTypeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBlendingType() {
          blendingTypeCase_ = BlendingTypeOneofCase.None;
          blendingType_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Blending);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Blending other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Standard, other.Standard)) return false;
          if (!object.Equals(Matte, other.Matte)) return false;
          if (BlendingTypeCase != other.BlendingTypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (blendingTypeCase_ == BlendingTypeOneofCase.Standard) hash ^= Standard.GetHashCode();
          if (blendingTypeCase_ == BlendingTypeOneofCase.Matte) hash ^= Matte.GetHashCode();
          hash ^= (int) blendingTypeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (blendingTypeCase_ == BlendingTypeOneofCase.Standard) {
            output.WriteRawTag(10);
            output.WriteMessage(Standard);
          }
          if (blendingTypeCase_ == BlendingTypeOneofCase.Matte) {
            output.WriteRawTag(18);
            output.WriteMessage(Matte);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (blendingTypeCase_ == BlendingTypeOneofCase.Standard) {
            output.WriteRawTag(10);
            output.WriteMessage(Standard);
          }
          if (blendingTypeCase_ == BlendingTypeOneofCase.Matte) {
            output.WriteRawTag(18);
            output.WriteMessage(Matte);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (blendingTypeCase_ == BlendingTypeOneofCase.Standard) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Standard);
          }
          if (blendingTypeCase_ == BlendingTypeOneofCase.Matte) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Matte);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Blending other) {
          if (other == null) {
            return;
          }
          switch (other.BlendingTypeCase) {
            case BlendingTypeOneofCase.Standard:
              if (Standard == null) {
                Standard = new global::Rv.Data.Layer.Types.Blending.Types.Standard();
              }
              Standard.MergeFrom(other.Standard);
              break;
            case BlendingTypeOneofCase.Matte:
              if (Matte == null) {
                Matte = new global::Rv.Data.Layer.Types.Blending.Types.Matte();
              }
              Matte.MergeFrom(other.Matte);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Rv.Data.Layer.Types.Blending.Types.Standard subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Standard();
                if (blendingTypeCase_ == BlendingTypeOneofCase.Standard) {
                  subBuilder.MergeFrom(Standard);
                }
                input.ReadMessage(subBuilder);
                Standard = subBuilder;
                break;
              }
              case 18: {
                global::Rv.Data.Layer.Types.Blending.Types.Matte subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Matte();
                if (blendingTypeCase_ == BlendingTypeOneofCase.Matte) {
                  subBuilder.MergeFrom(Matte);
                }
                input.ReadMessage(subBuilder);
                Matte = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Rv.Data.Layer.Types.Blending.Types.Standard subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Standard();
                if (blendingTypeCase_ == BlendingTypeOneofCase.Standard) {
                  subBuilder.MergeFrom(Standard);
                }
                input.ReadMessage(subBuilder);
                Standard = subBuilder;
                break;
              }
              case 18: {
                global::Rv.Data.Layer.Types.Blending.Types.Matte subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Matte();
                if (blendingTypeCase_ == BlendingTypeOneofCase.Matte) {
                  subBuilder.MergeFrom(Matte);
                }
                input.ReadMessage(subBuilder);
                Matte = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Blending message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public sealed partial class Standard : pb::IMessage<Standard>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Standard> _parser = new pb::MessageParser<Standard>(() => new Standard());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Standard> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Rv.Data.Layer.Types.Blending.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Standard() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Standard(Standard other) : this() {
              mode_ = other.mode_;
              opacity_ = other.opacity_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Standard Clone() {
              return new Standard(this);
            }

            /// <summary>Field number for the "mode" field.</summary>
            public const int ModeFieldNumber = 1;
            private global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode mode_ = global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode.Normal;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode Mode {
              get { return mode_; }
              set {
                mode_ = value;
              }
            }

            /// <summary>Field number for the "opacity" field.</summary>
            public const int OpacityFieldNumber = 2;
            private double opacity_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double Opacity {
              get { return opacity_; }
              set {
                opacity_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Standard);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Standard other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Mode != other.Mode) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Mode != global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode.Normal) hash ^= Mode.GetHashCode();
              if (Opacity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Opacity);
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Mode != global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode.Normal) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Mode);
              }
              if (Opacity != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(Opacity);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Mode != global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode.Normal) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Mode);
              }
              if (Opacity != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(Opacity);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Mode != global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode.Normal) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
              }
              if (Opacity != 0D) {
                size += 1 + 8;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Standard other) {
              if (other == null) {
                return;
              }
              if (other.Mode != global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode.Normal) {
                Mode = other.Mode;
              }
              if (other.Opacity != 0D) {
                Opacity = other.Opacity;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Mode = (global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode) input.ReadEnum();
                    break;
                  }
                  case 17: {
                    Opacity = input.ReadDouble();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Mode = (global::Rv.Data.Layer.Types.Blending.Types.Standard.Types.BlendMode) input.ReadEnum();
                    break;
                  }
                  case 17: {
                    Opacity = input.ReadDouble();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Standard message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              public enum BlendMode {
                [pbr::OriginalName("BLEND_MODE_NORMAL")] Normal = 0,
                [pbr::OriginalName("BLEND_MODE_DISSOLVE")] Dissolve = 1,
                [pbr::OriginalName("BLEND_MODE_DARKEN")] Darken = 2,
                [pbr::OriginalName("BLEND_MODE_MULTIPLY")] Multiply = 3,
                [pbr::OriginalName("BLEND_MODE_COLOR_BURN")] ColorBurn = 4,
                [pbr::OriginalName("BLEND_MODE_LINEAR_BURN")] LinearBurn = 5,
                [pbr::OriginalName("BLEND_MODE_DARKER_COLOR")] DarkerColor = 6,
                [pbr::OriginalName("BLEND_MODE_LIGHTEN")] Lighten = 7,
                [pbr::OriginalName("BLEND_MODE_SCREEN")] Screen = 8,
                [pbr::OriginalName("BLEND_MODE_COLOR_DODGE")] ColorDodge = 9,
                [pbr::OriginalName("BLEND_MODE_LINEAR_DODGE")] LinearDodge = 10,
                [pbr::OriginalName("BLEND_MODE_LIGHTER_COLOR")] LighterColor = 11,
                [pbr::OriginalName("BLEND_MODE_OVERLAY")] Overlay = 12,
                [pbr::OriginalName("BLEND_MODE_SOFT_LIGHT")] SoftLight = 13,
                [pbr::OriginalName("BLEND_MODE_HARD_LIGHT")] HardLight = 14,
                [pbr::OriginalName("BLEND_MODE_VIVID_LIGHT")] VividLight = 15,
                [pbr::OriginalName("BLEND_MODE_LINEAR_LIGHT")] LinearLight = 16,
                [pbr::OriginalName("BLEND_MODE_PIN_LIGHT")] PinLight = 17,
                [pbr::OriginalName("BLEND_MODE_HARD_MIX")] HardMix = 18,
                [pbr::OriginalName("BLEND_MODE_DIFFERENCE")] Difference = 19,
                [pbr::OriginalName("BLEND_MODE_EXCLUSION")] Exclusion = 20,
                [pbr::OriginalName("BLEND_MODE_SUBTRACT")] Subtract = 21,
                [pbr::OriginalName("BLEND_MODE_DIVIDE")] Divide = 22,
                [pbr::OriginalName("BLEND_MODE_HUE")] Hue = 23,
                [pbr::OriginalName("BLEND_MODE_SATURATION")] Saturation = 24,
                [pbr::OriginalName("BLEND_MODE_COLOR")] Color = 25,
                [pbr::OriginalName("BLEND_MODE_LUMINOSITY")] Luminosity = 26,
              }

            }
            #endregion

          }

          public sealed partial class Matte : pb::IMessage<Matte>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Matte> _parser = new pb::MessageParser<Matte>(() => new Matte());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Matte> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Rv.Data.Layer.Types.Blending.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Matte() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Matte(Matte other) : this() {
              switch (other.MatteTypeCase) {
                case MatteTypeOneofCase.Alpha:
                  Alpha = other.Alpha.Clone();
                  break;
                case MatteTypeOneofCase.Luma:
                  Luma = other.Luma.Clone();
                  break;
                case MatteTypeOneofCase.White:
                  White = other.White.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Matte Clone() {
              return new Matte(this);
            }

            /// <summary>Field number for the "alpha" field.</summary>
            public const int AlphaFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Alpha Alpha {
              get { return matteTypeCase_ == MatteTypeOneofCase.Alpha ? (global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Alpha) matteType_ : null; }
              set {
                matteType_ = value;
                matteTypeCase_ = value == null ? MatteTypeOneofCase.None : MatteTypeOneofCase.Alpha;
              }
            }

            /// <summary>Field number for the "luma" field.</summary>
            public const int LumaFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Luma Luma {
              get { return matteTypeCase_ == MatteTypeOneofCase.Luma ? (global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Luma) matteType_ : null; }
              set {
                matteType_ = value;
                matteTypeCase_ = value == null ? MatteTypeOneofCase.None : MatteTypeOneofCase.Luma;
              }
            }

            /// <summary>Field number for the "white" field.</summary>
            public const int WhiteFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.White White {
              get { return matteTypeCase_ == MatteTypeOneofCase.White ? (global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.White) matteType_ : null; }
              set {
                matteType_ = value;
                matteTypeCase_ = value == null ? MatteTypeOneofCase.None : MatteTypeOneofCase.White;
              }
            }

            private object matteType_;
            /// <summary>Enum of possible cases for the "MatteType" oneof.</summary>
            public enum MatteTypeOneofCase {
              None = 0,
              Alpha = 1,
              Luma = 2,
              White = 4,
            }
            private MatteTypeOneofCase matteTypeCase_ = MatteTypeOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MatteTypeOneofCase MatteTypeCase {
              get { return matteTypeCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearMatteType() {
              matteTypeCase_ = MatteTypeOneofCase.None;
              matteType_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Matte);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Matte other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Alpha, other.Alpha)) return false;
              if (!object.Equals(Luma, other.Luma)) return false;
              if (!object.Equals(White, other.White)) return false;
              if (MatteTypeCase != other.MatteTypeCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (matteTypeCase_ == MatteTypeOneofCase.Alpha) hash ^= Alpha.GetHashCode();
              if (matteTypeCase_ == MatteTypeOneofCase.Luma) hash ^= Luma.GetHashCode();
              if (matteTypeCase_ == MatteTypeOneofCase.White) hash ^= White.GetHashCode();
              hash ^= (int) matteTypeCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (matteTypeCase_ == MatteTypeOneofCase.Alpha) {
                output.WriteRawTag(10);
                output.WriteMessage(Alpha);
              }
              if (matteTypeCase_ == MatteTypeOneofCase.Luma) {
                output.WriteRawTag(18);
                output.WriteMessage(Luma);
              }
              if (matteTypeCase_ == MatteTypeOneofCase.White) {
                output.WriteRawTag(34);
                output.WriteMessage(White);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (matteTypeCase_ == MatteTypeOneofCase.Alpha) {
                output.WriteRawTag(10);
                output.WriteMessage(Alpha);
              }
              if (matteTypeCase_ == MatteTypeOneofCase.Luma) {
                output.WriteRawTag(18);
                output.WriteMessage(Luma);
              }
              if (matteTypeCase_ == MatteTypeOneofCase.White) {
                output.WriteRawTag(34);
                output.WriteMessage(White);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (matteTypeCase_ == MatteTypeOneofCase.Alpha) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Alpha);
              }
              if (matteTypeCase_ == MatteTypeOneofCase.Luma) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Luma);
              }
              if (matteTypeCase_ == MatteTypeOneofCase.White) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(White);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Matte other) {
              if (other == null) {
                return;
              }
              switch (other.MatteTypeCase) {
                case MatteTypeOneofCase.Alpha:
                  if (Alpha == null) {
                    Alpha = new global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Alpha();
                  }
                  Alpha.MergeFrom(other.Alpha);
                  break;
                case MatteTypeOneofCase.Luma:
                  if (Luma == null) {
                    Luma = new global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Luma();
                  }
                  Luma.MergeFrom(other.Luma);
                  break;
                case MatteTypeOneofCase.White:
                  if (White == null) {
                    White = new global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.White();
                  }
                  White.MergeFrom(other.White);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Alpha subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Alpha();
                    if (matteTypeCase_ == MatteTypeOneofCase.Alpha) {
                      subBuilder.MergeFrom(Alpha);
                    }
                    input.ReadMessage(subBuilder);
                    Alpha = subBuilder;
                    break;
                  }
                  case 18: {
                    global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Luma subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Luma();
                    if (matteTypeCase_ == MatteTypeOneofCase.Luma) {
                      subBuilder.MergeFrom(Luma);
                    }
                    input.ReadMessage(subBuilder);
                    Luma = subBuilder;
                    break;
                  }
                  case 34: {
                    global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.White subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.White();
                    if (matteTypeCase_ == MatteTypeOneofCase.White) {
                      subBuilder.MergeFrom(White);
                    }
                    input.ReadMessage(subBuilder);
                    White = subBuilder;
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Alpha subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Alpha();
                    if (matteTypeCase_ == MatteTypeOneofCase.Alpha) {
                      subBuilder.MergeFrom(Alpha);
                    }
                    input.ReadMessage(subBuilder);
                    Alpha = subBuilder;
                    break;
                  }
                  case 18: {
                    global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Luma subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.Luma();
                    if (matteTypeCase_ == MatteTypeOneofCase.Luma) {
                      subBuilder.MergeFrom(Luma);
                    }
                    input.ReadMessage(subBuilder);
                    Luma = subBuilder;
                    break;
                  }
                  case 34: {
                    global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.White subBuilder = new global::Rv.Data.Layer.Types.Blending.Types.Matte.Types.White();
                    if (matteTypeCase_ == MatteTypeOneofCase.White) {
                      subBuilder.MergeFrom(White);
                    }
                    input.ReadMessage(subBuilder);
                    White = subBuilder;
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Matte message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              public sealed partial class Alpha : pb::IMessage<Alpha>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<Alpha> _parser = new pb::MessageParser<Alpha>(() => new Alpha());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<Alpha> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Layer.Types.Blending.Types.Matte.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Alpha() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Alpha(Alpha other) : this() {
                  inverted_ = other.inverted_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Alpha Clone() {
                  return new Alpha(this);
                }

                /// <summary>Field number for the "inverted" field.</summary>
                public const int InvertedFieldNumber = 1;
                private bool inverted_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Inverted {
                  get { return inverted_; }
                  set {
                    inverted_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as Alpha);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(Alpha other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Inverted != other.Inverted) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Inverted != false) hash ^= Inverted.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Inverted != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(Inverted);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Inverted != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(Inverted);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (Inverted != false) {
                    size += 1 + 1;
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(Alpha other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Inverted != false) {
                    Inverted = other.Inverted;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Inverted = input.ReadBool();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        Inverted = input.ReadBool();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class Luma : pb::IMessage<Luma>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<Luma> _parser = new pb::MessageParser<Luma>(() => new Luma());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<Luma> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Layer.Types.Blending.Types.Matte.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Luma() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Luma(Luma other) : this() {
                  inverted_ = other.inverted_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public Luma Clone() {
                  return new Luma(this);
                }

                /// <summary>Field number for the "inverted" field.</summary>
                public const int InvertedFieldNumber = 1;
                private bool inverted_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Inverted {
                  get { return inverted_; }
                  set {
                    inverted_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as Luma);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(Luma other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Inverted != other.Inverted) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Inverted != false) hash ^= Inverted.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Inverted != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(Inverted);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Inverted != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(Inverted);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (Inverted != false) {
                    size += 1 + 1;
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(Luma other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Inverted != false) {
                    Inverted = other.Inverted;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Inverted = input.ReadBool();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        Inverted = input.ReadBool();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class White : pb::IMessage<White>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<White> _parser = new pb::MessageParser<White>(() => new White());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<White> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Rv.Data.Layer.Types.Blending.Types.Matte.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public White() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public White(White other) : this() {
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public White Clone() {
                  return new White(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as White);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(White other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(White other) {
                  if (other == null) {
                    return;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
